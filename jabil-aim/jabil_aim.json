{
    "imports": [
        "github.com/project-flogo/flow",
        "github.com/dovetail-lab/fabric-chaincode/activity/cid",
        "github.com/project-flogo/contrib/activity/log",
        "github.com/dovetail-lab/fabric-chaincode/activity/get",
        "github.com/dovetail-lab/fabric-chaincode/activity/put",
        "github.com/project-flogo/contrib/activity/actreturn",
        "github.com/project-flogo/contrib/activity/error",
        "github.com/project-flogo/flow/activity/subflow",
        "github.com/dovetail-lab/fabric-chaincode/activity/delete",
        "github.com/dovetail-lab/fabric-chaincode/activity/getbycompositekey",
        "github.com/dovetail-lab/fabric-chaincode/activity/gethistory",
        "github.com/dovetail-lab/fabric-chaincode/activity/query",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/mapper",
        "github.com/dovetail-lab/fabric-chaincode/trigger/transaction",
        "github.com/project-flogo/contrib/function/array",
        "github.com/project-flogo/contrib/function/string",
        "github.com/dovetail-lab/fabric-chaincode/function/dovetail",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/function/utility",
        "github.com/project-flogo/contrib/function/coerce",
        "github.com/project-flogo/contrib/function/json",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/function/boolean"
    ],
    "name": "jabil_aim",
    "description": " ",
    "version": "2.0.0",
    "type": "flogo:app",
    "appModel": "1.1.1",
    "feVersion": "2.10.0",
    "triggers": [
        {
            "ref": "#transaction",
            "name": "fabric-transaction",
            "description": "This trigger executes a Hyperledger Fabric transaction",
            "settings": {},
            "id": "FabricTransaction",
            "handlers": [
                {
                    "description": "create or update a Supplier",
                    "settings": {
                        "name": "PutSupplier",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:PutSupplier"
                        },
                        "input": {
                            "parameters": {
                                "mapping": {
                                    "supplier": "=$.parameters.supplier"
                                }
                            }
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": "=$.returns"
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://SupplierLedger"
                        },
                        "output": {
                            "parameters": "schema://SupplierRequest"
                        }
                    },
                    "name": "PutSupplier"
                },
                {
                    "description": "Retrieve a supplier by its SupplierID",
                    "settings": {
                        "name": "GetSupplier",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:GetSupplier"
                        },
                        "input": {
                            "parameters": {
                                "mapping": {
                                    "SupplierID": "=$.parameters.SupplierID"
                                }
                            }
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": "=$.returns"
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://SupplierLedger"
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"SupplierID\": \"\"\n}"
                            }
                        }
                    },
                    "name": "GetSupplier"
                },
                {
                    "description": "Create or update an agreement and its terms",
                    "settings": {
                        "name": "PutAgreement",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:PutAgreement"
                        },
                        "input": {
                            "parameters": {
                                "mapping": {
                                    "agreement": "=$.parameters.agreement"
                                }
                            }
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": "=$.returns"
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://AgreementLedger"
                        },
                        "output": {
                            "parameters": "schema://AgreementRequest"
                        }
                    },
                    "name": "PutAgreement"
                },
                {
                    "description": "Retrieve an agreement by its AgreementID",
                    "settings": {
                        "name": "GetAgreement",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:GetAgreement"
                        },
                        "input": {
                            "parameters": {
                                "mapping": {
                                    "AgreementID": "=$.parameters.AgreementID"
                                }
                            }
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": "=$.returns"
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://AgreementLedger"
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"AgreementID\": \"\"\n}"
                            }
                        }
                    },
                    "name": "GetAgreement"
                },
                {
                    "description": "Delete current state of a supplier of specified SupplierID",
                    "settings": {
                        "name": "DeleteSupplier",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:DeleteSupplier"
                        },
                        "input": {
                            "parameters": {
                                "mapping": {
                                    "SupplierID": "=$.parameters.SupplierID"
                                }
                            }
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": "=$.returns"
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://SupplierLedger"
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"SupplierID\": \"\"\n}"
                            }
                        }
                    },
                    "name": "DeleteSupplier"
                },
                {
                    "description": "Delete an agreement of specified AgreementID",
                    "settings": {
                        "name": "DeleteAgreement",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:DeleteAgreement"
                        },
                        "input": {
                            "parameters": {
                                "mapping": {
                                    "AgreementID": "=$.parameters.AgreementID"
                                }
                            }
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": "=$.returns"
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://AgreementLedger"
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"AgreementID\": \"\"\n}"
                            }
                        }
                    },
                    "name": "DeleteAgreement"
                },
                {
                    "description": "Retrieve agreements of a specified supplier",
                    "settings": {
                        "name": "GetSupplierAgreements",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:GetSupplierAgreements"
                        },
                        "input": {
                            "parameters": {
                                "mapping": {
                                    "SupplierID": "=$.parameters.SupplierID"
                                }
                            }
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": {
                                "mapping": {
                                    "@foreach($.returns,returns)": {
                                        "key": "=$loop.key",
                                        "value": "=$loop.value"
                                    }
                                }
                            }
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://AgreementLedgerMap"
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"SupplierID\": \"\"\n}"
                            }
                        }
                    },
                    "name": "GetSupplierAgreements"
                },
                {
                    "description": "Record a bulk-load of purchasing records",
                    "settings": {
                        "name": "PutBulkLoad",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:PutBulkLoad"
                        },
                        "input": {
                            "parameters": {
                                "mapping": {
                                    "bulkLoad": "=$.parameters.bulkLoad"
                                }
                            }
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": "=$.returns"
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://BulkLoadLedger"
                        },
                        "output": {
                            "parameters": "schema://BulkLoadRequest"
                        }
                    },
                    "name": "PutBulkLoad"
                },
                {
                    "description": "Retrieve data of a bulk-load of specified BulkLoadID",
                    "settings": {
                        "name": "GetBulkLoad",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:GetBulkLoad"
                        },
                        "input": {
                            "parameters": {
                                "mapping": {
                                    "BulkLoadID": "=$.parameters.BulkLoadID"
                                }
                            }
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": "=$.returns"
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://BulkLoadLedger"
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"BulkLoadID\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"BulkLoadID\": \"\"\n}"
                            }
                        }
                    },
                    "name": "GetBulkLoad"
                },
                {
                    "description": "Create or update monthly total purchase amount of a previous year",
                    "settings": {
                        "name": "PutMonthlyPurchase",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:PutMonthlyPurchase"
                        },
                        "input": {
                            "parameters": {
                                "mapping": {
                                    "summary": "=$.parameters.summary"
                                }
                            }
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": "=$.returns"
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://MonthlyPurchaseLedger"
                        },
                        "output": {
                            "parameters": "schema://MonthlyPurchaseRequest"
                        }
                    },
                    "name": "PutMonthlyPurchase"
                },
                {
                    "description": "Retrieve monthly total purchase from a supplier in a previous year",
                    "settings": {
                        "name": "GetMonthlyPurchases",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:GetMonthlyPurchases"
                        },
                        "input": {
                            "parameters": "=$.parameters"
                        },
                        "output": {
                            "status": "=$.status",
                            "returns": {
                                "mapping": {
                                    "@foreach($.returns,returns)": {
                                        "key": "=$loop.key",
                                        "value": "=$loop.value"
                                    }
                                }
                            }
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://MonthlyPurchaseMap"
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"}}}",
                                "fe_metadata": "{\n    \"SupplierID\": \"\",\n    \"Year\": 2019\n}"
                            }
                        }
                    },
                    "name": "GetMonthlyPurchases"
                },
                {
                    "description": "Create or update list of purchase records",
                    "settings": {
                        "name": "PutPurchases",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:PutPurchases"
                        },
                        "input": {
                            "parameters": "=$.parameters"
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": {
                                "mapping": {
                                    "@foreach($.returns,returns)": {
                                        "key": "=$loop.key",
                                        "value": "=$loop.value"
                                    }
                                }
                            }
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://PurchaseMap"
                        },
                        "output": {
                            "parameters": "schema://PurchasesRequest"
                        }
                    },
                    "name": "PutPurchases"
                },
                {
                    "description": "Retrieve purchased items by specified supplier and reconciliation status",
                    "settings": {
                        "name": "GetPurchasesPerSupplier",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:GetPurchasesPerSupplier"
                        },
                        "input": {
                            "parameters": "=$.parameters"
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": {
                                "mapping": {
                                    "@foreach($.returns,returns)": {
                                        "key": "=$loop.key",
                                        "value": "=$loop.value"
                                    }
                                }
                            }
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://PurchaseMap"
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"}}}",
                                "fe_metadata": "{\n    \"SupplierID\": \"\",\n    \"VerifiedBy\": \"\",\n    \"Year\": 2019,\n    \"Month\": 1\n}"
                            }
                        }
                    },
                    "name": "GetPurchasesPerSupplier"
                },
                {
                    "description": "Retrieve history of an agreement of a specified AgreementID",
                    "settings": {
                        "name": "GetAgreementHistory",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:GetAgreementHistory"
                        },
                        "input": {
                            "parameters": {
                                "mapping": {
                                    "AgreementID": "=$.parameters.AgreementID"
                                }
                            }
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": {
                                "mapping": {
                                    "@foreach($.returns,returns)": {
                                        "txID": "=$loop.txID",
                                        "txTime": "=$loop.txTime",
                                        "isDeleted": "=$loop.isDeleted",
                                        "value": "=$loop.value"
                                    }
                                }
                            }
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://AgreementHistory"
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"AgreementID\": \"\"\n}"
                            }
                        }
                    },
                    "name": "GetAgreementHistory"
                },
                {
                    "description": "Retrieve history of a purchase item of specified PO and MPN",
                    "settings": {
                        "name": "GetReconciliationHistory",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:GetReconciliationHistory"
                        },
                        "input": {
                            "parameters": "=$.parameters"
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": {
                                "mapping": {
                                    "@foreach($.returns,returns)": {
                                        "txID": "=$loop.txID",
                                        "txTime": "=$loop.txTime",
                                        "isDeleted": "=$loop.isDeleted",
                                        "value": "=$loop.value"
                                    }
                                }
                            }
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://PurchaseHistory"
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"ManufacturePartNbr\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"PurchaseOrderNbr\": \"\",\n    \"ManufacturePartNbr\": \"\"\n}"
                            }
                        }
                    },
                    "name": "GetReconciliationHistory"
                },
                {
                    "description": "Rich query for all supplier states",
                    "settings": {
                        "name": "QueryAllSuppliers",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:QueryAllSuppliers"
                        },
                        "input": {
                            "txID": "=$.txID",
                            "txTime": "=$.txTime"
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": {
                                "mapping": {
                                    "@foreach($.returns,returns)": {
                                        "key": "=$loop.key",
                                        "value": "=$loop.value"
                                    }
                                }
                            }
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://SupplierMap"
                        }
                    },
                    "name": "QueryAllSuppliers"
                },
                {
                    "description": "Sum up reconciled purchase amounts of a specified supplier for a year and month. Update the corresponding state of MonthlyPurchase.",
                    "settings": {
                        "name": "CalculateMonthlyPurchase",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:CalculateMonthlyPurchase"
                        },
                        "input": {
                            "parameters": "=$.parameters"
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": "=$.returns"
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://MonthlyPurchaseLedger"
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"SupplierID\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"Year\": 2019,\n    \"Month\": 1,\n    \"SupplierID\": \"\"\n}"
                            }
                        }
                    },
                    "name": "CalculateMonthlyPurchase"
                },
                {
                    "description": "Query all agreements, primary or not",
                    "settings": {
                        "name": "QueryAllAgreements",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:QueryAllAgreements"
                        },
                        "input": {
                            "parameters": {
                                "mapping": {
                                    "PrimaryOnly": "=$.parameters.PrimaryOnly"
                                }
                            }
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": {
                                "mapping": {
                                    "@foreach($.returns,returns)": {
                                        "key": "=$loop.key",
                                        "value": "=$loop.value"
                                    }
                                }
                            }
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://AgreementLedgerMap"
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"PrimaryOnly\":{\"type\":\"boolean\"}}}",
                                "fe_metadata": "{\n    \"PrimaryOnly\": true\n}"
                            }
                        }
                    },
                    "name": "QueryAllAgreements"
                },
                {
                    "description": "calculate rebate amount for a specified period from a supplier",
                    "settings": {
                        "name": "CalculateRebate",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:CalculateRebate"
                        },
                        "input": {
                            "parameters": "=$.parameters"
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": {
                                "mapping": {
                                    "RebateAmt": "=$.returns.RebateAmt"
                                }
                            }
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"RebateAmt\":{\"type\":\"number\"}}}",
                                "fe_metadata": "{\n    \"RebateAmt\": 0\n}"
                            }
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"},\"AgreementID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Sequence\":{\"type\":\"number\"}}}",
                                "fe_metadata": "{\n    \"SupplierID\": \"\",\n    \"AgreementID\": \"\",\n    \"Year\": 0,\n    \"Sequence\": 0\n}"
                            }
                        }
                    },
                    "name": "CalculateRebate"
                },
                {
                    "description": "Delete current state of a PO item",
                    "settings": {
                        "name": "DeletePurchase",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:DeletePurchase"
                        },
                        "input": {
                            "parameters": "=$.parameters"
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": "=$.returns"
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://PurchaseLedger"
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"ManufacturerPartNbr\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"PurchaseOrderNbr\": \"\",\n    \"ManufacturerPartNbr\": \"\"\n}"
                            }
                        }
                    },
                    "name": "DeletePurchase"
                }
            ]
        }
    ],
    "resources": [
        {
            "id": "flow:PutSupplier",
            "data": {
                "name": "PutSupplier",
                "description": "create or update a Supplier",
                "links": [
                    {
                        "id": 1,
                        "from": "Cid",
                        "to": "LogRequestor",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "LogRequestor",
                        "to": "Get",
                        "type": "expression",
                        "label": "Authorized",
                        "value": "$activity[Cid].attrs.entity == $property[\"Entity.JABIL\"] || $activity[Cid].attrs.entity == $flow.parameters.supplier.SupplierID"
                    },
                    {
                        "id": 3,
                        "from": "Get",
                        "to": "LogGet",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "LogGet",
                        "to": "Put1",
                        "type": "expression",
                        "label": "UpdateSupplier",
                        "value": "$activity[Get].code == 200"
                    },
                    {
                        "id": 5,
                        "from": "Put1",
                        "to": "LogUpdate",
                        "type": "default"
                    },
                    {
                        "id": 6,
                        "from": "LogUpdate",
                        "to": "Return1",
                        "type": "default"
                    },
                    {
                        "id": 7,
                        "from": "LogGet",
                        "to": "Put",
                        "type": "exprOtherwise",
                        "label": "CreateSupplier"
                    },
                    {
                        "id": 8,
                        "from": "Put",
                        "to": "LogCreate",
                        "type": "default"
                    },
                    {
                        "id": 9,
                        "from": "LogCreate",
                        "to": "Return",
                        "type": "default"
                    },
                    {
                        "id": 10,
                        "from": "LogRequestor",
                        "to": "LogUnauthorized",
                        "type": "exprOtherwise",
                        "label": "NotAuthorized"
                    },
                    {
                        "id": 11,
                        "from": "LogUnauthorized",
                        "to": "ThrowError",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Cid",
                        "name": "Cid",
                        "description": "This activity returns requesting client ID",
                        "activity": {
                            "ref": "#cid",
                            "schemas": {
                                "output": {
                                    "attrs": "schema://ClientID"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogRequestor",
                        "name": "LogRequestor",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"PutSupplier by user \", $activity[Cid].attrs.email, \" for supplier \", $flow.parameters.supplier.SupplierID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Get",
                        "name": "Get",
                        "description": "This activity fetches data by key from fabric ledger",
                        "activity": {
                            "ref": "#get",
                            "input": {
                                "key": "=$flow.parameters.supplier.SupplierID",
                                "privateCollection": ""
                            },
                            "schemas": {
                                "output": {
                                    "result": "schema://SupplierLedger"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogGet",
                        "name": "LogGet",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[GetSupplier] \", $activity[Get].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Put1",
                        "name": "Put1",
                        "description": "This activity stores data to fabric ledger",
                        "activity": {
                            "ref": "#put",
                            "input": {
                                "key": "=$activity[Get].key",
                                "privateCollection": "",
                                "compositeKeys": "",
                                "data": {
                                    "mapping": {
                                        "SupplierID": "=$activity[Get].result.SupplierID",
                                        "TenantID": "=dovetail.notZeroValue($activity[Get].result.TenantID, $flow.parameters.supplier.TenantID)",
                                        "GlobalCode": "=dovetail.notZeroValue($activity[Get].result.GlobalCode, $flow.parameters.supplier.GlobalCode)",
                                        "FullName": "=dovetail.notZeroValue($activity[Get].result.FullName, $flow.parameters.supplier.FullName)",
                                        "ShortName": "=dovetail.notZeroValue($activity[Get].result.ShortName, $flow.parameters.supplier.ShortName)",
                                        "Description": "=dovetail.notZeroValue($activity[Get].result.Description, $flow.parameters.supplier.Description)",
                                        "Region": "=dovetail.notZeroValue($activity[Get].result.Region, $flow.parameters.supplier.Region)",
                                        "Commodity": "=dovetail.notZeroValue($activity[Get].result.Commodity, $flow.parameters.supplier.Commodity)",
                                        "HighLevelCommodity": "=dovetail.notZeroValue($activity[Get].result.HighLevelCommodity, $flow.parameters.supplier.HighLevelCommodity)",
                                        "WebsiteURL": "=dovetail.notZeroValue($activity[Get].result.WebsiteURL, $flow.parameters.supplier.WebsiteURL)",
                                        "TickerSymbol": "=dovetail.notZeroValue($activity[Get].result.TickerSymbol, $flow.parameters.supplier.TickerSymbol)",
                                        "DocType": "=$activity[Get].result.DocType",
                                        "Address": {
                                            "Street1": "=dovetail.notZeroValue($activity[Get].result.Address.Street1, $flow.parameters.supplier.Address.Street1)",
                                            "Street2": "=dovetail.notZeroValue($activity[Get].result.Address.Street2, $flow.parameters.supplier.Address.Street2)",
                                            "Street3": "=dovetail.notZeroValue($activity[Get].result.Address.Street3, $flow.parameters.supplier.Address.Street3)",
                                            "Street4": "=dovetail.notZeroValue($flow.parameters.supplier.Address.Street4, $flow.parameters.supplier.Address.Street4)",
                                            "CityOrMunicipality": "=dovetail.notZeroValue($activity[Get].result.Address.CityOrMunicipality, $flow.parameters.supplier.Address.CityOrMunicipality)",
                                            "StateOrProvince": "=dovetail.notZeroValue($activity[Get].result.Address.StateOrProvince, $flow.parameters.supplier.Address.StateOrProvince)",
                                            "CountyOrSubdivision": "=dovetail.notZeroValue($activity[Get].result.Address.CountyOrSubdivision, $flow.parameters.supplier.Address.CountyOrSubdivision)",
                                            "ZipOrPostcode": "=dovetail.notZeroValue($activity[Get].result.Address.ZipOrPostcode, $flow.parameters.supplier.Address.ZipOrPostcode)",
                                            "Country": "=dovetail.notZeroValue($activity[Get].result.Address.Country, $flow.parameters.supplier.Address.Country)"
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "data": "schema://SupplierLedger"
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"SupplierID\": {\n            \"type\": \"string\"\n        },\n        \"TenantID\": {\n            \"type\": \"string\"\n        },\n        \"GlobalCode\": {\n            \"type\": \"string\"\n        },\n        \"FullName\": {\n            \"type\": \"string\"\n        },\n        \"ShortName\": {\n            \"type\": \"string\"\n        },\n        \"Description\": {\n            \"type\": \"string\"\n        },\n        \"Region\": {\n            \"type\": \"string\"\n        },\n        \"Commodity\": {\n            \"type\": \"string\"\n        },\n        \"HighLevelCommodity\": {\n            \"type\": \"string\"\n        },\n        \"Address\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"Street1\": {\n                    \"type\": \"string\"\n                },\n                \"Street2\": {\n                    \"type\": \"string\"\n                },\n                \"Street3\": {\n                    \"type\": \"string\"\n                },\n                \"Street4\": {\n                    \"type\": \"string\"\n                },\n                \"CityOrMunicipality\": {\n                    \"type\": \"string\"\n                },\n                \"StateOrProvince\": {\n                    \"type\": \"string\"\n                },\n                \"CountyOrSubdivision\": {\n                    \"type\": \"string\"\n                },\n                \"ZipOrPostcode\": {\n                    \"type\": \"string\"\n                },\n                \"Country\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"WebsiteURL\": {\n            \"type\": \"string\"\n        },\n        \"TickerSymbol\": {\n            \"type\": \"string\"\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}",
                                        "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"SupplierID\": {\n            \"type\": \"string\"\n        },\n        \"TenantID\": {\n            \"type\": \"string\"\n        },\n        \"GlobalCode\": {\n            \"type\": \"string\"\n        },\n        \"FullName\": {\n            \"type\": \"string\"\n        },\n        \"ShortName\": {\n            \"type\": \"string\"\n        },\n        \"Description\": {\n            \"type\": \"string\"\n        },\n        \"Region\": {\n            \"type\": \"string\"\n        },\n        \"Commodity\": {\n            \"type\": \"string\"\n        },\n        \"HighLevelCommodity\": {\n            \"type\": \"string\"\n        },\n        \"Address\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"Street1\": {\n                    \"type\": \"string\"\n                },\n                \"Street2\": {\n                    \"type\": \"string\"\n                },\n                \"Street3\": {\n                    \"type\": \"string\"\n                },\n                \"Street4\": {\n                    \"type\": \"string\"\n                },\n                \"CityOrMunicipality\": {\n                    \"type\": \"string\"\n                },\n                \"StateOrProvince\": {\n                    \"type\": \"string\"\n                },\n                \"CountyOrSubdivision\": {\n                    \"type\": \"string\"\n                },\n                \"ZipOrPostcode\": {\n                    \"type\": \"string\"\n                },\n                \"Country\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"WebsiteURL\": {\n            \"type\": \"string\"\n        },\n        \"TickerSymbol\": {\n            \"type\": \"string\"\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogUpdate",
                        "name": "LogUpdate",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[UpdateSupplier] \", $activity[Put1].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return1",
                        "name": "Return1",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[Put1].code",
                                    "message": "=$activity[Put1].message",
                                    "returns": "=$activity[Put1].result"
                                }
                            }
                        }
                    },
                    {
                        "id": "Put",
                        "name": "Put",
                        "description": "This activity stores data to fabric ledger",
                        "activity": {
                            "ref": "#put",
                            "input": {
                                "key": "=$flow.parameters.supplier.SupplierID",
                                "privateCollection": "",
                                "compositeKeys": "",
                                "data": {
                                    "mapping": {
                                        "SupplierID": "=$flow.parameters.supplier.SupplierID",
                                        "TenantID": "=$flow.parameters.supplier.TenantID",
                                        "GlobalCode": "=$flow.parameters.supplier.GlobalCode",
                                        "FullName": "=$flow.parameters.supplier.FullName",
                                        "ShortName": "=$flow.parameters.supplier.ShortName",
                                        "Description": "=$flow.parameters.supplier.Description",
                                        "Region": "=$flow.parameters.supplier.Region",
                                        "Commodity": "=$flow.parameters.supplier.Commodity",
                                        "HighLevelCommodity": "=$flow.parameters.supplier.HighLevelCommodity",
                                        "Address": "=$flow.parameters.supplier.Address",
                                        "WebsiteURL": "=$flow.parameters.supplier.WebsiteURL",
                                        "TickerSymbol": "=$flow.parameters.supplier.TickerSymbol",
                                        "DocType": "=$property[\"DocType.SUPPLIER\"]"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "data": "schema://SupplierLedger"
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"SupplierID\": {\n            \"type\": \"string\"\n        },\n        \"TenantID\": {\n            \"type\": \"string\"\n        },\n        \"GlobalCode\": {\n            \"type\": \"string\"\n        },\n        \"FullName\": {\n            \"type\": \"string\"\n        },\n        \"ShortName\": {\n            \"type\": \"string\"\n        },\n        \"Description\": {\n            \"type\": \"string\"\n        },\n        \"Region\": {\n            \"type\": \"string\"\n        },\n        \"Commodity\": {\n            \"type\": \"string\"\n        },\n        \"HighLevelCommodity\": {\n            \"type\": \"string\"\n        },\n        \"Address\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"Street1\": {\n                    \"type\": \"string\"\n                },\n                \"Street2\": {\n                    \"type\": \"string\"\n                },\n                \"Street3\": {\n                    \"type\": \"string\"\n                },\n                \"Street4\": {\n                    \"type\": \"string\"\n                },\n                \"CityOrMunicipality\": {\n                    \"type\": \"string\"\n                },\n                \"StateOrProvince\": {\n                    \"type\": \"string\"\n                },\n                \"CountyOrSubdivision\": {\n                    \"type\": \"string\"\n                },\n                \"ZipOrPostcode\": {\n                    \"type\": \"string\"\n                },\n                \"Country\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"WebsiteURL\": {\n            \"type\": \"string\"\n        },\n        \"TickerSymbol\": {\n            \"type\": \"string\"\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}",
                                        "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"SupplierID\": {\n            \"type\": \"string\"\n        },\n        \"TenantID\": {\n            \"type\": \"string\"\n        },\n        \"GlobalCode\": {\n            \"type\": \"string\"\n        },\n        \"FullName\": {\n            \"type\": \"string\"\n        },\n        \"ShortName\": {\n            \"type\": \"string\"\n        },\n        \"Description\": {\n            \"type\": \"string\"\n        },\n        \"Region\": {\n            \"type\": \"string\"\n        },\n        \"Commodity\": {\n            \"type\": \"string\"\n        },\n        \"HighLevelCommodity\": {\n            \"type\": \"string\"\n        },\n        \"Address\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"Street1\": {\n                    \"type\": \"string\"\n                },\n                \"Street2\": {\n                    \"type\": \"string\"\n                },\n                \"Street3\": {\n                    \"type\": \"string\"\n                },\n                \"Street4\": {\n                    \"type\": \"string\"\n                },\n                \"CityOrMunicipality\": {\n                    \"type\": \"string\"\n                },\n                \"StateOrProvince\": {\n                    \"type\": \"string\"\n                },\n                \"CountyOrSubdivision\": {\n                    \"type\": \"string\"\n                },\n                \"ZipOrPostcode\": {\n                    \"type\": \"string\"\n                },\n                \"Country\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"WebsiteURL\": {\n            \"type\": \"string\"\n        },\n        \"TickerSymbol\": {\n            \"type\": \"string\"\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogCreate",
                        "name": "LogCreate",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[CreateSupplier] \", $activity[Put].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[Put].code",
                                    "message": "=$activity[Put].message",
                                    "returns": "=$activity[Put].result"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogUnauthorized",
                        "name": "LogUnauthorized",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"User \", $activity[Cid].attrs.alias, \" of \", $activity[Cid].attrs.entity, \" cannot update supplier \", $flow.parameters.supplier.SupplierID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "ThrowError",
                        "name": "ThrowError",
                        "description": "Throws an Error",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"User is not authorized to update supplier \", $flow.parameters.supplier.SupplierID)"
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"supplier\":{\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"},\"TenantID\":{\"type\":\"string\"},\"GlobalCode\":{\"type\":\"string\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Description\":{\"type\":\"string\"},\"Region\":{\"type\":\"string\"},\"Commodity\":{\"type\":\"string\"},\"HighLevelCommodity\":{\"type\":\"string\"},\"Address\":{\"type\":\"object\",\"properties\":{\"Street1\":{\"type\":\"string\"},\"Street2\":{\"type\":\"string\"},\"Street3\":{\"type\":\"string\"},\"Street4\":{\"type\":\"string\"},\"CityOrMunicipality\":{\"type\":\"string\"},\"StateOrProvince\":{\"type\":\"string\"},\"CountyOrSubdivision\":{\"type\":\"string\"},\"ZipOrPostcode\":{\"type\":\"string\"},\"Country\":{\"type\":\"string\"}}},\"WebsiteURL\":{\"type\":\"string\"},\"TickerSymbol\":{\"type\":\"string\"},\"DocType\":{\"type\":\"string\"}}}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"SupplierID\":{\"type\":\"string\"},\"TenantID\":{\"type\":\"string\"},\"GlobalCode\":{\"type\":\"string\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Description\":{\"type\":\"string\"},\"Region\":{\"type\":\"string\"},\"Commodity\":{\"type\":\"string\"},\"HighLevelCommodity\":{\"type\":\"string\"},\"Address\":{\"type\":\"object\",\"properties\":{\"Street1\":{\"type\":\"string\"},\"Street2\":{\"type\":\"string\"},\"Street3\":{\"type\":\"string\"},\"Street4\":{\"type\":\"string\"},\"CityOrMunicipality\":{\"type\":\"string\"},\"StateOrProvince\":{\"type\":\"string\"},\"CountyOrSubdivision\":{\"type\":\"string\"},\"ZipOrPostcode\":{\"type\":\"string\"},\"Country\":{\"type\":\"string\"}}},\"WebsiteURL\":{\"type\":\"string\"},\"TickerSymbol\":{\"type\":\"string\"},\"DocType\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"supplier\":{\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"},\"TenantID\":{\"type\":\"string\"},\"GlobalCode\":{\"type\":\"string\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Description\":{\"type\":\"string\"},\"Region\":{\"type\":\"string\"},\"Commodity\":{\"type\":\"string\"},\"HighLevelCommodity\":{\"type\":\"string\"},\"Address\":{\"type\":\"object\",\"properties\":{\"Street1\":{\"type\":\"string\"},\"Street2\":{\"type\":\"string\"},\"Street3\":{\"type\":\"string\"},\"Street4\":{\"type\":\"string\"},\"CityOrMunicipality\":{\"type\":\"string\"},\"StateOrProvince\":{\"type\":\"string\"},\"CountyOrSubdivision\":{\"type\":\"string\"},\"ZipOrPostcode\":{\"type\":\"string\"},\"Country\":{\"type\":\"string\"}}},\"WebsiteURL\":{\"type\":\"string\"},\"TickerSymbol\":{\"type\":\"string\"},\"DocType\":{\"type\":\"string\"}}}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"},\"TenantID\":{\"type\":\"string\"},\"GlobalCode\":{\"type\":\"string\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Description\":{\"type\":\"string\"},\"Region\":{\"type\":\"string\"},\"Commodity\":{\"type\":\"string\"},\"HighLevelCommodity\":{\"type\":\"string\"},\"Address\":{\"type\":\"object\",\"properties\":{\"Street1\":{\"type\":\"string\"},\"Street2\":{\"type\":\"string\"},\"Street3\":{\"type\":\"string\"},\"Street4\":{\"type\":\"string\"},\"CityOrMunicipality\":{\"type\":\"string\"},\"StateOrProvince\":{\"type\":\"string\"},\"CountyOrSubdivision\":{\"type\":\"string\"},\"ZipOrPostcode\":{\"type\":\"string\"},\"Country\":{\"type\":\"string\"}}},\"WebsiteURL\":{\"type\":\"string\"},\"TickerSymbol\":{\"type\":\"string\"},\"DocType\":{\"type\":\"string\"}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:GetSupplier",
            "data": {
                "name": "GetSupplier",
                "description": "Retrieve a supplier by its SupplierID",
                "links": [
                    {
                        "id": 1,
                        "from": "Cid",
                        "to": "LogRequestor",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "LogRequestor",
                        "to": "Get",
                        "type": "expression",
                        "label": "Authorized",
                        "value": "$activity[Cid].attrs.entity == $property[\"Entity.JABIL\"] || $activity[Cid].attrs.entity == $flow.parameters.SupplierID"
                    },
                    {
                        "id": 3,
                        "from": "Get",
                        "to": "LogGet",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "LogGet",
                        "to": "Return",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "LogRequestor",
                        "to": "LogUnauthorized",
                        "type": "exprOtherwise",
                        "label": "NotAuthorized"
                    },
                    {
                        "id": 6,
                        "from": "LogUnauthorized",
                        "to": "ThrowError",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Cid",
                        "name": "Cid",
                        "description": "This activity returns requesting client ID",
                        "activity": {
                            "ref": "#cid",
                            "schemas": {
                                "output": {
                                    "attrs": "schema://ClientID"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogRequestor",
                        "name": "LogRequestor",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"GetSupplier by user \", $activity[Cid].attrs.email, \" for supplier \", $flow.parameters.SupplierID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Get",
                        "name": "Get",
                        "description": "This activity fetches data by key from fabric ledger",
                        "activity": {
                            "ref": "#get",
                            "input": {
                                "key": "=$flow.parameters.SupplierID",
                                "privateCollection": ""
                            },
                            "schemas": {
                                "output": {
                                    "result": "schema://SupplierLedger"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogGet",
                        "name": "LogGet",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[GetSupplier] \", $activity[Get].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[Get].code",
                                    "message": "=$activity[Get].message",
                                    "returns": "=$activity[Get].result"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogUnauthorized",
                        "name": "LogUnauthorized",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"User \", $activity[Cid].attrs.alias, \" of \", $activity[Cid].attrs.entity, \" cannot fetch supplier \", $flow.parameters.SupplierID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "ThrowError",
                        "name": "ThrowError",
                        "description": "Throws an Error",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"User is not authorized to fetch supplier \", $flow.parameters.SupplierID)"
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"SupplierID\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"SupplierID\":{\"type\":\"string\"},\"TenantID\":{\"type\":\"string\"},\"GlobalCode\":{\"type\":\"string\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Description\":{\"type\":\"string\"},\"Region\":{\"type\":\"string\"},\"Commodity\":{\"type\":\"string\"},\"HighLevelCommodity\":{\"type\":\"string\"},\"Address\":{\"type\":\"object\",\"properties\":{\"Street1\":{\"type\":\"string\"},\"Street2\":{\"type\":\"string\"},\"Street3\":{\"type\":\"string\"},\"Street4\":{\"type\":\"string\"},\"CityOrMunicipality\":{\"type\":\"string\"},\"StateOrProvince\":{\"type\":\"string\"},\"CountyOrSubdivision\":{\"type\":\"string\"},\"ZipOrPostcode\":{\"type\":\"string\"},\"Country\":{\"type\":\"string\"}}},\"WebsiteURL\":{\"type\":\"string\"},\"TickerSymbol\":{\"type\":\"string\"},\"DocType\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"},\"TenantID\":{\"type\":\"string\"},\"GlobalCode\":{\"type\":\"string\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Description\":{\"type\":\"string\"},\"Region\":{\"type\":\"string\"},\"Commodity\":{\"type\":\"string\"},\"HighLevelCommodity\":{\"type\":\"string\"},\"Address\":{\"type\":\"object\",\"properties\":{\"Street1\":{\"type\":\"string\"},\"Street2\":{\"type\":\"string\"},\"Street3\":{\"type\":\"string\"},\"Street4\":{\"type\":\"string\"},\"CityOrMunicipality\":{\"type\":\"string\"},\"StateOrProvince\":{\"type\":\"string\"},\"CountyOrSubdivision\":{\"type\":\"string\"},\"ZipOrPostcode\":{\"type\":\"string\"},\"Country\":{\"type\":\"string\"}}},\"WebsiteURL\":{\"type\":\"string\"},\"TickerSymbol\":{\"type\":\"string\"},\"DocType\":{\"type\":\"string\"}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:PutAgreement",
            "data": {
                "name": "PutAgreement",
                "description": "Create or update an agreement and its terms",
                "links": [
                    {
                        "id": 1,
                        "from": "Cid",
                        "to": "LogRequestor",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "LogRequestor",
                        "to": "Get",
                        "type": "expression",
                        "label": "Authorized",
                        "value": "$activity[Cid].attrs.entity == $property[\"Entity.JABIL\"] || $activity[Cid].attrs.entity == $flow.parameters.agreement.SupplierID"
                    },
                    {
                        "id": 3,
                        "from": "Get",
                        "to": "LogGet",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "LogGet",
                        "to": "CreateAgreement",
                        "type": "expression",
                        "label": "Create",
                        "value": "$activity[Get].code != 200"
                    },
                    {
                        "id": 5,
                        "from": "CreateAgreement",
                        "to": "Return",
                        "type": "default"
                    },
                    {
                        "id": 6,
                        "from": "LogGet",
                        "to": "MergeAgreement",
                        "type": "exprOtherwise",
                        "label": "Update"
                    },
                    {
                        "id": 7,
                        "from": "MergeAgreement",
                        "to": "LogMerged",
                        "type": "default"
                    },
                    {
                        "id": 8,
                        "from": "LogMerged",
                        "to": "DeleteKey",
                        "type": "expression",
                        "label": "PrimaryChanged",
                        "value": "$activity[Get].result.IsPrimary != $activity[MergeAgreement].result.IsPrimary"
                    },
                    {
                        "id": 9,
                        "from": "DeleteKey",
                        "to": "UpdateAgreement",
                        "type": "default"
                    },
                    {
                        "id": 10,
                        "from": "UpdateAgreement",
                        "to": "Return1",
                        "type": "default"
                    },
                    {
                        "id": 11,
                        "from": "LogMerged",
                        "to": "UpdateAgreement2",
                        "type": "exprOtherwise",
                        "label": "SamePrimary"
                    },
                    {
                        "id": 12,
                        "from": "UpdateAgreement2",
                        "to": "Return2",
                        "type": "default"
                    },
                    {
                        "id": 13,
                        "from": "LogRequestor",
                        "to": "LogUnauthorized",
                        "type": "exprOtherwise",
                        "label": "Unauthorized"
                    },
                    {
                        "id": 14,
                        "from": "LogUnauthorized",
                        "to": "ThrowError",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Cid",
                        "name": "Cid",
                        "description": "This activity returns requesting client ID",
                        "activity": {
                            "ref": "#cid",
                            "schemas": {
                                "output": {
                                    "attrs": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"alias\":{\"type\":\"string\"},\"entity\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"alias\": \"\",\n    \"entity\": \"\",\n    \"email\": \"\"\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogRequestor",
                        "name": "LogRequestor",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"PutAgreement by user \", $activity[Cid].attrs.email, \" for agreement \", $flow.parameters.agreement.AgreementID, \" with supplier \", $flow.parameters.agreement.SupplierID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Get",
                        "name": "Get",
                        "description": "This activity fetches data by key from fabric ledger",
                        "activity": {
                            "ref": "#get",
                            "input": {
                                "key": "=$flow.parameters.agreement.AgreementID",
                                "privateCollection": ""
                            },
                            "schemas": {
                                "output": {
                                    "result": "schema://AgreementLedger"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogGet",
                        "name": "LogGet",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[GetAgreement] \", $activity[Get].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "CreateAgreement",
                        "name": "CreateAgreement",
                        "description": "Simple SubFlow Activity",
                        "activity": {
                            "ref": "#subflow",
                            "settings": {
                                "flowURI": "res://flow:UpdateAgreementSubflow"
                            },
                            "input": {
                                "agreement": {
                                    "mapping": {
                                        "AgreementID": "=$flow.parameters.agreement.AgreementID",
                                        "SupplierID": "=$flow.parameters.agreement.SupplierID",
                                        "IsPrimary": "=$flow.parameters.agreement.IsPrimary",
                                        "FullName": "=$flow.parameters.agreement.FullName",
                                        "ShortName": "=$flow.parameters.agreement.ShortName",
                                        "Status": "=$flow.parameters.agreement.Status",
                                        "SignatureDate": "=$flow.parameters.agreement.SignatureDate",
                                        "SignedBy": "=$flow.parameters.agreement.SignedBy",
                                        "ReferenceID": "=$flow.parameters.agreement.ReferenceID",
                                        "ReferenceHash": "=$flow.parameters.agreement.ReferenceHash",
                                        "StartDate": "=$flow.parameters.agreement.StartDate",
                                        "EndDate": "=$flow.parameters.agreement.EndDate",
                                        "CollectionFrequency": "=$flow.parameters.agreement.CollectionFrequency",
                                        "Type": "=$flow.parameters.agreement.Type",
                                        "GrowthTerms": {
                                            "@foreach($flow.parameters.agreement.GrowthTerms,GrowthTerms)": {
                                                "MinSaleGrowth": "=$loop.MinSaleGrowth",
                                                "BonusPct": "=$loop.BonusPct"
                                            }
                                        },
                                        "StandardTerms": {
                                            "@foreach($flow.parameters.agreement.StandardTerms,StandardTerms)": {
                                                "MinSaleAmt": "=$loop.MinSaleAmt",
                                                "BonusPct": "=$loop.BonusPct"
                                            }
                                        },
                                        "DocType": "=$property[\"DocType.AGREEMENT\"]"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"agreement\":{\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"agreement\":{\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}}}}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"status\":{\"type\":\"number\"},\"message\":{\"type\":\"string\"},\"result\":{\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"status\":{\"type\":\"number\"},\"message\":{\"type\":\"string\"},\"result\":{\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[CreateAgreement].status",
                                    "message": "=$activity[CreateAgreement].message",
                                    "returns": "=$activity[CreateAgreement].result"
                                }
                            }
                        }
                    },
                    {
                        "id": "MergeAgreement",
                        "name": "MergeAgreement",
                        "description": "Simple SubFlow Activity",
                        "activity": {
                            "ref": "#subflow",
                            "settings": {
                                "flowURI": "res://flow:MergeAgreementSubflow"
                            },
                            "input": {
                                "original": "=$activity[Get].result",
                                "update": "=$flow.parameters.agreement"
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"original\":{\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}},\"update\":{\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"original\":{\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}},\"update\":{\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}}}}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"result\":{\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"result\":{\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMerged",
                        "name": "LogMerged",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"Merged Agreement: \", utility.renderJSON($activity[MergeAgreement].result, false))",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "DeleteKey",
                        "name": "DeleteKey",
                        "description": "This activity deletes data from fabric world state",
                        "activity": {
                            "ref": "#delete",
                            "input": {
                                "key": "=$activity[Get].key",
                                "privateCollection": "",
                                "keysOnly": true,
                                "compositeKeys": "=$property[\"CompositeKeys.SupplierPrimary\"]"
                            },
                            "schemas": {
                                "output": {
                                    "result": "schema://AgreementLedger"
                                }
                            }
                        }
                    },
                    {
                        "id": "UpdateAgreement",
                        "name": "UpdateAgreement",
                        "description": "Simple SubFlow Activity",
                        "activity": {
                            "ref": "#subflow",
                            "settings": {
                                "flowURI": "res://flow:UpdateAgreementSubflow"
                            },
                            "input": {
                                "agreement": "=$activity[MergeAgreement].result"
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"agreement\":{\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"agreement\":{\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}}}}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"status\":{\"type\":\"number\"},\"message\":{\"type\":\"string\"},\"result\":{\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"status\":{\"type\":\"number\"},\"message\":{\"type\":\"string\"},\"result\":{\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return1",
                        "name": "Return1",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[UpdateAgreement].status",
                                    "message": "=$activity[UpdateAgreement].message",
                                    "returns": "=$activity[UpdateAgreement].result"
                                }
                            }
                        }
                    },
                    {
                        "id": "UpdateAgreement2",
                        "name": "UpdateAgreement2",
                        "description": "Simple SubFlow Activity",
                        "activity": {
                            "ref": "#subflow",
                            "settings": {
                                "flowURI": "res://flow:UpdateAgreementSubflow"
                            },
                            "input": {
                                "agreement": "=$activity[MergeAgreement].result"
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"agreement\":{\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"agreement\":{\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}}}}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"status\":{\"type\":\"number\"},\"message\":{\"type\":\"string\"},\"result\":{\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"status\":{\"type\":\"number\"},\"message\":{\"type\":\"string\"},\"result\":{\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return2",
                        "name": "Return2",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[UpdateAgreement2].status",
                                    "message": "=$activity[UpdateAgreement2].message",
                                    "returns": "=$activity[UpdateAgreement2].result"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogUnauthorized",
                        "name": "LogUnauthorized",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"User \", $activity[Cid].attrs.alias, \" of \", $activity[Cid].attrs.entity, \" cannot update aggreement \", $flow.parameters.agreement.AgreementID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "ThrowError",
                        "name": "ThrowError",
                        "description": "Throws an Error",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"User is not authorized to update agreement \", $flow.parameters.agreement.AgreementID)"
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"agreement\":{\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"agreement\":{\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:GetAgreement",
            "data": {
                "name": "GetAgreement",
                "description": "Retrieve an agreement by its AgreementID",
                "links": [
                    {
                        "id": 1,
                        "from": "Cid",
                        "to": "LogRequestor",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "LogRequestor",
                        "to": "Get",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "Get",
                        "to": "LogGet",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "LogGet",
                        "to": "Log",
                        "type": "expression",
                        "label": "Found",
                        "value": "$activity[Get].code == 200"
                    },
                    {
                        "id": 5,
                        "from": "Log",
                        "to": "Return",
                        "type": "expression",
                        "label": "Authorized",
                        "value": "$activity[Cid].attrs.entity == $property[\"Entity.JABIL\"] || $activity[Cid].attrs.entity == $activity[Get].result.SupplierID"
                    },
                    {
                        "id": 6,
                        "from": "Log",
                        "to": "LogUnauthorized",
                        "type": "exprOtherwise",
                        "label": "NotAuthorized"
                    },
                    {
                        "id": 7,
                        "from": "LogUnauthorized",
                        "to": "ThrowError",
                        "type": "default"
                    },
                    {
                        "id": 8,
                        "from": "LogGet",
                        "to": "Return1",
                        "type": "exprOtherwise",
                        "label": "NotFound"
                    }
                ],
                "tasks": [
                    {
                        "id": "Cid",
                        "name": "Cid",
                        "description": "This activity returns requesting client ID",
                        "activity": {
                            "ref": "#cid",
                            "schemas": {
                                "output": {
                                    "attrs": "schema://ClientID"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogRequestor",
                        "name": "LogRequestor",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"GetAgreement by user \", $activity[Cid].attrs.email, \" for agreement \", $flow.parameters.AgreementID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Get",
                        "name": "Get",
                        "description": "This activity fetches data by key from fabric ledger",
                        "activity": {
                            "ref": "#get",
                            "input": {
                                "key": "=$flow.parameters.AgreementID",
                                "privateCollection": ""
                            },
                            "schemas": {
                                "output": {
                                    "result": "schema://AgreementLedger"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogGet",
                        "name": "LogGet",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[GetAgreement] \", $activity[Get].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"Agreement of supplier \", $activity[Get].result.SupplierID, \" compared with user entity \", $activity[Cid].attrs.entity)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[Get].code",
                                    "message": "=$activity[Get].message",
                                    "returns": "=$activity[Get].result"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogUnauthorized",
                        "name": "LogUnauthorized",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"User \", $activity[Cid].attrs.alias, \" of \", $activity[Cid].attrs.entity, \" cannot fetch aggreement \", $flow.parameters.AgreementID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "ThrowError",
                        "name": "ThrowError",
                        "description": "Throws an Error",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"User is not authorized to fetch agreement \", $flow.parameters.AgreementID)"
                            }
                        }
                    },
                    {
                        "id": "Return1",
                        "name": "Return1",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": 300,
                                    "message": "=string.concat(\"Agreement does not exist for \", $flow.parameters.AgreementID)"
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"AgreementID\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:DeleteSupplier",
            "data": {
                "name": "DeleteSupplier",
                "description": "Delete current state of a supplier of specified SupplierID",
                "links": [
                    {
                        "id": 1,
                        "from": "Cid",
                        "to": "LogRequestor",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "LogRequestor",
                        "to": "Delete",
                        "type": "expression",
                        "label": "Authorized",
                        "value": "$activity[Cid].attrs.entity == $property[\"Entity.JABIL\"]"
                    },
                    {
                        "id": 3,
                        "from": "Delete",
                        "to": "LogDelete",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "LogDelete",
                        "to": "Return",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "LogRequestor",
                        "to": "LogUnauthorized",
                        "type": "exprOtherwise",
                        "label": "NotAuthorized"
                    },
                    {
                        "id": 6,
                        "from": "LogUnauthorized",
                        "to": "ThrowError",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Cid",
                        "name": "Cid",
                        "description": "This activity returns requesting client ID",
                        "activity": {
                            "ref": "#cid",
                            "schemas": {
                                "output": {
                                    "attrs": "schema://ClientID"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogRequestor",
                        "name": "LogRequestor",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"DeleteSupplier by user \", $activity[Cid].attrs.email, \" for supplier \", $flow.parameters.SupplierID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Delete",
                        "name": "Delete",
                        "description": "This activity deletes data from fabric world state",
                        "activity": {
                            "ref": "#delete",
                            "input": {
                                "key": "=$flow.parameters.SupplierID",
                                "privateCollection": "",
                                "keysOnly": false,
                                "compositeKeys": ""
                            },
                            "schemas": {
                                "output": {
                                    "result": "schema://SupplierLedger"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogDelete",
                        "name": "LogDelete",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[DeleteSupplier] \", $activity[Delete].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[Delete].code",
                                    "message": "=$activity[Delete].message",
                                    "returns": "=$activity[Delete].result"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogUnauthorized",
                        "name": "LogUnauthorized",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"User \", $activity[Cid].attrs.alias, \" of \", $activity[Cid].attrs.entity, \" cannot delete supplier \", $flow.parameters.SupplierID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "ThrowError",
                        "name": "ThrowError",
                        "description": "Throws an Error",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"User is not authorized to delete supplier \", $flow.parameters.SupplierID)"
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"SupplierID\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"SupplierID\":{\"type\":\"string\"},\"TenantID\":{\"type\":\"string\"},\"GlobalCode\":{\"type\":\"string\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Description\":{\"type\":\"string\"},\"Region\":{\"type\":\"string\"},\"Commodity\":{\"type\":\"string\"},\"HighLevelCommodity\":{\"type\":\"string\"},\"Address\":{\"type\":\"object\",\"properties\":{\"Street1\":{\"type\":\"string\"},\"Street2\":{\"type\":\"string\"},\"Street3\":{\"type\":\"string\"},\"Street4\":{\"type\":\"string\"},\"CityOrMunicipality\":{\"type\":\"string\"},\"StateOrProvince\":{\"type\":\"string\"},\"CountyOrSubdivision\":{\"type\":\"string\"},\"ZipOrPostcode\":{\"type\":\"string\"},\"Country\":{\"type\":\"string\"}}},\"WebsiteURL\":{\"type\":\"string\"},\"TickerSymbol\":{\"type\":\"string\"},\"DocType\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"},\"TenantID\":{\"type\":\"string\"},\"GlobalCode\":{\"type\":\"string\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Description\":{\"type\":\"string\"},\"Region\":{\"type\":\"string\"},\"Commodity\":{\"type\":\"string\"},\"HighLevelCommodity\":{\"type\":\"string\"},\"Address\":{\"type\":\"object\",\"properties\":{\"Street1\":{\"type\":\"string\"},\"Street2\":{\"type\":\"string\"},\"Street3\":{\"type\":\"string\"},\"Street4\":{\"type\":\"string\"},\"CityOrMunicipality\":{\"type\":\"string\"},\"StateOrProvince\":{\"type\":\"string\"},\"CountyOrSubdivision\":{\"type\":\"string\"},\"ZipOrPostcode\":{\"type\":\"string\"},\"Country\":{\"type\":\"string\"}}},\"WebsiteURL\":{\"type\":\"string\"},\"TickerSymbol\":{\"type\":\"string\"},\"DocType\":{\"type\":\"string\"}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:DeleteAgreement",
            "data": {
                "name": "DeleteAgreement",
                "description": "Delete an agreement of specified AgreementID",
                "links": [
                    {
                        "id": 1,
                        "from": "Cid",
                        "to": "LogRequestor",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "LogRequestor",
                        "to": "Delete",
                        "type": "expression",
                        "label": "Authorized",
                        "value": "$activity[Cid].attrs.entity == $property[\"Entity.JABIL\"]"
                    },
                    {
                        "id": 3,
                        "from": "Delete",
                        "to": "LogDelete",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "LogDelete",
                        "to": "Return",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "LogRequestor",
                        "to": "LogUnauthorized",
                        "type": "exprOtherwise",
                        "label": "NotAuthorized"
                    },
                    {
                        "id": 6,
                        "from": "LogUnauthorized",
                        "to": "ThrowError",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Cid",
                        "name": "Cid",
                        "description": "This activity returns requesting client ID",
                        "activity": {
                            "ref": "#cid",
                            "schemas": {
                                "output": {
                                    "attrs": "schema://ClientID"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogRequestor",
                        "name": "LogRequestor",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"DeleteAgreement by user \", $activity[Cid].attrs.email, \" for agreement \", $flow.parameters.AgreementID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Delete",
                        "name": "Delete",
                        "description": "This activity deletes data from fabric world state",
                        "activity": {
                            "ref": "#delete",
                            "input": {
                                "key": "=$flow.parameters.AgreementID",
                                "privateCollection": "",
                                "keysOnly": false,
                                "compositeKeys": "=$property[\"CompositeKeys.SupplierPrimary\"]"
                            },
                            "schemas": {
                                "output": {
                                    "result": "schema://AgreementLedger"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogDelete",
                        "name": "LogDelete",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[DeleteAgreement] \", $activity[Delete].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[Delete].code",
                                    "message": "=$activity[Delete].message",
                                    "returns": "=$activity[Delete].result"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogUnauthorized",
                        "name": "LogUnauthorized",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"User \", $activity[Cid].attrs.alias, \" of \", $activity[Cid].attrs.entity, \" cannot delete aggreement \", $flow.parameters.AgreementID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "ThrowError",
                        "name": "ThrowError",
                        "description": "Throws an Error",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"User is not authorized to delete agreement \", $flow.parameters.AgreementID)"
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"AgreementID\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:GetSupplierAgreements",
            "data": {
                "name": "GetSupplierAgreements",
                "description": "Retrieve agreements of a specified supplier",
                "links": [
                    {
                        "id": 1,
                        "from": "Cid",
                        "to": "LogRequestor",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "LogRequestor",
                        "to": "GetByCompositeKey",
                        "type": "expression",
                        "label": "Authorized",
                        "value": "$activity[Cid].attrs.entity == $property[\"Entity.JABIL\"] || $activity[Cid].attrs.entity == $flow.parameters.SupplierID"
                    },
                    {
                        "id": 3,
                        "from": "GetByCompositeKey",
                        "to": "LogGet",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "LogGet",
                        "to": "Return",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "LogRequestor",
                        "to": "LogUnauthorized",
                        "type": "exprOtherwise",
                        "label": "NotAuthorized"
                    },
                    {
                        "id": 6,
                        "from": "LogUnauthorized",
                        "to": "ThrowError",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Cid",
                        "name": "Cid",
                        "description": "This activity returns requesting client ID",
                        "activity": {
                            "ref": "#cid",
                            "schemas": {
                                "output": {
                                    "attrs": "schema://ClientID"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogRequestor",
                        "name": "LogRequestor",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"GetSupplierAgreements by user \", $activity[Cid].attrs.email, \" for supplier \", $flow.parameters.SupplierID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "GetByCompositeKey",
                        "name": "GetByCompositeKey",
                        "description": "This activity fetches data by composite-key from fabric ledger",
                        "activity": {
                            "ref": "#getbycompositekey",
                            "input": {
                                "keyName": "=$property[\"CompositeKeys.SupplierPrimary\"]",
                                "usePagination": false,
                                "pageSize": 0,
                                "start": "",
                                "privateCollection": "",
                                "attributes": {
                                    "mapping": {
                                        "SupplierID": "=$flow.parameters.SupplierID"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "attributes": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"SupplierID\",\"type\":\"string\"}]"
                                    }
                                },
                                "output": {
                                    "result": "schema://AgreementLedgerMap"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogGet",
                        "name": "LogGet",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[GetAgreementsByCompositeKey] \", $activity[GetByCompositeKey].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[GetByCompositeKey].code",
                                    "message": "=$activity[GetByCompositeKey].message",
                                    "returns": {
                                        "mapping": {
                                            "@foreach($activity[\"GetByCompositeKey\"].result,returns)": {
                                                "key": "=$loop.key",
                                                "value": "=$loop.value"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogUnauthorized",
                        "name": "LogUnauthorized",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"User \", $activity[Cid].attrs.alias, \" of \", $activity[Cid].attrs.entity, \" cannot fetch agreements of supplier \", $flow.parameters.SupplierID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "ThrowError",
                        "name": "ThrowError",
                        "description": "Throws an Error",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"User is not authorized to fetch agreements of supplier \", $flow.parameters.SupplierID)"
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"SupplierID\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}}}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:PutBulkLoad",
            "data": {
                "name": "PutBulkLoad",
                "description": "Record a bulk-load of purchasing records",
                "links": [
                    {
                        "id": 1,
                        "from": "Cid",
                        "to": "LogRequestor",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "LogRequestor",
                        "to": "Put",
                        "type": "expression",
                        "label": "Authorized",
                        "value": "$activity[Cid].attrs.entity == $property[\"Entity.JABIL\"] || $activity[Cid].attrs.entity == $flow.parameters.bulkLoad.LoadedBy"
                    },
                    {
                        "id": 3,
                        "from": "Put",
                        "to": "LogPut",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "LogPut",
                        "to": "Return",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "LogRequestor",
                        "to": "LogUnauthorized",
                        "type": "exprOtherwise",
                        "label": "NotAuthorized"
                    },
                    {
                        "id": 6,
                        "from": "LogUnauthorized",
                        "to": "ThrowError",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Cid",
                        "name": "Cid",
                        "description": "This activity returns requesting client ID",
                        "activity": {
                            "ref": "#cid",
                            "schemas": {
                                "output": {
                                    "attrs": "schema://ClientID"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogRequestor",
                        "name": "LogRequestor",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"PutBulkLoad by user \", $activity[Cid].attrs.email, \" for \", $flow.parameters.bulkLoad.LoadedBy)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Put",
                        "name": "Put",
                        "description": "This activity stores data to fabric ledger",
                        "activity": {
                            "ref": "#put",
                            "input": {
                                "key": "=$flow.parameters.bulkLoad.BulkLoadID",
                                "privateCollection": "",
                                "compositeKeys": "",
                                "data": {
                                    "mapping": {
                                        "BulkLoadID": "=$flow.parameters.bulkLoad.BulkLoadID",
                                        "ReferenceFile": "=$flow.parameters.bulkLoad.ReferenceFile",
                                        "ReferenceHash": "=$flow.parameters.bulkLoad.ReferenceHash",
                                        "LoadedBy": "=$flow.parameters.bulkLoad.LoadedBy",
                                        "DocType": "=$property[\"DocType.BULK_LOAD\"]"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "data": "schema://BulkLoadLedger"
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"BulkLoadID\": {\n            \"type\": \"string\"\n        },\n        \"ReferenceFile\": {\n            \"type\": \"string\"\n        },\n        \"ReferenceHash\": {\n            \"type\": \"string\"\n        },\n        \"LoadedBy\": {\n            \"type\": \"string\"\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}",
                                        "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"BulkLoadID\": {\n            \"type\": \"string\"\n        },\n        \"ReferenceFile\": {\n            \"type\": \"string\"\n        },\n        \"ReferenceHash\": {\n            \"type\": \"string\"\n        },\n        \"LoadedBy\": {\n            \"type\": \"string\"\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogPut",
                        "name": "LogPut",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[PutBulkLoad] \", $activity[Put].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[Put].code",
                                    "message": "=$activity[Put].message",
                                    "returns": "=$activity[Put].result"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogUnauthorized",
                        "name": "LogUnauthorized",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"User \", $activity[Cid].attrs.alias, \" of \", $activity[Cid].attrs.entity, \" cannot put bulk-load for \", $flow.parameters.bulkLoad.LoadedBy)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "ThrowError",
                        "name": "ThrowError",
                        "description": "Throws an Error",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"User is not authorized to put BulkLoad for \", $flow.parameters.bulkLoad.LoadedBy)"
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"bulkLoad\":{\"type\":\"object\",\"properties\":{\"BulkLoadID\":{\"type\":\"string\"},\"ReferenceFile\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"LoadedBy\":{\"type\":\"string\"},\"DocType\":{\"type\":\"string\"}}}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"BulkLoadID\":{\"type\":\"string\"},\"ReferenceFile\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"LoadedBy\":{\"type\":\"string\"},\"DocType\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"bulkLoad\":{\"type\":\"object\",\"properties\":{\"BulkLoadID\":{\"type\":\"string\"},\"ReferenceFile\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"LoadedBy\":{\"type\":\"string\"},\"DocType\":{\"type\":\"string\"}}}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"BulkLoadID\":{\"type\":\"string\"},\"ReferenceFile\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"LoadedBy\":{\"type\":\"string\"},\"DocType\":{\"type\":\"string\"}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:GetBulkLoad",
            "data": {
                "name": "GetBulkLoad",
                "description": "Retrieve data of a bulk-load of specified BulkLoadID",
                "links": [
                    {
                        "id": 1,
                        "from": "Cid",
                        "to": "LogRequestor",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "LogRequestor",
                        "to": "Get",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "Get",
                        "to": "LogGet",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "LogGet",
                        "to": "Return",
                        "type": "expression",
                        "label": "Authorized",
                        "value": "$activity[Cid].attrs.entity == $property[\"Entity.JABIL\"] || $activity[Get].result.LoadedBy == $activity[Cid].attrs.entity"
                    },
                    {
                        "id": 5,
                        "from": "LogGet",
                        "to": "LogUnauthorized",
                        "type": "exprOtherwise",
                        "label": "NotAuthorized"
                    },
                    {
                        "id": 6,
                        "from": "LogUnauthorized",
                        "to": "ThrowError",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Cid",
                        "name": "Cid",
                        "description": "This activity returns requesting client ID",
                        "activity": {
                            "ref": "#cid",
                            "schemas": {
                                "output": {
                                    "attrs": "schema://ClientID"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogRequestor",
                        "name": "LogRequestor",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"GetBulkLoad by user \", $activity[Cid].attrs.email, \" for \", $flow.parameters.BulkLoadID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Get",
                        "name": "Get",
                        "description": "This activity fetches data by key from fabric ledger",
                        "activity": {
                            "ref": "#get",
                            "input": {
                                "key": "=$flow.parameters.BulkLoadID",
                                "privateCollection": ""
                            },
                            "schemas": {
                                "output": {
                                    "result": "schema://BulkLoadLedger"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogGet",
                        "name": "LogGet",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[GetBulkLoad] \", $activity[Get].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[Get].code",
                                    "message": "=$activity[Get].message",
                                    "returns": "=$activity[Get].result"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogUnauthorized",
                        "name": "LogUnauthorized",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"User \", $activity[Cid].attrs.alias, \" of \", $activity[Cid].attrs.entity, \" cannot fetch bulk-load \", $flow.parameters.BulkLoadID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "ThrowError",
                        "name": "ThrowError",
                        "description": "Throws an Error",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"User is not authorized to fetch BulkLoad \", $flow.parameters.BulkLoadID)"
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"BulkLoadID\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"BulkLoadID\":{\"type\":\"string\"},\"ReferenceFile\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"LoadedBy\":{\"type\":\"string\"},\"DocType\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"BulkLoadID\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"BulkLoadID\":{\"type\":\"string\"},\"ReferenceFile\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"LoadedBy\":{\"type\":\"string\"},\"DocType\":{\"type\":\"string\"}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:PutMonthlyPurchase",
            "data": {
                "name": "PutMonthlyPurchase",
                "description": "Create or update monthly total purchase amount of a previous year",
                "links": [
                    {
                        "id": 1,
                        "from": "Cid",
                        "to": "LogRequestor",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "LogRequestor",
                        "to": "Put",
                        "type": "expression",
                        "label": "Authorized",
                        "value": "$activity[Cid].attrs.entity == $property[\"Entity.JABIL\"]"
                    },
                    {
                        "id": 3,
                        "from": "Put",
                        "to": "Return",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "LogRequestor",
                        "to": "LogUnauthorized",
                        "type": "exprOtherwise",
                        "label": "NotAuthorized"
                    },
                    {
                        "id": 5,
                        "from": "LogUnauthorized",
                        "to": "ThrowError",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Cid",
                        "name": "Cid",
                        "description": "This activity returns requesting client ID",
                        "activity": {
                            "ref": "#cid",
                            "schemas": {
                                "output": {
                                    "attrs": "schema://ClientID"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogRequestor",
                        "name": "LogRequestor",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"PutMonthlyPurchase by user \", $activity[Cid].attrs.email, \" for \", $flow.parameters.summary.SupplierID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Put",
                        "name": "Put",
                        "description": "This activity stores data to fabric ledger",
                        "activity": {
                            "ref": "#put",
                            "input": {
                                "key": "=string.concat($flow.parameters.summary.SupplierID, \"-\", coerce.toString($flow.parameters.summary.Year), \"-\", coerce.toString($flow.parameters.summary.Month))",
                                "privateCollection": "",
                                "compositeKeys": "=$property[\"CompositeKeys.SupplierYearMonthSummary\"]",
                                "data": {
                                    "mapping": {
                                        "SupplierID": "=$flow.parameters.summary.SupplierID",
                                        "Month": "=$flow.parameters.summary.Month",
                                        "PurchaseAmt": "=$flow.parameters.summary.PurchaseAmt",
                                        "DocType": "=$property[\"DocType.MONTHLY_PURCHASE\"]",
                                        "Year": "=$flow.parameters.summary.Year"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "data": "schema://MonthlyPurchaseLedger"
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"SupplierID\": {\n            \"type\": \"string\"\n        },\n        \"Year\": {\n            \"type\": \"number\"\n        },\n        \"Month\": {\n            \"type\": \"number\"\n        },\n        \"PurchaseAmt\": {\n            \"type\": \"number\"\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}",
                                        "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"SupplierID\": {\n            \"type\": \"string\"\n        },\n        \"Year\": {\n            \"type\": \"number\"\n        },\n        \"Month\": {\n            \"type\": \"number\"\n        },\n        \"PurchaseAmt\": {\n            \"type\": \"number\"\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[Put].code",
                                    "message": "=$activity[Put].message",
                                    "returns": "=$activity[Put].result"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogUnauthorized",
                        "name": "LogUnauthorized",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"User \", $activity[Cid].attrs.alias, \" of \", $activity[Cid].attrs.entity, \" cannot put monthly-purchase for \", $flow.parameters.summary.SupplierID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "ThrowError",
                        "name": "ThrowError",
                        "description": "Throws an Error",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"User is not authorized to put MonthlyPurchase for \", $flow.parameters.summary.SupplierID)"
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"summary\":{\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"PurchaseAmt\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"SupplierID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"PurchaseAmt\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"summary\":{\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"PurchaseAmt\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"PurchaseAmt\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:GetMonthlyPurchases",
            "data": {
                "name": "GetMonthlyPurchases",
                "description": "Retrieve monthly total purchase from a supplier in a previous year",
                "links": [
                    {
                        "id": 1,
                        "from": "Cid",
                        "to": "LogRequestor",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "LogRequestor",
                        "to": "GetByCompositeKey",
                        "type": "expression",
                        "label": "Authorized",
                        "value": "$activity[Cid].attrs.entity == $property[\"Entity.JABIL\"] || $activity[Cid].attrs.entity == $flow.parameters.SupplierID"
                    },
                    {
                        "id": 3,
                        "from": "GetByCompositeKey",
                        "to": "Log",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "Log",
                        "to": "Return",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "LogRequestor",
                        "to": "LogUnauthorized",
                        "type": "exprOtherwise",
                        "label": "NotAuthorized"
                    },
                    {
                        "id": 6,
                        "from": "LogUnauthorized",
                        "to": "ThrowError",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Cid",
                        "name": "Cid",
                        "description": "This activity returns requesting client ID",
                        "activity": {
                            "ref": "#cid",
                            "schemas": {
                                "output": {
                                    "attrs": "schema://ClientID"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogRequestor",
                        "name": "LogRequestor",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"GetMonthlyPurchases by user \", $activity[Cid].attrs.email, \" for \", $flow.parameters.SupplierID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "GetByCompositeKey",
                        "name": "GetByCompositeKey",
                        "description": "This activity fetches data by composite-key from fabric ledger",
                        "activity": {
                            "ref": "#getbycompositekey",
                            "input": {
                                "keyName": "=$property[\"CompositeKeys.SupplierYearMonthSummary\"]",
                                "usePagination": false,
                                "pageSize": 0,
                                "start": "",
                                "privateCollection": "",
                                "attributes": {
                                    "mapping": {
                                        "SupplierID": "=$flow.parameters.SupplierID",
                                        "Year": "=$flow.parameters.Year"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "attributes": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"SupplierID\",\"type\":\"string\"},{\"parameterName\":\"Year\",\"type\":\"number\"}]"
                                    }
                                },
                                "output": {
                                    "result": "schema://MonthlyPurchaseMap"
                                }
                            }
                        }
                    },
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[GetMonthlyPurchases] \", $activity[GetByCompositeKey].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[GetByCompositeKey].code",
                                    "message": "=$activity[GetByCompositeKey].message",
                                    "returns": {
                                        "mapping": {
                                            "@foreach($activity[\"GetByCompositeKey\"].result,returns)": {
                                                "value": "=$loop.value",
                                                "key": "=$loop.key"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogUnauthorized",
                        "name": "LogUnauthorized",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"User \", $activity[Cid].attrs.alias, \" of \", $activity[Cid].attrs.entity, \" cannot fetch monthly-purchases for \", $flow.parameters.SupplierID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "ThrowError",
                        "name": "ThrowError",
                        "description": "Throws an Error",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"User is not authorized to fetch MonthlyPurchases for \", $flow.parameters.SupplierID)"
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"SupplierID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"PurchaseAmt\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"PurchaseAmt\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}}}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:PutPurchases",
            "data": {
                "name": "PutPurchases",
                "description": "Create or update list of purchase records",
                "links": [
                    {
                        "id": 1,
                        "from": "Cid",
                        "to": "LogRequestor",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "LogRequestor",
                        "to": "PutPurchaseSubflow",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "PutPurchaseSubflow",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Cid",
                        "name": "Cid",
                        "description": "This activity returns requesting client ID",
                        "activity": {
                            "ref": "#cid",
                            "schemas": {
                                "output": {
                                    "attrs": "schema://ClientID"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogRequestor",
                        "name": "LogRequestor",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"PutPurchases by user \", $activity[Cid].attrs.email, \" for \", $flow.parameters.purchases[0].SupplierID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "PutPurchaseSubflow",
                        "name": "PutPurchaseSubflow",
                        "description": "Simple SubFlow Activity",
                        "type": "iterator",
                        "settings": {
                            "iterate": "=$flow.parameters.purchases",
                            "accumulate": true
                        },
                        "activity": {
                            "ref": "#subflow",
                            "settings": {
                                "flowURI": "res://flow:PutPurchaseSubflow"
                            },
                            "input": {
                                "clientEntity": "=$activity[Cid].attrs.entity",
                                "purchase": {
                                    "mapping": {
                                        "PurchaseOrderNbr": "=$iteration[value].PurchaseOrderNbr",
                                        "SupplierID": "=$iteration[value].SupplierID",
                                        "PurchaseOrderStatus": "=$iteration[value].PurchaseOrderStatus",
                                        "DocumentID": "=$iteration[value].DocumentID",
                                        "DocumentDate": "=$iteration[value].DocumentDate",
                                        "ShipDate": "=$iteration[value].ShipDate",
                                        "ManufacturerPartNbr": "=$iteration[value].ManufacturerPartNbr",
                                        "SupplierPartNbr": "=$iteration[value].SupplierPartNbr",
                                        "JabilPartNbr": "=$iteration[value].JabilPartNbr",
                                        "Currency": "=$iteration[value].Currency",
                                        "ShippedQty": "=$iteration[value].ShippedQty",
                                        "UnitPrice": "=$iteration[value].UnitPrice",
                                        "SalePriceLocalAmt": "=$iteration[value].SalePriceLocalAmt",
                                        "SalePriceUSD": "=$iteration[value].SalePriceUSD",
                                        "ReturnQty": "=$iteration[value].ReturnQty",
                                        "ReturnUSD": "=$iteration[value].ReturnUSD",
                                        "ReturnReason": "=$iteration[value].ReturnReason",
                                        "VerifiedBy": "=$iteration[value].VerifiedBy",
                                        "SupplierBulkLoadID": "=$iteration[value].SupplierBulkLoadID",
                                        "JabilBulkLoadID": "=$iteration[value].JabilBulkLoadID",
                                        "Month": "=array.get(dovetail.parseDate($iteration[value].DocumentDate), 1)",
                                        "Year": "=array.get(dovetail.parseDate($iteration[value].DocumentDate), 0)",
                                        "DocType": "=$property[\"DocType.PURCHASE\"]"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"clientEntity\":{\"type\":\"string\"},\"purchase\":{\"type\":\"object\",\"properties\":{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"PurchaseOrderStatus\":{\"type\":\"string\"},\"DocumentID\":{\"type\":\"string\"},\"DocumentDate\":{\"type\":\"string\"},\"ShipDate\":{\"type\":\"string\"},\"ManufacturerPartNbr\":{\"type\":\"string\"},\"SupplierPartNbr\":{\"type\":\"string\"},\"JabilPartNbr\":{\"type\":\"string\"},\"Currency\":{\"type\":\"string\"},\"ShippedQty\":{\"type\":\"number\"},\"UnitPrice\":{\"type\":\"number\"},\"SalePriceLocalAmt\":{\"type\":\"number\"},\"SalePriceUSD\":{\"type\":\"number\"},\"ReturnQty\":{\"type\":\"number\"},\"ReturnUSD\":{\"type\":\"number\"},\"ReturnReason\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"SupplierBulkLoadID\":{\"type\":\"string\"},\"JabilBulkLoadID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"clientEntity\":{\"type\":\"string\"},\"purchase\":{\"type\":\"object\",\"properties\":{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"PurchaseOrderStatus\":{\"type\":\"string\"},\"DocumentID\":{\"type\":\"string\"},\"DocumentDate\":{\"type\":\"string\"},\"ShipDate\":{\"type\":\"string\"},\"ManufacturerPartNbr\":{\"type\":\"string\"},\"SupplierPartNbr\":{\"type\":\"string\"},\"JabilPartNbr\":{\"type\":\"string\"},\"Currency\":{\"type\":\"string\"},\"ShippedQty\":{\"type\":\"number\"},\"UnitPrice\":{\"type\":\"number\"},\"SalePriceLocalAmt\":{\"type\":\"number\"},\"SalePriceUSD\":{\"type\":\"number\"},\"ReturnQty\":{\"type\":\"number\"},\"ReturnUSD\":{\"type\":\"number\"},\"ReturnReason\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"SupplierBulkLoadID\":{\"type\":\"string\"},\"JabilBulkLoadID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}}}}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"status\":{\"type\":\"number\"},\"message\":{\"type\":\"string\"},\"key\":{\"type\":\"string\"},\"result\":{\"type\":\"object\",\"properties\":{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"PurchaseOrderStatus\":{\"type\":\"string\"},\"DocumentID\":{\"type\":\"string\"},\"DocumentDate\":{\"type\":\"string\"},\"ShipDate\":{\"type\":\"string\"},\"ManufacturerPartNbr\":{\"type\":\"string\"},\"SupplierPartNbr\":{\"type\":\"string\"},\"JabilPartNbr\":{\"type\":\"string\"},\"Currency\":{\"type\":\"string\"},\"ShippedQty\":{\"type\":\"number\"},\"UnitPrice\":{\"type\":\"number\"},\"SalePriceLocalAmt\":{\"type\":\"number\"},\"SalePriceUSD\":{\"type\":\"number\"},\"ReturnQty\":{\"type\":\"number\"},\"ReturnUSD\":{\"type\":\"number\"},\"ReturnReason\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"SupplierBulkLoadID\":{\"type\":\"string\"},\"JabilBulkLoadID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"status\":{\"type\":\"number\"},\"message\":{\"type\":\"string\"},\"key\":{\"type\":\"string\"},\"result\":{\"type\":\"object\",\"properties\":{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"PurchaseOrderStatus\":{\"type\":\"string\"},\"DocumentID\":{\"type\":\"string\"},\"DocumentDate\":{\"type\":\"string\"},\"ShipDate\":{\"type\":\"string\"},\"ManufacturerPartNbr\":{\"type\":\"string\"},\"SupplierPartNbr\":{\"type\":\"string\"},\"JabilPartNbr\":{\"type\":\"string\"},\"Currency\":{\"type\":\"string\"},\"ShippedQty\":{\"type\":\"number\"},\"UnitPrice\":{\"type\":\"number\"},\"SalePriceLocalAmt\":{\"type\":\"number\"},\"SalePriceUSD\":{\"type\":\"number\"},\"ReturnQty\":{\"type\":\"number\"},\"ReturnUSD\":{\"type\":\"number\"},\"ReturnReason\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"SupplierBulkLoadID\":{\"type\":\"string\"},\"JabilBulkLoadID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": 200,
                                    "returns": {
                                        "mapping": {
                                            "@foreach($activity[PutPurchaseSubflow],returns,$loop.status == 200)": {
                                                "key": "=$loop.key",
                                                "value": "=$loop.result"
                                            }
                                        }
                                    },
                                    "message": "=string.concat(\"Processed \", coerce.toString(array.count($flow.parameters.purchases)), \" puchases\")"
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"purchases\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"PurchaseOrderStatus\":{\"type\":\"string\"},\"DocumentID\":{\"type\":\"string\"},\"DocumentDate\":{\"type\":\"string\"},\"ShipDate\":{\"type\":\"string\"},\"ManufacturerPartNbr\":{\"type\":\"string\"},\"SupplierPartNbr\":{\"type\":\"string\"},\"JabilPartNbr\":{\"type\":\"string\"},\"Currency\":{\"type\":\"string\"},\"ShippedQty\":{\"type\":\"number\"},\"UnitPrice\":{\"type\":\"number\"},\"SalePriceLocalAmt\":{\"type\":\"number\"},\"SalePriceUSD\":{\"type\":\"number\"},\"ReturnQty\":{\"type\":\"number\"},\"ReturnUSD\":{\"type\":\"number\"},\"ReturnReason\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"SupplierBulkLoadID\":{\"type\":\"string\"},\"JabilBulkLoadID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}}}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"PurchaseOrderStatus\":{\"type\":\"string\"},\"DocumentID\":{\"type\":\"string\"},\"DocumentDate\":{\"type\":\"string\"},\"ShipDate\":{\"type\":\"string\"},\"ManufacturerPartNbr\":{\"type\":\"string\"},\"SupplierPartNbr\":{\"type\":\"string\"},\"JabilPartNbr\":{\"type\":\"string\"},\"Currency\":{\"type\":\"string\"},\"ShippedQty\":{\"type\":\"number\"},\"UnitPrice\":{\"type\":\"number\"},\"SalePriceLocalAmt\":{\"type\":\"number\"},\"SalePriceUSD\":{\"type\":\"number\"},\"ReturnQty\":{\"type\":\"number\"},\"ReturnUSD\":{\"type\":\"number\"},\"ReturnReason\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"SupplierBulkLoadID\":{\"type\":\"string\"},\"JabilBulkLoadID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"purchases\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"PurchaseOrderStatus\":{\"type\":\"string\"},\"DocumentID\":{\"type\":\"string\"},\"DocumentDate\":{\"type\":\"string\"},\"ShipDate\":{\"type\":\"string\"},\"ManufacturerPartNbr\":{\"type\":\"string\"},\"SupplierPartNbr\":{\"type\":\"string\"},\"JabilPartNbr\":{\"type\":\"string\"},\"Currency\":{\"type\":\"string\"},\"ShippedQty\":{\"type\":\"number\"},\"UnitPrice\":{\"type\":\"number\"},\"SalePriceLocalAmt\":{\"type\":\"number\"},\"SalePriceUSD\":{\"type\":\"number\"},\"ReturnQty\":{\"type\":\"number\"},\"ReturnUSD\":{\"type\":\"number\"},\"ReturnReason\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"SupplierBulkLoadID\":{\"type\":\"string\"},\"JabilBulkLoadID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}}}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"PurchaseOrderStatus\":{\"type\":\"string\"},\"DocumentID\":{\"type\":\"string\"},\"DocumentDate\":{\"type\":\"string\"},\"ShipDate\":{\"type\":\"string\"},\"ManufacturerPartNbr\":{\"type\":\"string\"},\"SupplierPartNbr\":{\"type\":\"string\"},\"JabilPartNbr\":{\"type\":\"string\"},\"Currency\":{\"type\":\"string\"},\"ShippedQty\":{\"type\":\"number\"},\"UnitPrice\":{\"type\":\"number\"},\"SalePriceLocalAmt\":{\"type\":\"number\"},\"SalePriceUSD\":{\"type\":\"number\"},\"ReturnQty\":{\"type\":\"number\"},\"ReturnUSD\":{\"type\":\"number\"},\"ReturnReason\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"SupplierBulkLoadID\":{\"type\":\"string\"},\"JabilBulkLoadID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}}}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:GetPurchasesPerSupplier",
            "data": {
                "name": "GetPurchasesPerSupplier",
                "description": "Retrieve purchased items by specified supplier and reconciliation status",
                "links": [
                    {
                        "id": 1,
                        "from": "Cid",
                        "to": "LogRequestor",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "LogRequestor",
                        "to": "GetByCompositeKey",
                        "type": "expression",
                        "label": "Authorized",
                        "value": "$activity[Cid].attrs.entity == $property[\"Entity.JABIL\"] || $activity[Cid].attrs.entity == $flow.parameters.SupplierID"
                    },
                    {
                        "id": 3,
                        "from": "GetByCompositeKey",
                        "to": "LogGetPurchases",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "LogGetPurchases",
                        "to": "Return",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "LogRequestor",
                        "to": "LogUnauthorized",
                        "type": "exprOtherwise",
                        "label": "NotAuthorized"
                    },
                    {
                        "id": 6,
                        "from": "LogUnauthorized",
                        "to": "ThrowError",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Cid",
                        "name": "Cid",
                        "description": "This activity returns requesting client ID",
                        "activity": {
                            "ref": "#cid",
                            "schemas": {
                                "output": {
                                    "attrs": "schema://ClientID"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogRequestor",
                        "name": "LogRequestor",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"GetPurchasesPerSupplier by user \", $activity[Cid].attrs.email, \" for \", $flow.parameters.SupplierID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "GetByCompositeKey",
                        "name": "GetByCompositeKey",
                        "description": "This activity fetches data by composite-key from fabric ledger",
                        "activity": {
                            "ref": "#getbycompositekey",
                            "input": {
                                "keyName": "=$property[\"CompositeKeys.SupplierVerifiedYearMonth\"]",
                                "usePagination": false,
                                "pageSize": 0,
                                "start": "",
                                "privateCollection": "",
                                "attributes": {
                                    "mapping": {
                                        "SupplierID": "=$flow.parameters.SupplierID",
                                        "VerifiedBy": "=$flow.parameters.VerifiedBy",
                                        "Year": "=$flow.parameters.Year",
                                        "Month": "=$flow.parameters.Month"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "attributes": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"SupplierID\",\"type\":\"string\"},{\"parameterName\":\"VerifiedBy\",\"type\":\"string\"},{\"parameterName\":\"Year\",\"type\":\"number\"},{\"parameterName\":\"Month\",\"type\":\"number\"}]"
                                    }
                                },
                                "output": {
                                    "result": "schema://PurchaseMap"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogGetPurchases",
                        "name": "LogGetPurchases",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[GetPurchases] \", $activity[GetByCompositeKey].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[GetByCompositeKey].code",
                                    "message": "=$activity[GetByCompositeKey].message",
                                    "returns": {
                                        "mapping": {
                                            "@foreach($activity[\"GetByCompositeKey\"].result,returns)": {
                                                "key": "=$loop.key",
                                                "value": "=$loop.value"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogUnauthorized",
                        "name": "LogUnauthorized",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"User \", $activity[Cid].attrs.alias, \" of \", $activity[Cid].attrs.entity, \" cannot fetch purchases for \", $flow.parameters.SupplierID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "ThrowError",
                        "name": "ThrowError",
                        "description": "Throws an Error",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"User is not authorized to fetch purchases for \", $flow.parameters.SupplierID)"
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"SupplierID\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"PurchaseOrderStatus\":{\"type\":\"string\"},\"DocumentID\":{\"type\":\"string\"},\"DocumentDate\":{\"type\":\"string\"},\"ShipDate\":{\"type\":\"string\"},\"ManufacturerPartNbr\":{\"type\":\"string\"},\"SupplierPartNbr\":{\"type\":\"string\"},\"JabilPartNbr\":{\"type\":\"string\"},\"Currency\":{\"type\":\"string\"},\"ShippedQty\":{\"type\":\"number\"},\"UnitPrice\":{\"type\":\"number\"},\"SalePriceLocalAmt\":{\"type\":\"number\"},\"SalePriceUSD\":{\"type\":\"number\"},\"ReturnQty\":{\"type\":\"number\"},\"ReturnUSD\":{\"type\":\"number\"},\"ReturnReason\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"SupplierBulkLoadID\":{\"type\":\"string\"},\"JabilBulkLoadID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"PurchaseOrderStatus\":{\"type\":\"string\"},\"DocumentID\":{\"type\":\"string\"},\"DocumentDate\":{\"type\":\"string\"},\"ShipDate\":{\"type\":\"string\"},\"ManufacturerPartNbr\":{\"type\":\"string\"},\"SupplierPartNbr\":{\"type\":\"string\"},\"JabilPartNbr\":{\"type\":\"string\"},\"Currency\":{\"type\":\"string\"},\"ShippedQty\":{\"type\":\"number\"},\"UnitPrice\":{\"type\":\"number\"},\"SalePriceLocalAmt\":{\"type\":\"number\"},\"SalePriceUSD\":{\"type\":\"number\"},\"ReturnQty\":{\"type\":\"number\"},\"ReturnUSD\":{\"type\":\"number\"},\"ReturnReason\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"SupplierBulkLoadID\":{\"type\":\"string\"},\"JabilBulkLoadID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}}}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:GetAgreementHistory",
            "data": {
                "name": "GetAgreementHistory",
                "description": "Retrieve history of an agreement of a specified AgreementID",
                "links": [
                    {
                        "id": 1,
                        "from": "Cid",
                        "to": "LogRequestor",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "LogRequestor",
                        "to": "GetHistory",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "GetHistory",
                        "to": "LogHistory",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "LogHistory",
                        "to": "Return1",
                        "type": "exprOtherwise",
                        "label": "NotFound&#160;"
                    },
                    {
                        "id": 5,
                        "from": "LogHistory",
                        "to": "Log",
                        "type": "expression",
                        "label": "Found",
                        "value": "$activity[GetHistory].code == 200"
                    },
                    {
                        "id": 6,
                        "from": "Log",
                        "to": "Return",
                        "type": "expression",
                        "label": "Authorized",
                        "value": "$activity[Cid].attrs.entity == $property[\"Entity.JABIL\"] || $activity[GetHistory].result[0].value.SupplierID == $activity[Cid].attrs.entity"
                    },
                    {
                        "id": 7,
                        "from": "Log",
                        "to": "LogUnauthorized",
                        "type": "exprOtherwise",
                        "label": "NotAuthorized"
                    },
                    {
                        "id": 8,
                        "from": "LogUnauthorized",
                        "to": "ThrowError",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Cid",
                        "name": "Cid",
                        "description": "This activity returns requesting client ID",
                        "activity": {
                            "ref": "#cid",
                            "schemas": {
                                "output": {
                                    "attrs": "schema://ClientID"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogRequestor",
                        "name": "LogRequestor",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"GetAgreementHistory by user \", $activity[Cid].attrs.email, \" for agreement \", $flow.parameters.AgreementID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "GetHistory",
                        "name": "GetHistory",
                        "description": "This activity fetches history of a key from fabric ledger",
                        "activity": {
                            "ref": "#gethistory",
                            "input": {
                                "key": "=$flow.parameters.AgreementID"
                            },
                            "schemas": {
                                "output": {
                                    "result": "schema://AgreementHistory"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogHistory",
                        "name": "LogHistory",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[GetAgreementHistory] \", $activity[GetHistory].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return1",
                        "name": "Return1",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": 300,
                                    "message": "=string.concat(\"No agreement found for \", $flow.parameters.AgreementID)"
                                }
                            }
                        }
                    },
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"Agreement with supplier \", $activity[GetHistory].result[0].value.SupplierID, \" compared to user entity \", $activity[Cid].attrs.entity)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[GetHistory].code",
                                    "message": "=$activity[GetHistory].message",
                                    "returns": {
                                        "mapping": {
                                            "@foreach($activity[\"GetHistory\"].result,returns)": {
                                                "txID": "=$loop.txID",
                                                "txTime": "=$loop.txTime",
                                                "isDeleted": "=$loop.isDeleted",
                                                "value": "=$loop.value"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogUnauthorized",
                        "name": "LogUnauthorized",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"User \", $activity[Cid].attrs.alias, \" of \", $activity[Cid].attrs.entity, \" cannot fetch history of agreement \", $flow.parameters.AgreementID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "ThrowError",
                        "name": "ThrowError",
                        "description": "Throws an Error",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"User is not authorized to fetch history of agreement \", $flow.parameters.AgreementID)"
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"AgreementID\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"},\"txTime\":{\"type\":\"string\"},\"isDeleted\":{\"type\":\"boolean\"},\"value\":{\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"},\"txTime\":{\"type\":\"string\"},\"isDeleted\":{\"type\":\"boolean\"},\"value\":{\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}}}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:GetReconciliationHistory",
            "data": {
                "name": "GetReconciliationHistory",
                "description": "Retrieve history of a purchase item of specified PO and MPN",
                "links": [
                    {
                        "id": 1,
                        "from": "Cid",
                        "to": "LogRequestor",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "LogRequestor",
                        "to": "GetHistory",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "GetHistory",
                        "to": "Log",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "Log",
                        "to": "Log1",
                        "type": "expression",
                        "label": "Found",
                        "value": "$activity[GetHistory].code == 200"
                    },
                    {
                        "id": 5,
                        "from": "Log1",
                        "to": "Return",
                        "type": "expression",
                        "label": "Authorized",
                        "value": "$activity[Cid].attrs.entity == $property[\"Entity.JABIL\"] || $activity[Cid].attrs.entity == $activity[GetHistory].result[0].value.SupplierID"
                    },
                    {
                        "id": 6,
                        "from": "Log1",
                        "to": "LogUnauthorized",
                        "type": "exprOtherwise",
                        "label": "NotAuthorized"
                    },
                    {
                        "id": 7,
                        "from": "LogUnauthorized",
                        "to": "ThrowError",
                        "type": "default"
                    },
                    {
                        "id": 8,
                        "from": "Log",
                        "to": "Return1",
                        "type": "exprOtherwise",
                        "label": "NotFound"
                    }
                ],
                "tasks": [
                    {
                        "id": "Cid",
                        "name": "Cid",
                        "description": "This activity returns requesting client ID",
                        "activity": {
                            "ref": "#cid",
                            "schemas": {
                                "output": {
                                    "attrs": "schema://ClientID"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogRequestor",
                        "name": "LogRequestor",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"GetReconciliationHistory by user \", $activity[Cid].attrs.email, \" for PO \", $flow.parameters.PurchaseOrderNbr, \" and MPN \", $flow.parameters.ManufacturePartNbr)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "GetHistory",
                        "name": "GetHistory",
                        "description": "This activity fetches history of a key from fabric ledger",
                        "activity": {
                            "ref": "#gethistory",
                            "input": {
                                "key": "=string.concat($flow.parameters.PurchaseOrderNbr, \"-\", $flow.parameters.ManufacturePartNbr)"
                            },
                            "schemas": {
                                "output": {
                                    "result": "schema://PurchaseHistory"
                                }
                            }
                        }
                    },
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[GetPurchaseHistory] \", $activity[GetHistory].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Log1",
                        "name": "Log1",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"Purchase of supplier \", $activity[GetHistory].result[0].value.SupplierID, \" compared to user entity \", $activity[Cid].attrs.entity)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[GetHistory].code",
                                    "message": "=$activity[GetHistory].message",
                                    "returns": {
                                        "mapping": {
                                            "@foreach($activity[\"GetHistory\"].result,returns)": {
                                                "txID": "=$loop.txID",
                                                "isDeleted": "=$loop.isDeleted",
                                                "txTime": "=$loop.txTime",
                                                "value": "=$loop.value"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogUnauthorized",
                        "name": "LogUnauthorized",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"User \", $activity[Cid].attrs.alias, \" of \", $activity[Cid].attrs.entity, \" cannot fetch history of PO \", $flow.parameters.PurchaseOrderNbr, \" and MPN \", $flow.parameters.ManufacturePartNbr)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "ThrowError",
                        "name": "ThrowError",
                        "description": "Throws an Error",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"User is not authorized to fetch history of PO \", $flow.parameters.PurchaseOrderNbr, \" and MPN \", $flow.parameters.ManufacturePartNbr)"
                            }
                        }
                    },
                    {
                        "id": "Return1",
                        "name": "Return1",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": 300,
                                    "message": "=string.concat(\"No purchase found for PO \", $flow.parameters.PurchaseOrderNbr, \" and MPN \", $flow.parameters.ManufacturePartNbr)"
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"ManufacturePartNbr\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"},\"txTime\":{\"type\":\"string\"},\"isDeleted\":{\"type\":\"boolean\"},\"value\":{\"type\":\"object\",\"properties\":{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"PurchaseOrderStatus\":{\"type\":\"string\"},\"DocumentID\":{\"type\":\"string\"},\"DocumentDate\":{\"type\":\"string\"},\"ShipDate\":{\"type\":\"string\"},\"ManufacturerPartNbr\":{\"type\":\"string\"},\"SupplierPartNbr\":{\"type\":\"string\"},\"JabilPartNbr\":{\"type\":\"string\"},\"Currency\":{\"type\":\"string\"},\"ShippedQty\":{\"type\":\"number\"},\"UnitPrice\":{\"type\":\"number\"},\"SalePriceLocalAmt\":{\"type\":\"number\"},\"SalePriceUSD\":{\"type\":\"number\"},\"ReturnQty\":{\"type\":\"number\"},\"ReturnUSD\":{\"type\":\"number\"},\"ReturnReason\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"SupplierBulkLoadID\":{\"type\":\"string\"},\"JabilBulkLoadID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"ManufacturePartNbr\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"},\"txTime\":{\"type\":\"string\"},\"isDeleted\":{\"type\":\"boolean\"},\"value\":{\"type\":\"object\",\"properties\":{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"PurchaseOrderStatus\":{\"type\":\"string\"},\"DocumentID\":{\"type\":\"string\"},\"DocumentDate\":{\"type\":\"string\"},\"ShipDate\":{\"type\":\"string\"},\"ManufacturerPartNbr\":{\"type\":\"string\"},\"SupplierPartNbr\":{\"type\":\"string\"},\"JabilPartNbr\":{\"type\":\"string\"},\"Currency\":{\"type\":\"string\"},\"ShippedQty\":{\"type\":\"number\"},\"UnitPrice\":{\"type\":\"number\"},\"SalePriceLocalAmt\":{\"type\":\"number\"},\"SalePriceUSD\":{\"type\":\"number\"},\"ReturnQty\":{\"type\":\"number\"},\"ReturnUSD\":{\"type\":\"number\"},\"ReturnReason\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"SupplierBulkLoadID\":{\"type\":\"string\"},\"JabilBulkLoadID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}}}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:QueryAllSuppliers",
            "data": {
                "name": "QueryAllSuppliers",
                "description": "Rich query for all supplier states",
                "links": [
                    {
                        "id": 1,
                        "from": "Cid",
                        "to": "LogRequestor",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "LogRequestor",
                        "to": "Query",
                        "type": "expression",
                        "label": "Authorized",
                        "value": "$activity[Cid].attrs.entity == $property[\"Entity.JABIL\"]"
                    },
                    {
                        "id": 3,
                        "from": "Query",
                        "to": "LogQuery",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "LogQuery",
                        "to": "Return",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "LogRequestor",
                        "to": "LogUnauthorized",
                        "type": "exprOtherwise",
                        "label": "NotAuthorized"
                    },
                    {
                        "id": 6,
                        "from": "LogUnauthorized",
                        "to": "ThrowError",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Cid",
                        "name": "Cid",
                        "description": "This activity returns requesting client ID",
                        "activity": {
                            "ref": "#cid",
                            "schemas": {
                                "output": {
                                    "attrs": "schema://ClientID"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogRequestor",
                        "name": "LogRequestor",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"QueryAllSuppliers by user \", $activity[Cid].attrs.email)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Query",
                        "name": "Query",
                        "description": "This activity fetches data by rich query on fabric Couch DB",
                        "activity": {
                            "ref": "#query",
                            "input": {
                                "query": "{\n    \"selector\": {\n        \"DocType\": \"$doctype\"\n    }\n}",
                                "usePagination": false,
                                "pageSize": 0,
                                "start": "",
                                "privateCollection": "",
                                "queryParams": {
                                    "mapping": {
                                        "doctype": "=$property[\"DocType.SUPPLIER\"]"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "queryParams": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"doctype\":{\"type\":\"string\"}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"doctype\",\"type\":\"string\"}]"
                                    }
                                },
                                "output": {
                                    "result": "schema://SupplierMap"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogQuery",
                        "name": "LogQuery",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[QuerySuppliers] \", $activity[Query].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[Query].code",
                                    "message": "=$activity[Query].message",
                                    "returns": {
                                        "mapping": {
                                            "@foreach($activity[Query].result,returns)": {
                                                "key": "=$loop.key",
                                                "value": "=$loop.value"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogUnauthorized",
                        "name": "LogUnauthorized",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"User \", $activity[Cid].attrs.alias, \" of \", $activity[Cid].attrs.entity, \" cannot query all suppliers\")",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "ThrowError",
                        "name": "ThrowError",
                        "description": "Throws an Error",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "User is not authorized to query all suppliers"
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"},\"TenantID\":{\"type\":\"string\"},\"GlobalCode\":{\"type\":\"string\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Description\":{\"type\":\"string\"},\"Region\":{\"type\":\"string\"},\"Commodity\":{\"type\":\"string\"},\"HighLevelCommodity\":{\"type\":\"string\"},\"Address\":{\"type\":\"object\",\"properties\":{\"Street1\":{\"type\":\"string\"},\"Street2\":{\"type\":\"string\"},\"Street3\":{\"type\":\"string\"},\"Street4\":{\"type\":\"string\"},\"CityOrMunicipality\":{\"type\":\"string\"},\"StateOrProvince\":{\"type\":\"string\"},\"CountyOrSubdivision\":{\"type\":\"string\"},\"ZipOrPostcode\":{\"type\":\"string\"},\"Country\":{\"type\":\"string\"}}},\"WebsiteURL\":{\"type\":\"string\"},\"TickerSymbol\":{\"type\":\"string\"},\"DocType\":{\"type\":\"string\"}}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction\",\"properties\":{\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"},\"TenantID\":{\"type\":\"string\"},\"GlobalCode\":{\"type\":\"string\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Description\":{\"type\":\"string\"},\"Region\":{\"type\":\"string\"},\"Commodity\":{\"type\":\"string\"},\"HighLevelCommodity\":{\"type\":\"string\"},\"Address\":{\"type\":\"object\",\"properties\":{\"Street1\":{\"type\":\"string\"},\"Street2\":{\"type\":\"string\"},\"Street3\":{\"type\":\"string\"},\"Street4\":{\"type\":\"string\"},\"CityOrMunicipality\":{\"type\":\"string\"},\"StateOrProvince\":{\"type\":\"string\"},\"CountyOrSubdivision\":{\"type\":\"string\"},\"ZipOrPostcode\":{\"type\":\"string\"},\"Country\":{\"type\":\"string\"}}},\"WebsiteURL\":{\"type\":\"string\"},\"TickerSymbol\":{\"type\":\"string\"},\"DocType\":{\"type\":\"string\"}}}}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:CalculateMonthlyPurchase",
            "data": {
                "name": "CalculateMonthlyPurchase",
                "description": "Sum up reconciled purchase amounts of a specified supplier for a year and month. Update the corresponding state of MonthlyPurchase.",
                "links": [
                    {
                        "id": 1,
                        "from": "Cid",
                        "to": "LogRequestor",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "LogRequestor",
                        "to": "GetByCompositeKey",
                        "type": "expression",
                        "label": "Authorized",
                        "value": "$activity[Cid].attrs.entity == $property[\"Entity.JABIL\"]"
                    },
                    {
                        "id": 3,
                        "from": "GetByCompositeKey",
                        "to": "LogPurchases",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "LogPurchases",
                        "to": "Put",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "Put",
                        "to": "LogSummary",
                        "type": "default"
                    },
                    {
                        "id": 6,
                        "from": "LogSummary",
                        "to": "Return",
                        "type": "default"
                    },
                    {
                        "id": 7,
                        "from": "LogRequestor",
                        "to": "LogUnauthorized",
                        "type": "exprOtherwise",
                        "label": "NotAuthorized"
                    },
                    {
                        "id": 8,
                        "from": "LogUnauthorized",
                        "to": "ThrowError",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Cid",
                        "name": "Cid",
                        "description": "This activity returns requesting client ID",
                        "activity": {
                            "ref": "#cid",
                            "schemas": {
                                "output": {
                                    "attrs": "schema://ClientID"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogRequestor",
                        "name": "LogRequestor",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"CalculateMonthlyPurchase by user \", $activity[Cid].attrs.email, \" for \", $flow.parameters.SupplierID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "GetByCompositeKey",
                        "name": "GetByCompositeKey",
                        "description": "This activity fetches data by composite-key from fabric ledger",
                        "activity": {
                            "ref": "#getbycompositekey",
                            "input": {
                                "keyName": "=$property[\"CompositeKeys.SupplierVerifiedYearMonth\"]",
                                "usePagination": false,
                                "pageSize": 0,
                                "start": "",
                                "privateCollection": "",
                                "attributes": {
                                    "mapping": {
                                        "SupplierID": "=$flow.parameters.SupplierID",
                                        "Year": "=$flow.parameters.Year",
                                        "Month": "=$flow.parameters.Month",
                                        "VerifiedBy": "=$property[\"Reconciliation.RECONCILED\"]"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "attributes": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"SupplierID\",\"type\":\"string\"},{\"parameterName\":\"VerifiedBy\",\"type\":\"string\"},{\"parameterName\":\"Year\",\"type\":\"number\"},{\"parameterName\":\"Month\",\"type\":\"number\"}]"
                                    }
                                },
                                "output": {
                                    "result": "schema://PurchaseMap"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogPurchases",
                        "name": "LogPurchases",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[GetPurchases] \", $activity[GetByCompositeKey].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Put",
                        "name": "Put",
                        "description": "This activity stores data to fabric ledger",
                        "activity": {
                            "ref": "#put",
                            "input": {
                                "key": "=string.concat($flow.parameters.SupplierID, \"-\", coerce.toString($flow.parameters.Year), \"-\", coerce.toString($flow.parameters.Month))",
                                "privateCollection": "",
                                "compositeKeys": "=$property[\"CompositeKeys.SupplierYearMonthSummary\"]",
                                "data": {
                                    "mapping": {
                                        "SupplierID": "=$flow.parameters.SupplierID",
                                        "Year": "=$flow.parameters.Year",
                                        "Month": "=$flow.parameters.Month",
                                        "DocType": "=$property[\"DocType.MONTHLY_PURCHASE\"]",
                                        "PurchaseAmt": "=dovetail.sum(json.path(\"$loop.[*].value.SalePriceUSD\", $activity[GetByCompositeKey].result))"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "data": "schema://MonthlyPurchaseLedger"
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"SupplierID\": {\n            \"type\": \"string\"\n        },\n        \"Year\": {\n            \"type\": \"number\"\n        },\n        \"Month\": {\n            \"type\": \"number\"\n        },\n        \"PurchaseAmt\": {\n            \"type\": \"number\"\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}",
                                        "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"SupplierID\": {\n            \"type\": \"string\"\n        },\n        \"Year\": {\n            \"type\": \"number\"\n        },\n        \"Month\": {\n            \"type\": \"number\"\n        },\n        \"PurchaseAmt\": {\n            \"type\": \"number\"\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogSummary",
                        "name": "LogSummary",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[PutMonthlyPurchase] \", $activity[Put].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[Put].code",
                                    "message": "=$activity[Put].message",
                                    "returns": "=$activity[Put].result"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogUnauthorized",
                        "name": "LogUnauthorized",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"User \", $activity[Cid].attrs.alias, \" of \", $activity[Cid].attrs.entity, \" cannot calculate monthly purchase for \", $flow.parameters.SupplierID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "ThrowError",
                        "name": "ThrowError",
                        "description": "Throws an Error",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"User is not authorized to calculate monthly purchase for \", $flow.parameters.SupplierID)"
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"SupplierID\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"SupplierID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"PurchaseAmt\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"SupplierID\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"PurchaseAmt\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:UpdateAgreementSubflow",
            "data": {
                "name": "UpdateAgreementSubflow",
                "description": "Ensure that only one agreement is primary for each supplier. When a new primary agreement is updated, make the previous primary agreement a secondary.",
                "links": [
                    {
                        "id": 1,
                        "from": "LogRequest",
                        "to": "GetByCompositeKey",
                        "type": "expression",
                        "label": "IsPrimary",
                        "value": "$flow.agreement.IsPrimary"
                    },
                    {
                        "id": 2,
                        "from": "GetByCompositeKey",
                        "to": "LogPrimary",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "LogPrimary",
                        "to": "Put",
                        "type": "exprOtherwise",
                        "label": "NewPrimary"
                    },
                    {
                        "id": 4,
                        "from": "Put",
                        "to": "LogNew",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "LogNew",
                        "to": "Return2",
                        "type": "default"
                    },
                    {
                        "id": 6,
                        "from": "LogPrimary",
                        "to": "Log",
                        "type": "expression",
                        "label": "UpdatePrimary",
                        "value": "$activity[GetByCompositeKey].code == 200"
                    },
                    {
                        "id": 7,
                        "from": "Log",
                        "to": "DeleteKey",
                        "type": "expression",
                        "label": "Replace",
                        "value": " $activity[GetByCompositeKey].result[0].key != $flow.agreement.AgreementID"
                    },
                    {
                        "id": 8,
                        "from": "DeleteKey",
                        "to": "LogDeleteKey",
                        "type": "default"
                    },
                    {
                        "id": 9,
                        "from": "LogDeleteKey",
                        "to": "PutOld",
                        "type": "default"
                    },
                    {
                        "id": 10,
                        "from": "PutOld",
                        "to": "LogOld",
                        "type": "default"
                    },
                    {
                        "id": 11,
                        "from": "LogOld",
                        "to": "PutUpdate",
                        "type": "default"
                    },
                    {
                        "id": 12,
                        "from": "PutUpdate",
                        "to": "LogUpdate",
                        "type": "default"
                    },
                    {
                        "id": 13,
                        "from": "LogUpdate",
                        "to": "Return1",
                        "type": "default"
                    },
                    {
                        "id": 14,
                        "from": "Log",
                        "to": "Put1",
                        "type": "exprOtherwise",
                        "label": "Update"
                    },
                    {
                        "id": 15,
                        "from": "Put1",
                        "to": "Log1",
                        "type": "default"
                    },
                    {
                        "id": 16,
                        "from": "Log1",
                        "to": "Return3",
                        "type": "default"
                    },
                    {
                        "id": 17,
                        "from": "LogRequest",
                        "to": "PutSecondary",
                        "type": "exprOtherwise",
                        "label": "NotPrimary"
                    },
                    {
                        "id": 18,
                        "from": "PutSecondary",
                        "to": "LogPutSecondary",
                        "type": "default"
                    },
                    {
                        "id": 19,
                        "from": "LogPutSecondary",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogRequest",
                        "name": "LogRequest",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"UpdateAgreementSubflow started for agreement: \", $flow.agreement.AgreementID, \", IsPrimary: \", coerce.toString($flow.agreement.IsPrimary))",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "GetByCompositeKey",
                        "name": "GetByCompositeKey",
                        "description": "This activity fetches data by composite-key from fabric ledger",
                        "activity": {
                            "ref": "#getbycompositekey",
                            "input": {
                                "keyName": "=$property[\"CompositeKeys.SupplierPrimary\"]",
                                "usePagination": false,
                                "pageSize": 0,
                                "start": "",
                                "privateCollection": "",
                                "attributes": {
                                    "mapping": {
                                        "SupplierID": "=$flow.agreement.SupplierID",
                                        "IsPrimary": "=boolean.true()"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "attributes": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"SupplierID\",\"type\":\"string\"},{\"parameterName\":\"IsPrimary\",\"type\":\"boolean\"}]"
                                    }
                                },
                                "output": {
                                    "result": "schema://AgreementLedgerMap"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogPrimary",
                        "name": "LogPrimary",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[GetPrimaryAgreement] (\", coerce.toString($activity[GetByCompositeKey].code), \") \", $activity[GetByCompositeKey].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Put",
                        "name": "Put",
                        "description": "This activity stores data to fabric ledger",
                        "activity": {
                            "ref": "#put",
                            "input": {
                                "key": "=$flow.agreement.AgreementID",
                                "privateCollection": "",
                                "compositeKeys": "=$property[\"CompositeKeys.SupplierPrimary\"]",
                                "data": "=$flow.agreement"
                            },
                            "schemas": {
                                "input": {
                                    "data": "schema://AgreementLedger"
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"AgreementID\": {\n            \"type\": \"string\"\n        },\n        \"SupplierID\": {\n            \"type\": \"string\"\n        },\n        \"IsPrimary\": {\n            \"type\": \"boolean\"\n        },\n        \"FullName\": {\n            \"type\": \"string\"\n        },\n        \"ShortName\": {\n            \"type\": \"string\"\n        },\n        \"Status\": {\n            \"type\": \"string\"\n        },\n        \"SignatureDate\": {\n            \"type\": \"string\"\n        },\n        \"SignedBy\": {\n            \"type\": \"string\"\n        },\n        \"ReferenceID\": {\n            \"type\": \"string\"\n        },\n        \"ReferenceHash\": {\n            \"type\": \"string\"\n        },\n        \"StartDate\": {\n            \"type\": \"string\"\n        },\n        \"EndDate\": {\n            \"type\": \"string\"\n        },\n        \"CollectionFrequency\": {\n            \"type\": \"string\"\n        },\n        \"Type\": {\n            \"type\": \"string\"\n        },\n        \"GrowthTerms\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"MinSaleGrowth\": {\n                        \"type\": \"number\"\n                    },\n                    \"BonusPct\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        },\n        \"StandardTerms\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"MinSaleAmt\": {\n                        \"type\": \"number\"\n                    },\n                    \"BonusPct\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}",
                                        "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"AgreementID\": {\n            \"type\": \"string\"\n        },\n        \"SupplierID\": {\n            \"type\": \"string\"\n        },\n        \"IsPrimary\": {\n            \"type\": \"boolean\"\n        },\n        \"FullName\": {\n            \"type\": \"string\"\n        },\n        \"ShortName\": {\n            \"type\": \"string\"\n        },\n        \"Status\": {\n            \"type\": \"string\"\n        },\n        \"SignatureDate\": {\n            \"type\": \"string\"\n        },\n        \"SignedBy\": {\n            \"type\": \"string\"\n        },\n        \"ReferenceID\": {\n            \"type\": \"string\"\n        },\n        \"ReferenceHash\": {\n            \"type\": \"string\"\n        },\n        \"StartDate\": {\n            \"type\": \"string\"\n        },\n        \"EndDate\": {\n            \"type\": \"string\"\n        },\n        \"CollectionFrequency\": {\n            \"type\": \"string\"\n        },\n        \"Type\": {\n            \"type\": \"string\"\n        },\n        \"GrowthTerms\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"MinSaleGrowth\": {\n                        \"type\": \"number\"\n                    },\n                    \"BonusPct\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        },\n        \"StandardTerms\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"MinSaleAmt\": {\n                        \"type\": \"number\"\n                    },\n                    \"BonusPct\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogNew",
                        "name": "LogNew",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[UpdateNewPrimary] \", $activity[Put].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return2",
                        "name": "Return2",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[Put].code",
                                    "message": "=$activity[Put].message",
                                    "result": "=$activity[Put].result"
                                }
                            }
                        }
                    },
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"Found existing primary \", $activity[GetByCompositeKey].result[0].key, \" compared to \", $flow.agreement.AgreementID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "DeleteKey",
                        "name": "DeleteKey",
                        "description": "This activity deletes data from fabric world state",
                        "activity": {
                            "ref": "#delete",
                            "input": {
                                "key": "=$activity[GetByCompositeKey].result[0].key",
                                "privateCollection": "",
                                "keysOnly": true,
                                "compositeKeys": "=$property[\"CompositeKeys.SupplierPrimary\"]"
                            },
                            "schemas": {
                                "output": {
                                    "result": "schema://AgreementLedger"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogDeleteKey",
                        "name": "LogDeleteKey",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[DeleteKey] \", $activity[DeleteKey].key, \": \", $activity[DeleteKey].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "PutOld",
                        "name": "PutOld",
                        "description": "This activity stores data to fabric ledger",
                        "activity": {
                            "ref": "#put",
                            "input": {
                                "key": "=$activity[DeleteKey].key",
                                "privateCollection": "",
                                "compositeKeys": "=$property[\"CompositeKeys.SupplierPrimary\"]",
                                "data": {
                                    "mapping": {
                                        "AgreementID": "=$activity[GetByCompositeKey].result[0].value.AgreementID",
                                        "SupplierID": "=$activity[GetByCompositeKey].result[0].value.SupplierID",
                                        "IsPrimary": "=boolean.false()",
                                        "FullName": "=$activity[GetByCompositeKey].result[0].value.FullName",
                                        "ShortName": "=$activity[GetByCompositeKey].result[0].value.ShortName",
                                        "Status": "=$activity[GetByCompositeKey].result[0].value.Status",
                                        "SignatureDate": "=$activity[GetByCompositeKey].result[0].value.SignatureDate",
                                        "SignedBy": "=$activity[GetByCompositeKey].result[0].value.SignedBy",
                                        "ReferenceID": "=$activity[GetByCompositeKey].result[0].value.ReferenceID",
                                        "ReferenceHash": "=$activity[GetByCompositeKey].result[0].value.ReferenceHash",
                                        "StartDate": "=$activity[GetByCompositeKey].result[0].value.StartDate",
                                        "EndDate": "=$activity[GetByCompositeKey].result[0].value.EndDate",
                                        "CollectionFrequency": "=$activity[GetByCompositeKey].result[0].value.CollectionFrequency",
                                        "Type": "=$activity[GetByCompositeKey].result[0].value.Type",
                                        "DocType": "=$property[\"DocType.AGREEMENT\"]",
                                        "GrowthTerms": {
                                            "@foreach($activity[GetByCompositeKey].result[0].value.GrowthTerms,GrowthTerms)": {
                                                "MinSaleGrowth": "=$loop.MinSaleGrowth",
                                                "BonusPct": "=$loop.BonusPct"
                                            }
                                        },
                                        "StandardTerms": {
                                            "@foreach($activity[GetByCompositeKey].result[0].value.StandardTerms,StandardTerms)": {
                                                "MinSaleAmt": "=$loop.MinSaleAmt",
                                                "BonusPct": "=$loop.BonusPct"
                                            }
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "data": "schema://AgreementLedger"
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"AgreementID\": {\n            \"type\": \"string\"\n        },\n        \"SupplierID\": {\n            \"type\": \"string\"\n        },\n        \"IsPrimary\": {\n            \"type\": \"boolean\"\n        },\n        \"FullName\": {\n            \"type\": \"string\"\n        },\n        \"ShortName\": {\n            \"type\": \"string\"\n        },\n        \"Status\": {\n            \"type\": \"string\"\n        },\n        \"SignatureDate\": {\n            \"type\": \"string\"\n        },\n        \"SignedBy\": {\n            \"type\": \"string\"\n        },\n        \"ReferenceID\": {\n            \"type\": \"string\"\n        },\n        \"ReferenceHash\": {\n            \"type\": \"string\"\n        },\n        \"StartDate\": {\n            \"type\": \"string\"\n        },\n        \"EndDate\": {\n            \"type\": \"string\"\n        },\n        \"CollectionFrequency\": {\n            \"type\": \"string\"\n        },\n        \"Type\": {\n            \"type\": \"string\"\n        },\n        \"GrowthTerms\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"MinSaleGrowth\": {\n                        \"type\": \"number\"\n                    },\n                    \"BonusPct\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        },\n        \"StandardTerms\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"MinSaleAmt\": {\n                        \"type\": \"number\"\n                    },\n                    \"BonusPct\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}",
                                        "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"AgreementID\": {\n            \"type\": \"string\"\n        },\n        \"SupplierID\": {\n            \"type\": \"string\"\n        },\n        \"IsPrimary\": {\n            \"type\": \"boolean\"\n        },\n        \"FullName\": {\n            \"type\": \"string\"\n        },\n        \"ShortName\": {\n            \"type\": \"string\"\n        },\n        \"Status\": {\n            \"type\": \"string\"\n        },\n        \"SignatureDate\": {\n            \"type\": \"string\"\n        },\n        \"SignedBy\": {\n            \"type\": \"string\"\n        },\n        \"ReferenceID\": {\n            \"type\": \"string\"\n        },\n        \"ReferenceHash\": {\n            \"type\": \"string\"\n        },\n        \"StartDate\": {\n            \"type\": \"string\"\n        },\n        \"EndDate\": {\n            \"type\": \"string\"\n        },\n        \"CollectionFrequency\": {\n            \"type\": \"string\"\n        },\n        \"Type\": {\n            \"type\": \"string\"\n        },\n        \"GrowthTerms\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"MinSaleGrowth\": {\n                        \"type\": \"number\"\n                    },\n                    \"BonusPct\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        },\n        \"StandardTerms\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"MinSaleAmt\": {\n                        \"type\": \"number\"\n                    },\n                    \"BonusPct\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogOld",
                        "name": "LogOld",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[UpdateOldAgreement] \", $activity[PutOld].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "PutUpdate",
                        "name": "PutUpdate",
                        "description": "This activity stores data to fabric ledger",
                        "activity": {
                            "ref": "#put",
                            "input": {
                                "key": "=$flow.agreement.AgreementID",
                                "privateCollection": "",
                                "compositeKeys": "=$property[\"CompositeKeys.SupplierPrimary\"]",
                                "data": "=$flow.agreement"
                            },
                            "schemas": {
                                "input": {
                                    "data": "schema://AgreementLedger"
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"AgreementID\": {\n            \"type\": \"string\"\n        },\n        \"SupplierID\": {\n            \"type\": \"string\"\n        },\n        \"IsPrimary\": {\n            \"type\": \"boolean\"\n        },\n        \"FullName\": {\n            \"type\": \"string\"\n        },\n        \"ShortName\": {\n            \"type\": \"string\"\n        },\n        \"Status\": {\n            \"type\": \"string\"\n        },\n        \"SignatureDate\": {\n            \"type\": \"string\"\n        },\n        \"SignedBy\": {\n            \"type\": \"string\"\n        },\n        \"ReferenceID\": {\n            \"type\": \"string\"\n        },\n        \"ReferenceHash\": {\n            \"type\": \"string\"\n        },\n        \"StartDate\": {\n            \"type\": \"string\"\n        },\n        \"EndDate\": {\n            \"type\": \"string\"\n        },\n        \"CollectionFrequency\": {\n            \"type\": \"string\"\n        },\n        \"Type\": {\n            \"type\": \"string\"\n        },\n        \"GrowthTerms\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"MinSaleGrowth\": {\n                        \"type\": \"number\"\n                    },\n                    \"BonusPct\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        },\n        \"StandardTerms\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"MinSaleAmt\": {\n                        \"type\": \"number\"\n                    },\n                    \"BonusPct\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}",
                                        "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"AgreementID\": {\n            \"type\": \"string\"\n        },\n        \"SupplierID\": {\n            \"type\": \"string\"\n        },\n        \"IsPrimary\": {\n            \"type\": \"boolean\"\n        },\n        \"FullName\": {\n            \"type\": \"string\"\n        },\n        \"ShortName\": {\n            \"type\": \"string\"\n        },\n        \"Status\": {\n            \"type\": \"string\"\n        },\n        \"SignatureDate\": {\n            \"type\": \"string\"\n        },\n        \"SignedBy\": {\n            \"type\": \"string\"\n        },\n        \"ReferenceID\": {\n            \"type\": \"string\"\n        },\n        \"ReferenceHash\": {\n            \"type\": \"string\"\n        },\n        \"StartDate\": {\n            \"type\": \"string\"\n        },\n        \"EndDate\": {\n            \"type\": \"string\"\n        },\n        \"CollectionFrequency\": {\n            \"type\": \"string\"\n        },\n        \"Type\": {\n            \"type\": \"string\"\n        },\n        \"GrowthTerms\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"MinSaleGrowth\": {\n                        \"type\": \"number\"\n                    },\n                    \"BonusPct\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        },\n        \"StandardTerms\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"MinSaleAmt\": {\n                        \"type\": \"number\"\n                    },\n                    \"BonusPct\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogUpdate",
                        "name": "LogUpdate",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[UpdateAgreement] \", $activity[PutUpdate].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return1",
                        "name": "Return1",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[PutUpdate].code",
                                    "message": "=$activity[PutUpdate].message",
                                    "result": "=$activity[PutUpdate].result"
                                }
                            }
                        }
                    },
                    {
                        "id": "Put1",
                        "name": "Put1",
                        "description": "This activity stores data to fabric ledger",
                        "activity": {
                            "ref": "#put",
                            "input": {
                                "key": "=$flow.agreement.AgreementID",
                                "privateCollection": "",
                                "compositeKeys": "=$property[\"CompositeKeys.SupplierPrimary\"]",
                                "data": "=$flow.agreement"
                            },
                            "schemas": {
                                "input": {
                                    "data": "schema://AgreementLedger"
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"AgreementID\": {\n            \"type\": \"string\"\n        },\n        \"SupplierID\": {\n            \"type\": \"string\"\n        },\n        \"IsPrimary\": {\n            \"type\": \"boolean\"\n        },\n        \"FullName\": {\n            \"type\": \"string\"\n        },\n        \"ShortName\": {\n            \"type\": \"string\"\n        },\n        \"Status\": {\n            \"type\": \"string\"\n        },\n        \"SignatureDate\": {\n            \"type\": \"string\"\n        },\n        \"SignedBy\": {\n            \"type\": \"string\"\n        },\n        \"ReferenceID\": {\n            \"type\": \"string\"\n        },\n        \"ReferenceHash\": {\n            \"type\": \"string\"\n        },\n        \"StartDate\": {\n            \"type\": \"string\"\n        },\n        \"EndDate\": {\n            \"type\": \"string\"\n        },\n        \"CollectionFrequency\": {\n            \"type\": \"string\"\n        },\n        \"Type\": {\n            \"type\": \"string\"\n        },\n        \"GrowthTerms\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"MinSaleGrowth\": {\n                        \"type\": \"number\"\n                    },\n                    \"BonusPct\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        },\n        \"StandardTerms\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"MinSaleAmt\": {\n                        \"type\": \"number\"\n                    },\n                    \"BonusPct\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}",
                                        "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"AgreementID\": {\n            \"type\": \"string\"\n        },\n        \"SupplierID\": {\n            \"type\": \"string\"\n        },\n        \"IsPrimary\": {\n            \"type\": \"boolean\"\n        },\n        \"FullName\": {\n            \"type\": \"string\"\n        },\n        \"ShortName\": {\n            \"type\": \"string\"\n        },\n        \"Status\": {\n            \"type\": \"string\"\n        },\n        \"SignatureDate\": {\n            \"type\": \"string\"\n        },\n        \"SignedBy\": {\n            \"type\": \"string\"\n        },\n        \"ReferenceID\": {\n            \"type\": \"string\"\n        },\n        \"ReferenceHash\": {\n            \"type\": \"string\"\n        },\n        \"StartDate\": {\n            \"type\": \"string\"\n        },\n        \"EndDate\": {\n            \"type\": \"string\"\n        },\n        \"CollectionFrequency\": {\n            \"type\": \"string\"\n        },\n        \"Type\": {\n            \"type\": \"string\"\n        },\n        \"GrowthTerms\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"MinSaleGrowth\": {\n                        \"type\": \"number\"\n                    },\n                    \"BonusPct\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        },\n        \"StandardTerms\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"MinSaleAmt\": {\n                        \"type\": \"number\"\n                    },\n                    \"BonusPct\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Log1",
                        "name": "Log1",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[UpdatePrimary] \", $activity[Put1].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return3",
                        "name": "Return3",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[Put1].code",
                                    "message": "=$activity[Put1].message",
                                    "result": "=$activity[Put1].result"
                                }
                            }
                        }
                    },
                    {
                        "id": "PutSecondary",
                        "name": "PutSecondary",
                        "description": "This activity stores data to fabric ledger",
                        "activity": {
                            "ref": "#put",
                            "input": {
                                "key": "=$flow.agreement.AgreementID",
                                "privateCollection": "",
                                "compositeKeys": "=$property[\"CompositeKeys.SupplierPrimary\"]",
                                "data": "=$flow.agreement"
                            },
                            "schemas": {
                                "input": {
                                    "data": "schema://AgreementLedger"
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"AgreementID\": {\n            \"type\": \"string\"\n        },\n        \"SupplierID\": {\n            \"type\": \"string\"\n        },\n        \"IsPrimary\": {\n            \"type\": \"boolean\"\n        },\n        \"FullName\": {\n            \"type\": \"string\"\n        },\n        \"ShortName\": {\n            \"type\": \"string\"\n        },\n        \"Status\": {\n            \"type\": \"string\"\n        },\n        \"SignatureDate\": {\n            \"type\": \"string\"\n        },\n        \"SignedBy\": {\n            \"type\": \"string\"\n        },\n        \"ReferenceID\": {\n            \"type\": \"string\"\n        },\n        \"ReferenceHash\": {\n            \"type\": \"string\"\n        },\n        \"StartDate\": {\n            \"type\": \"string\"\n        },\n        \"EndDate\": {\n            \"type\": \"string\"\n        },\n        \"CollectionFrequency\": {\n            \"type\": \"string\"\n        },\n        \"Type\": {\n            \"type\": \"string\"\n        },\n        \"GrowthTerms\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"MinSaleGrowth\": {\n                        \"type\": \"number\"\n                    },\n                    \"BonusPct\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        },\n        \"StandardTerms\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"MinSaleAmt\": {\n                        \"type\": \"number\"\n                    },\n                    \"BonusPct\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}",
                                        "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"AgreementID\": {\n            \"type\": \"string\"\n        },\n        \"SupplierID\": {\n            \"type\": \"string\"\n        },\n        \"IsPrimary\": {\n            \"type\": \"boolean\"\n        },\n        \"FullName\": {\n            \"type\": \"string\"\n        },\n        \"ShortName\": {\n            \"type\": \"string\"\n        },\n        \"Status\": {\n            \"type\": \"string\"\n        },\n        \"SignatureDate\": {\n            \"type\": \"string\"\n        },\n        \"SignedBy\": {\n            \"type\": \"string\"\n        },\n        \"ReferenceID\": {\n            \"type\": \"string\"\n        },\n        \"ReferenceHash\": {\n            \"type\": \"string\"\n        },\n        \"StartDate\": {\n            \"type\": \"string\"\n        },\n        \"EndDate\": {\n            \"type\": \"string\"\n        },\n        \"CollectionFrequency\": {\n            \"type\": \"string\"\n        },\n        \"Type\": {\n            \"type\": \"string\"\n        },\n        \"GrowthTerms\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"MinSaleGrowth\": {\n                        \"type\": \"number\"\n                    },\n                    \"BonusPct\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        },\n        \"StandardTerms\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"MinSaleAmt\": {\n                        \"type\": \"number\"\n                    },\n                    \"BonusPct\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogPutSecondary",
                        "name": "LogPutSecondary",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[PutSecondaryAgreement] \", $activity[PutSecondary].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[PutSecondary].code",
                                    "result": "=$activity[PutSecondary].result"
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "agreement",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "result",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"agreement\":{\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}}}}",
                        "output": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"status\":{\"type\":\"number\"},\"message\":{\"type\":\"string\"},\"result\":{\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}}}}"
                    }
                }
            }
        },
        {
            "id": "flow:MergeAgreementSubflow",
            "data": {
                "name": "MergeAgreementSubflow",
                "description": "Merge attributes from new agreement to original, and set SignedBy attributes based on whether terms have been changed.",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "GrowhthTerms",
                        "type": "expression",
                        "label": "UseGrowthTerms",
                        "value": "$flow.original.Type == $property[\"AgreementTerms.GROWTH\"] && $flow.update.Type == $property[\"AgreementTerms.GROWTH\"]"
                    },
                    {
                        "id": 2,
                        "from": "GrowhthTerms",
                        "to": "LogGrowhTerms",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "LogGrowhTerms",
                        "to": "Return1",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "Log",
                        "to": "StandardTerms",
                        "type": "expression",
                        "label": "UserStandardTerms",
                        "value": "$flow.original.Type == $flow.update.Type && $flow.update.Type != $property[\"AgreementTerms.GROWTH\"]"
                    },
                    {
                        "id": 5,
                        "from": "StandardTerms",
                        "to": "LogStandardTerms",
                        "type": "default"
                    },
                    {
                        "id": 6,
                        "from": "LogStandardTerms",
                        "to": "Return2",
                        "type": "default"
                    },
                    {
                        "id": 7,
                        "from": "Log",
                        "to": "Return",
                        "type": "exprOtherwise",
                        "label": "TermsChanged"
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"MergeAgreementSubflow original terms: \", $flow.original.Type, \"; updated terms: \", $flow.update.Type)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "GrowhthTerms",
                        "name": "GrowhthTerms",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "compare": "=dovetail.compareJSON($flow.original.GrowthTerms, $flow.update.GrowthTerms)"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"compare\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"compare\": \"\"\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"compare\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n  \"compare\": \"\"\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogGrowhTerms",
                        "name": "LogGrowhTerms",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"GrowthTerms comparison: \", $activity[GrowhthTerms].output.compare)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return1",
                        "name": "Return1",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "result": {
                                        "mapping": {
                                            "AgreementID": "=$flow.update.AgreementID",
                                            "SupplierID": "=$flow.update.SupplierID",
                                            "IsPrimary": "=$flow.update.IsPrimary",
                                            "SignedBy": "=dovetail.conditionalChoice($activity[GrowhthTerms].output.compare != \"FullMatch\", $flow.original.SignedBy, $flow.update.SignedBy, $property[\"Reconciliation.BOTH_SIGNED\"])",
                                            "FullName": "=dovetail.notZeroValue($flow.original.FullName, $flow.update.FullName)",
                                            "ShortName": "=dovetail.notZeroValue($flow.original.ShortName, $flow.update.ShortName)",
                                            "Status": "=dovetail.notZeroValue($flow.original.Status, $flow.update.Status)",
                                            "SignatureDate": "=$flow.update.SignatureDate",
                                            "ReferenceID": "=dovetail.notZeroValue($flow.original.ReferenceID, $flow.update.ReferenceID)",
                                            "ReferenceHash": "=dovetail.notZeroValue($flow.original.ReferenceHash, $flow.update.ReferenceHash)",
                                            "StartDate": "=$flow.update.StartDate",
                                            "EndDate": "=$flow.update.EndDate",
                                            "CollectionFrequency": "=$flow.update.CollectionFrequency",
                                            "Type": "=$flow.update.Type",
                                            "GrowthTerms": {
                                                "@foreach($flow.update.GrowthTerms,GrowthTerms)": {
                                                    "MinSaleGrowth": "=$loop.MinSaleGrowth",
                                                    "BonusPct": "=$loop.BonusPct"
                                                }
                                            },
                                            "DocType": "=$property[\"DocType.AGREEMENT\"]"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "StandardTerms",
                        "name": "StandardTerms",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "compare": "=dovetail.compareJSON($flow.original.StandardTerms, $flow.update.StandardTerms)"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"compare\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"compare\": \"\"\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"compare\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n  \"compare\": \"\"\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogStandardTerms",
                        "name": "LogStandardTerms",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"StandardTerms comparison: \", $activity[StandardTerms].output.compare)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return2",
                        "name": "Return2",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "result": {
                                        "mapping": {
                                            "AgreementID": "=$flow.update.AgreementID",
                                            "SupplierID": "=$flow.update.SupplierID",
                                            "IsPrimary": "=$flow.update.IsPrimary",
                                            "SignedBy": "=dovetail.conditionalChoice($activity[StandardTerms].output.compare != \"FullMatch\", $flow.original.SignedBy, $flow.update.SignedBy, $property[\"Reconciliation.BOTH_SIGNED\"])",
                                            "Type": "=$flow.update.Type",
                                            "StandardTerms": {
                                                "@foreach($flow.update.StandardTerms,StandardTerms)": {
                                                    "MinSaleAmt": "=$loop.MinSaleAmt",
                                                    "BonusPct": "=$loop.BonusPct"
                                                }
                                            },
                                            "DocType": "=$property[\"DocType.AGREEMENT\"]",
                                            "FullName": "=dovetail.notZeroValue($flow.original.FullName, $flow.update.FullName)",
                                            "ShortName": "=dovetail.notZeroValue($flow.original.ShortName, $flow.update.ShortName)",
                                            "Status": "=dovetail.notZeroValue($flow.original.Status, $flow.update.Status)",
                                            "SignatureDate": "=$flow.update.SignatureDate",
                                            "ReferenceID": "=dovetail.notZeroValue($flow.original.ReferenceID, $flow.update.ReferenceID)",
                                            "ReferenceHash": "=dovetail.notZeroValue($flow.original.ReferenceHash, $flow.update.ReferenceHash)",
                                            "StartDate": "=$flow.update.StartDate",
                                            "EndDate": "=$flow.update.EndDate",
                                            "CollectionFrequency": "=$flow.update.CollectionFrequency"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "result": {
                                        "mapping": {
                                            "AgreementID": "=$flow.update.AgreementID",
                                            "SupplierID": "=$flow.update.SupplierID",
                                            "IsPrimary": "=$flow.update.IsPrimary",
                                            "FullName": "=dovetail.notZeroValue($flow.original.FullName, $flow.update.FullName)",
                                            "ShortName": "=dovetail.notZeroValue($flow.original.ShortName, $flow.update.ShortName)",
                                            "Status": "=dovetail.notZeroValue($flow.original.Status, $flow.update.Status)",
                                            "SignatureDate": "=$flow.update.SignatureDate",
                                            "SignedBy": "=$flow.update.SignedBy",
                                            "ReferenceID": "=dovetail.notZeroValue($flow.original.ReferenceID, $flow.update.ReferenceID)",
                                            "ReferenceHash": "=dovetail.notZeroValue($flow.original.ReferenceHash, $flow.update.ReferenceHash)",
                                            "StartDate": "=$flow.update.StartDate",
                                            "EndDate": "=$flow.update.EndDate",
                                            "CollectionFrequency": "=$flow.update.CollectionFrequency",
                                            "Type": "=$flow.update.Type",
                                            "GrowthTerms": {
                                                "@foreach($flow.update.GrowthTerms,GrowthTerms)": {
                                                    "MinSaleGrowth": "=$loop.MinSaleGrowth",
                                                    "BonusPct": "=$loop.BonusPct"
                                                }
                                            },
                                            "StandardTerms": {
                                                "@foreach($flow.update.StandardTerms,StandardTerms)": {
                                                    "MinSaleAmt": "=$loop.MinSaleAmt",
                                                    "BonusPct": "=$loop.BonusPct"
                                                }
                                            },
                                            "DocType": "=$property[\"DocType.AGREEMENT\"]"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "original",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "update",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "output": [
                        {
                            "name": "result",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"original\":{\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}},\"update\":{\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}}}}",
                        "output": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"result\":{\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}}}}"
                    }
                }
            }
        },
        {
            "id": "flow:PutPurchaseSubflow",
            "data": {
                "name": "PutPurchaseSubflow",
                "description": "Put a purchase on the ledger; check existing state of the same purchase, and update VerifiedBy according whether SalePriceUSD has changed.",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "Get",
                        "type": "expression",
                        "label": "Authorized",
                        "value": "$flow.clientEntity == $property[\"Entity.JABIL\"] || $flow.clientEntity == $flow.purchase.SupplierID"
                    },
                    {
                        "id": 2,
                        "from": "Get",
                        "to": "LogGet",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "LogGet",
                        "to": "MergePurchase",
                        "type": "expression",
                        "label": "Update",
                        "value": "$activity[Get].code == 200"
                    },
                    {
                        "id": 4,
                        "from": "MergePurchase",
                        "to": "DeleteKey",
                        "type": "expression",
                        "label": "IndexChanged",
                        "value": "$activity[MergePurchase].result.VerifiedBy != $activity[Get].result.VerifiedBy || $activity[MergePurchase].result.Year != $activity[Get].result.Year || $activity[MergePurchase].result.Month != $activity[Get].result.Month"
                    },
                    {
                        "id": 5,
                        "from": "DeleteKey",
                        "to": "Put",
                        "type": "default"
                    },
                    {
                        "id": 6,
                        "from": "Put",
                        "to": "LogUpdate",
                        "type": "default"
                    },
                    {
                        "id": 7,
                        "from": "LogUpdate",
                        "to": "Return1",
                        "type": "default"
                    },
                    {
                        "id": 8,
                        "from": "MergePurchase",
                        "to": "Put2",
                        "type": "exprOtherwise",
                        "label": "NoKeyUpdate"
                    },
                    {
                        "id": 9,
                        "from": "Put2",
                        "to": "Log1",
                        "type": "default"
                    },
                    {
                        "id": 10,
                        "from": "Log1",
                        "to": "Return3",
                        "type": "default"
                    },
                    {
                        "id": 11,
                        "from": "LogGet",
                        "to": "Put1",
                        "type": "exprOtherwise",
                        "label": "Create"
                    },
                    {
                        "id": 12,
                        "from": "Put1",
                        "to": "LogCreate",
                        "type": "default"
                    },
                    {
                        "id": 13,
                        "from": "LogCreate",
                        "to": "Return2",
                        "type": "default"
                    },
                    {
                        "id": 14,
                        "from": "Log",
                        "to": "LogUnauthorized",
                        "type": "exprOtherwise",
                        "label": "NotAuthorized"
                    },
                    {
                        "id": 15,
                        "from": "LogUnauthorized",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"PutPurchaseSubFlow for client: \", $flow.clientEntity, \", PO: \", $flow.purchase.PurchaseOrderNbr, \", MPN: \", $flow.purchase.ManufacturerPartNbr, \", Supplier: \", $flow.purchase.SupplierID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Get",
                        "name": "Get",
                        "description": "This activity fetches data by key from fabric ledger",
                        "activity": {
                            "ref": "#get",
                            "input": {
                                "key": "=string.concat($flow.purchase.PurchaseOrderNbr, \"-\", $flow.purchase.ManufacturerPartNbr)",
                                "privateCollection": ""
                            },
                            "schemas": {
                                "output": {
                                    "result": "schema://PurchaseLedger"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogGet",
                        "name": "LogGet",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[GetPurchase] \", $activity[Get].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "MergePurchase",
                        "name": "MergePurchase",
                        "description": "Simple SubFlow Activity",
                        "activity": {
                            "ref": "#subflow",
                            "settings": {
                                "flowURI": "res://flow:MergePurchaseSubflow"
                            },
                            "input": {
                                "original": "=$activity[Get].result",
                                "update": "=$flow.purchase"
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"original\":{\"type\":\"object\",\"properties\":{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"PurchaseOrderStatus\":{\"type\":\"string\"},\"DocumentID\":{\"type\":\"string\"},\"DocumentDate\":{\"type\":\"string\"},\"ShipDate\":{\"type\":\"string\"},\"ManufacturerPartNbr\":{\"type\":\"string\"},\"SupplierPartNbr\":{\"type\":\"string\"},\"JabilPartNbr\":{\"type\":\"string\"},\"Currency\":{\"type\":\"string\"},\"ShippedQty\":{\"type\":\"number\"},\"UnitPrice\":{\"type\":\"number\"},\"SalePriceLocalAmt\":{\"type\":\"number\"},\"SalePriceUSD\":{\"type\":\"number\"},\"ReturnQty\":{\"type\":\"number\"},\"ReturnUSD\":{\"type\":\"number\"},\"ReturnReason\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"SupplierBulkLoadID\":{\"type\":\"string\"},\"JabilBulkLoadID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}},\"update\":{\"type\":\"object\",\"properties\":{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"PurchaseOrderStatus\":{\"type\":\"string\"},\"DocumentID\":{\"type\":\"string\"},\"DocumentDate\":{\"type\":\"string\"},\"ShipDate\":{\"type\":\"string\"},\"ManufacturerPartNbr\":{\"type\":\"string\"},\"SupplierPartNbr\":{\"type\":\"string\"},\"JabilPartNbr\":{\"type\":\"string\"},\"Currency\":{\"type\":\"string\"},\"ShippedQty\":{\"type\":\"number\"},\"UnitPrice\":{\"type\":\"number\"},\"SalePriceLocalAmt\":{\"type\":\"number\"},\"SalePriceUSD\":{\"type\":\"number\"},\"ReturnQty\":{\"type\":\"number\"},\"ReturnUSD\":{\"type\":\"number\"},\"ReturnReason\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"SupplierBulkLoadID\":{\"type\":\"string\"},\"JabilBulkLoadID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"original\":{\"type\":\"object\",\"properties\":{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"PurchaseOrderStatus\":{\"type\":\"string\"},\"DocumentID\":{\"type\":\"string\"},\"DocumentDate\":{\"type\":\"string\"},\"ShipDate\":{\"type\":\"string\"},\"ManufacturerPartNbr\":{\"type\":\"string\"},\"SupplierPartNbr\":{\"type\":\"string\"},\"JabilPartNbr\":{\"type\":\"string\"},\"Currency\":{\"type\":\"string\"},\"ShippedQty\":{\"type\":\"number\"},\"UnitPrice\":{\"type\":\"number\"},\"SalePriceLocalAmt\":{\"type\":\"number\"},\"SalePriceUSD\":{\"type\":\"number\"},\"ReturnQty\":{\"type\":\"number\"},\"ReturnUSD\":{\"type\":\"number\"},\"ReturnReason\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"SupplierBulkLoadID\":{\"type\":\"string\"},\"JabilBulkLoadID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}},\"update\":{\"type\":\"object\",\"properties\":{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"PurchaseOrderStatus\":{\"type\":\"string\"},\"DocumentID\":{\"type\":\"string\"},\"DocumentDate\":{\"type\":\"string\"},\"ShipDate\":{\"type\":\"string\"},\"ManufacturerPartNbr\":{\"type\":\"string\"},\"SupplierPartNbr\":{\"type\":\"string\"},\"JabilPartNbr\":{\"type\":\"string\"},\"Currency\":{\"type\":\"string\"},\"ShippedQty\":{\"type\":\"number\"},\"UnitPrice\":{\"type\":\"number\"},\"SalePriceLocalAmt\":{\"type\":\"number\"},\"SalePriceUSD\":{\"type\":\"number\"},\"ReturnQty\":{\"type\":\"number\"},\"ReturnUSD\":{\"type\":\"number\"},\"ReturnReason\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"SupplierBulkLoadID\":{\"type\":\"string\"},\"JabilBulkLoadID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}}}}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"result\":{\"type\":\"object\",\"properties\":{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"PurchaseOrderStatus\":{\"type\":\"string\"},\"DocumentID\":{\"type\":\"string\"},\"DocumentDate\":{\"type\":\"string\"},\"ShipDate\":{\"type\":\"string\"},\"ManufacturerPartNbr\":{\"type\":\"string\"},\"SupplierPartNbr\":{\"type\":\"string\"},\"JabilPartNbr\":{\"type\":\"string\"},\"Currency\":{\"type\":\"string\"},\"ShippedQty\":{\"type\":\"number\"},\"UnitPrice\":{\"type\":\"number\"},\"SalePriceLocalAmt\":{\"type\":\"number\"},\"SalePriceUSD\":{\"type\":\"number\"},\"ReturnQty\":{\"type\":\"number\"},\"ReturnUSD\":{\"type\":\"number\"},\"ReturnReason\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"SupplierBulkLoadID\":{\"type\":\"string\"},\"JabilBulkLoadID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"result\":{\"type\":\"object\",\"properties\":{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"PurchaseOrderStatus\":{\"type\":\"string\"},\"DocumentID\":{\"type\":\"string\"},\"DocumentDate\":{\"type\":\"string\"},\"ShipDate\":{\"type\":\"string\"},\"ManufacturerPartNbr\":{\"type\":\"string\"},\"SupplierPartNbr\":{\"type\":\"string\"},\"JabilPartNbr\":{\"type\":\"string\"},\"Currency\":{\"type\":\"string\"},\"ShippedQty\":{\"type\":\"number\"},\"UnitPrice\":{\"type\":\"number\"},\"SalePriceLocalAmt\":{\"type\":\"number\"},\"SalePriceUSD\":{\"type\":\"number\"},\"ReturnQty\":{\"type\":\"number\"},\"ReturnUSD\":{\"type\":\"number\"},\"ReturnReason\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"SupplierBulkLoadID\":{\"type\":\"string\"},\"JabilBulkLoadID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "DeleteKey",
                        "name": "DeleteKey",
                        "description": "This activity deletes data from fabric world state",
                        "activity": {
                            "ref": "#delete",
                            "input": {
                                "key": "=$activity[Get].key",
                                "privateCollection": "",
                                "keysOnly": true,
                                "compositeKeys": "=$property[\"CompositeKeys.SupplierVerifiedYearMonth\"]"
                            },
                            "schemas": {
                                "output": {
                                    "result": "schema://PurchaseLedger"
                                }
                            }
                        }
                    },
                    {
                        "id": "Put",
                        "name": "Put",
                        "description": "This activity stores data to fabric ledger",
                        "activity": {
                            "ref": "#put",
                            "input": {
                                "key": "=$activity[Get].key",
                                "privateCollection": "",
                                "compositeKeys": "=$property[\"CompositeKeys.SupplierVerifiedYearMonth\"]",
                                "data": "=$activity[MergePurchase].result"
                            },
                            "schemas": {
                                "input": {
                                    "data": "schema://PurchaseLedger"
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"PurchaseOrderNbr\": {\n            \"type\": \"string\"\n        },\n        \"SupplierID\": {\n            \"type\": \"string\"\n        },\n        \"PurchaseOrderStatus\": {\n            \"type\": \"string\"\n        },\n        \"DocumentID\": {\n            \"type\": \"string\"\n        },\n        \"DocumentDate\": {\n            \"type\": \"string\"\n        },\n        \"ShipDate\": {\n            \"type\": \"string\"\n        },\n        \"ManufacturerPartNbr\": {\n            \"type\": \"string\"\n        },\n        \"SupplierPartNbr\": {\n            \"type\": \"string\"\n        },\n        \"JabilPartNbr\": {\n            \"type\": \"string\"\n        },\n        \"Currency\": {\n            \"type\": \"string\"\n        },\n        \"ShippedQty\": {\n            \"type\": \"number\"\n        },\n        \"UnitPrice\": {\n            \"type\": \"number\"\n        },\n        \"SalePriceLocalAmt\": {\n            \"type\": \"number\"\n        },\n        \"SalePriceUSD\": {\n            \"type\": \"number\"\n        },\n        \"ReturnQty\": {\n            \"type\": \"number\"\n        },\n        \"ReturnUSD\": {\n            \"type\": \"number\"\n        },\n        \"ReturnReason\": {\n            \"type\": \"string\"\n        },\n        \"VerifiedBy\": {\n            \"type\": \"string\"\n        },\n        \"SupplierBulkLoadID\": {\n            \"type\": \"string\"\n        },\n        \"JabilBulkLoadID\": {\n            \"type\": \"string\"\n        },\n        \"Year\": {\n            \"type\": \"number\"\n        },\n        \"Month\": {\n            \"type\": \"number\"\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}",
                                        "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"PurchaseOrderNbr\": {\n            \"type\": \"string\"\n        },\n        \"SupplierID\": {\n            \"type\": \"string\"\n        },\n        \"PurchaseOrderStatus\": {\n            \"type\": \"string\"\n        },\n        \"DocumentID\": {\n            \"type\": \"string\"\n        },\n        \"DocumentDate\": {\n            \"type\": \"string\"\n        },\n        \"ShipDate\": {\n            \"type\": \"string\"\n        },\n        \"ManufacturerPartNbr\": {\n            \"type\": \"string\"\n        },\n        \"SupplierPartNbr\": {\n            \"type\": \"string\"\n        },\n        \"JabilPartNbr\": {\n            \"type\": \"string\"\n        },\n        \"Currency\": {\n            \"type\": \"string\"\n        },\n        \"ShippedQty\": {\n            \"type\": \"number\"\n        },\n        \"UnitPrice\": {\n            \"type\": \"number\"\n        },\n        \"SalePriceLocalAmt\": {\n            \"type\": \"number\"\n        },\n        \"SalePriceUSD\": {\n            \"type\": \"number\"\n        },\n        \"ReturnQty\": {\n            \"type\": \"number\"\n        },\n        \"ReturnUSD\": {\n            \"type\": \"number\"\n        },\n        \"ReturnReason\": {\n            \"type\": \"string\"\n        },\n        \"VerifiedBy\": {\n            \"type\": \"string\"\n        },\n        \"SupplierBulkLoadID\": {\n            \"type\": \"string\"\n        },\n        \"JabilBulkLoadID\": {\n            \"type\": \"string\"\n        },\n        \"Year\": {\n            \"type\": \"number\"\n        },\n        \"Month\": {\n            \"type\": \"number\"\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogUpdate",
                        "name": "LogUpdate",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[UpdatePurchase] \", $activity[Put].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return1",
                        "name": "Return1",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[Put].code",
                                    "message": "=$activity[Put].message",
                                    "result": "=$activity[Put].result",
                                    "key": "=$activity[Put].key"
                                }
                            }
                        }
                    },
                    {
                        "id": "Put2",
                        "name": "Put2",
                        "description": "This activity stores data to fabric ledger",
                        "activity": {
                            "ref": "#put",
                            "input": {
                                "key": "=$activity[Get].key",
                                "privateCollection": "",
                                "compositeKeys": "=$property[\"CompositeKeys.SupplierVerifiedYearMonth\"]",
                                "data": "=$activity[MergePurchase].result"
                            },
                            "schemas": {
                                "input": {
                                    "data": "schema://PurchaseLedger"
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"PurchaseOrderNbr\": {\n            \"type\": \"string\"\n        },\n        \"SupplierID\": {\n            \"type\": \"string\"\n        },\n        \"PurchaseOrderStatus\": {\n            \"type\": \"string\"\n        },\n        \"DocumentID\": {\n            \"type\": \"string\"\n        },\n        \"DocumentDate\": {\n            \"type\": \"string\"\n        },\n        \"ShipDate\": {\n            \"type\": \"string\"\n        },\n        \"ManufacturerPartNbr\": {\n            \"type\": \"string\"\n        },\n        \"SupplierPartNbr\": {\n            \"type\": \"string\"\n        },\n        \"JabilPartNbr\": {\n            \"type\": \"string\"\n        },\n        \"Currency\": {\n            \"type\": \"string\"\n        },\n        \"ShippedQty\": {\n            \"type\": \"number\"\n        },\n        \"UnitPrice\": {\n            \"type\": \"number\"\n        },\n        \"SalePriceLocalAmt\": {\n            \"type\": \"number\"\n        },\n        \"SalePriceUSD\": {\n            \"type\": \"number\"\n        },\n        \"ReturnQty\": {\n            \"type\": \"number\"\n        },\n        \"ReturnUSD\": {\n            \"type\": \"number\"\n        },\n        \"ReturnReason\": {\n            \"type\": \"string\"\n        },\n        \"VerifiedBy\": {\n            \"type\": \"string\"\n        },\n        \"SupplierBulkLoadID\": {\n            \"type\": \"string\"\n        },\n        \"JabilBulkLoadID\": {\n            \"type\": \"string\"\n        },\n        \"Year\": {\n            \"type\": \"number\"\n        },\n        \"Month\": {\n            \"type\": \"number\"\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}",
                                        "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"PurchaseOrderNbr\": {\n            \"type\": \"string\"\n        },\n        \"SupplierID\": {\n            \"type\": \"string\"\n        },\n        \"PurchaseOrderStatus\": {\n            \"type\": \"string\"\n        },\n        \"DocumentID\": {\n            \"type\": \"string\"\n        },\n        \"DocumentDate\": {\n            \"type\": \"string\"\n        },\n        \"ShipDate\": {\n            \"type\": \"string\"\n        },\n        \"ManufacturerPartNbr\": {\n            \"type\": \"string\"\n        },\n        \"SupplierPartNbr\": {\n            \"type\": \"string\"\n        },\n        \"JabilPartNbr\": {\n            \"type\": \"string\"\n        },\n        \"Currency\": {\n            \"type\": \"string\"\n        },\n        \"ShippedQty\": {\n            \"type\": \"number\"\n        },\n        \"UnitPrice\": {\n            \"type\": \"number\"\n        },\n        \"SalePriceLocalAmt\": {\n            \"type\": \"number\"\n        },\n        \"SalePriceUSD\": {\n            \"type\": \"number\"\n        },\n        \"ReturnQty\": {\n            \"type\": \"number\"\n        },\n        \"ReturnUSD\": {\n            \"type\": \"number\"\n        },\n        \"ReturnReason\": {\n            \"type\": \"string\"\n        },\n        \"VerifiedBy\": {\n            \"type\": \"string\"\n        },\n        \"SupplierBulkLoadID\": {\n            \"type\": \"string\"\n        },\n        \"JabilBulkLoadID\": {\n            \"type\": \"string\"\n        },\n        \"Year\": {\n            \"type\": \"number\"\n        },\n        \"Month\": {\n            \"type\": \"number\"\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Log1",
                        "name": "Log1",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[UpdatePurchase] no key change: \", $activity[Put2].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return3",
                        "name": "Return3",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[Put2].code",
                                    "message": "=$activity[Put2].message",
                                    "key": "=$activity[Put2].key",
                                    "result": "=$activity[Put2].result"
                                }
                            }
                        }
                    },
                    {
                        "id": "Put1",
                        "name": "Put1",
                        "description": "This activity stores data to fabric ledger",
                        "activity": {
                            "ref": "#put",
                            "input": {
                                "key": "=string.concat($flow.purchase.PurchaseOrderNbr, \"-\", $flow.purchase.ManufacturerPartNbr)",
                                "privateCollection": "",
                                "compositeKeys": "=$property[\"CompositeKeys.SupplierVerifiedYearMonth\"]",
                                "data": "=$flow.purchase"
                            },
                            "schemas": {
                                "input": {
                                    "data": "schema://PurchaseLedger"
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"PurchaseOrderNbr\": {\n            \"type\": \"string\"\n        },\n        \"SupplierID\": {\n            \"type\": \"string\"\n        },\n        \"PurchaseOrderStatus\": {\n            \"type\": \"string\"\n        },\n        \"DocumentID\": {\n            \"type\": \"string\"\n        },\n        \"DocumentDate\": {\n            \"type\": \"string\"\n        },\n        \"ShipDate\": {\n            \"type\": \"string\"\n        },\n        \"ManufacturerPartNbr\": {\n            \"type\": \"string\"\n        },\n        \"SupplierPartNbr\": {\n            \"type\": \"string\"\n        },\n        \"JabilPartNbr\": {\n            \"type\": \"string\"\n        },\n        \"Currency\": {\n            \"type\": \"string\"\n        },\n        \"ShippedQty\": {\n            \"type\": \"number\"\n        },\n        \"UnitPrice\": {\n            \"type\": \"number\"\n        },\n        \"SalePriceLocalAmt\": {\n            \"type\": \"number\"\n        },\n        \"SalePriceUSD\": {\n            \"type\": \"number\"\n        },\n        \"ReturnQty\": {\n            \"type\": \"number\"\n        },\n        \"ReturnUSD\": {\n            \"type\": \"number\"\n        },\n        \"ReturnReason\": {\n            \"type\": \"string\"\n        },\n        \"VerifiedBy\": {\n            \"type\": \"string\"\n        },\n        \"SupplierBulkLoadID\": {\n            \"type\": \"string\"\n        },\n        \"JabilBulkLoadID\": {\n            \"type\": \"string\"\n        },\n        \"Year\": {\n            \"type\": \"number\"\n        },\n        \"Month\": {\n            \"type\": \"number\"\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}",
                                        "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"PurchaseOrderNbr\": {\n            \"type\": \"string\"\n        },\n        \"SupplierID\": {\n            \"type\": \"string\"\n        },\n        \"PurchaseOrderStatus\": {\n            \"type\": \"string\"\n        },\n        \"DocumentID\": {\n            \"type\": \"string\"\n        },\n        \"DocumentDate\": {\n            \"type\": \"string\"\n        },\n        \"ShipDate\": {\n            \"type\": \"string\"\n        },\n        \"ManufacturerPartNbr\": {\n            \"type\": \"string\"\n        },\n        \"SupplierPartNbr\": {\n            \"type\": \"string\"\n        },\n        \"JabilPartNbr\": {\n            \"type\": \"string\"\n        },\n        \"Currency\": {\n            \"type\": \"string\"\n        },\n        \"ShippedQty\": {\n            \"type\": \"number\"\n        },\n        \"UnitPrice\": {\n            \"type\": \"number\"\n        },\n        \"SalePriceLocalAmt\": {\n            \"type\": \"number\"\n        },\n        \"SalePriceUSD\": {\n            \"type\": \"number\"\n        },\n        \"ReturnQty\": {\n            \"type\": \"number\"\n        },\n        \"ReturnUSD\": {\n            \"type\": \"number\"\n        },\n        \"ReturnReason\": {\n            \"type\": \"string\"\n        },\n        \"VerifiedBy\": {\n            \"type\": \"string\"\n        },\n        \"SupplierBulkLoadID\": {\n            \"type\": \"string\"\n        },\n        \"JabilBulkLoadID\": {\n            \"type\": \"string\"\n        },\n        \"Year\": {\n            \"type\": \"number\"\n        },\n        \"Month\": {\n            \"type\": \"number\"\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogCreate",
                        "name": "LogCreate",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[CreatePurchase] \", $activity[Put1].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return2",
                        "name": "Return2",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[Put1].code",
                                    "message": "=$activity[Put1].message",
                                    "key": "=$activity[Put1].key",
                                    "result": "=$activity[Put1].result"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogUnauthorized",
                        "name": "LogUnauthorized",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"User of \", $flow.clientEntity, \" cannot put purchase for \", $flow.purchase.SupplierID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": 400,
                                    "message": "=string.concat(\"User is not authorized to put PO: \", $flow.purchase.PurchaseOrderNbr, \", MPN: \", $flow.purchase.ManufacturerPartNbr)",
                                    "key": "=string.concat($flow.purchase.PurchaseOrderNbr, \"-\", $flow.purchase.ManufacturerPartNbr)"
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "clientEntity",
                            "type": "string"
                        },
                        {
                            "name": "purchase",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"PurchaseOrderStatus\":{\"type\":\"string\"},\"DocumentID\":{\"type\":\"string\"},\"DocumentDate\":{\"type\":\"string\"},\"ShipDate\":{\"type\":\"string\"},\"ManufacturerPartNbr\":{\"type\":\"string\"},\"SupplierPartNbr\":{\"type\":\"string\"},\"JabilPartNbr\":{\"type\":\"string\"},\"Currency\":{\"type\":\"string\"},\"ShippedQty\":{\"type\":\"number\"},\"UnitPrice\":{\"type\":\"number\"},\"SalePriceLocalAmt\":{\"type\":\"number\"},\"SalePriceUSD\":{\"type\":\"number\"},\"ReturnQty\":{\"type\":\"number\"},\"ReturnUSD\":{\"type\":\"number\"},\"ReturnReason\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"SupplierBulkLoadID\":{\"type\":\"string\"},\"JabilBulkLoadID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "key",
                            "type": "string"
                        },
                        {
                            "name": "result",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"PurchaseOrderStatus\":{\"type\":\"string\"},\"DocumentID\":{\"type\":\"string\"},\"DocumentDate\":{\"type\":\"string\"},\"ShipDate\":{\"type\":\"string\"},\"ManufacturerPartNbr\":{\"type\":\"string\"},\"SupplierPartNbr\":{\"type\":\"string\"},\"JabilPartNbr\":{\"type\":\"string\"},\"Currency\":{\"type\":\"string\"},\"ShippedQty\":{\"type\":\"number\"},\"UnitPrice\":{\"type\":\"number\"},\"SalePriceLocalAmt\":{\"type\":\"number\"},\"SalePriceUSD\":{\"type\":\"number\"},\"ReturnQty\":{\"type\":\"number\"},\"ReturnUSD\":{\"type\":\"number\"},\"ReturnReason\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"SupplierBulkLoadID\":{\"type\":\"string\"},\"JabilBulkLoadID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"clientEntity\":{\"type\":\"string\"},\"purchase\":{\"type\":\"object\",\"properties\":{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"PurchaseOrderStatus\":{\"type\":\"string\"},\"DocumentID\":{\"type\":\"string\"},\"DocumentDate\":{\"type\":\"string\"},\"ShipDate\":{\"type\":\"string\"},\"ManufacturerPartNbr\":{\"type\":\"string\"},\"SupplierPartNbr\":{\"type\":\"string\"},\"JabilPartNbr\":{\"type\":\"string\"},\"Currency\":{\"type\":\"string\"},\"ShippedQty\":{\"type\":\"number\"},\"UnitPrice\":{\"type\":\"number\"},\"SalePriceLocalAmt\":{\"type\":\"number\"},\"SalePriceUSD\":{\"type\":\"number\"},\"ReturnQty\":{\"type\":\"number\"},\"ReturnUSD\":{\"type\":\"number\"},\"ReturnReason\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"SupplierBulkLoadID\":{\"type\":\"string\"},\"JabilBulkLoadID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}}}}",
                        "output": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"status\":{\"type\":\"number\"},\"message\":{\"type\":\"string\"},\"key\":{\"type\":\"string\"},\"result\":{\"type\":\"object\",\"properties\":{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"PurchaseOrderStatus\":{\"type\":\"string\"},\"DocumentID\":{\"type\":\"string\"},\"DocumentDate\":{\"type\":\"string\"},\"ShipDate\":{\"type\":\"string\"},\"ManufacturerPartNbr\":{\"type\":\"string\"},\"SupplierPartNbr\":{\"type\":\"string\"},\"JabilPartNbr\":{\"type\":\"string\"},\"Currency\":{\"type\":\"string\"},\"ShippedQty\":{\"type\":\"number\"},\"UnitPrice\":{\"type\":\"number\"},\"SalePriceLocalAmt\":{\"type\":\"number\"},\"SalePriceUSD\":{\"type\":\"number\"},\"ReturnQty\":{\"type\":\"number\"},\"ReturnUSD\":{\"type\":\"number\"},\"ReturnReason\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"SupplierBulkLoadID\":{\"type\":\"string\"},\"JabilBulkLoadID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}}}}"
                    }
                }
            }
        },
        {
            "id": "flow:MergePurchaseSubflow",
            "data": {
                "name": "MergePurchaseSubflow",
                "description": "Merge original purchase with updated purchase, update VerifiedBy according to whether SalePriceUSD field is changed.",
                "links": [],
                "tasks": [
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "result": {
                                        "mapping": {
                                            "PurchaseOrderNbr": "=$flow.update.PurchaseOrderNbr",
                                            "SupplierID": "=$flow.update.SupplierID",
                                            "ManufacturerPartNbr": "=$flow.update.ManufacturerPartNbr",
                                            "DocumentDate": "=$flow.update.DocumentDate",
                                            "SalePriceUSD": "=$flow.update.SalePriceUSD",
                                            "Year": "=$flow.update.Year",
                                            "Month": "=$flow.update.Month",
                                            "DocType": "=$flow.update.DocType",
                                            "PurchaseOrderStatus": "=dovetail.notZeroValue($flow.original.PurchaseOrderStatus, $flow.update.PurchaseOrderStatus)",
                                            "DocumentID": "=dovetail.notZeroValue($flow.original.DocumentID, $flow.update.DocumentID)",
                                            "ShipDate": "=dovetail.notZeroValue($flow.original.ShipDate, $flow.update.ShipDate)",
                                            "SupplierPartNbr": "=dovetail.notZeroValue($flow.original.SupplierPartNbr, $flow.update.SupplierPartNbr)",
                                            "JabilPartNbr": "=dovetail.notZeroValue($flow.original.JabilPartNbr, $flow.update.JabilPartNbr)",
                                            "Currency": "=dovetail.notZeroValue($flow.original.Currency, $flow.update.Currency)",
                                            "ShippedQty": "=dovetail.notZeroValue($flow.original.ShippedQty, $flow.update.ShippedQty)",
                                            "UnitPrice": "=dovetail.notZeroValue($flow.original.UnitPrice, $flow.update.UnitPrice)",
                                            "SalePriceLocalAmt": "=dovetail.notZeroValue($flow.original.SalePriceLocalAmt, $flow.update.SalePriceLocalAmt)",
                                            "ReturnQty": "=dovetail.notZeroValue($flow.original.ReturnQty, $flow.update.ReturnQty)",
                                            "ReturnUSD": "=dovetail.notZeroValue($flow.original.ReturnUSD, $flow.update.ReturnUSD)",
                                            "ReturnReason": "=dovetail.notZeroValue($flow.original.ReturnReason, $flow.update.ReturnReason)",
                                            "VerifiedBy": "=dovetail.conditionalChoice($flow.original.SalePriceUSD != $flow.update.SalePriceUSD, $flow.original.VerifiedBy, $flow.update.VerifiedBy, $property[\"Reconciliation.RECONCILED\"])",
                                            "SupplierBulkLoadID": "=dovetail.notZeroValue($flow.original.SupplierBulkLoadID, $flow.update.SupplierBulkLoadID)",
                                            "JabilBulkLoadID": "=dovetail.notZeroValue($flow.original.JabilBulkLoadID, $flow.update.JabilBulkLoadID)"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "original",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"PurchaseOrderStatus\":{\"type\":\"string\"},\"DocumentID\":{\"type\":\"string\"},\"DocumentDate\":{\"type\":\"string\"},\"ShipDate\":{\"type\":\"string\"},\"ManufacturerPartNbr\":{\"type\":\"string\"},\"SupplierPartNbr\":{\"type\":\"string\"},\"JabilPartNbr\":{\"type\":\"string\"},\"Currency\":{\"type\":\"string\"},\"ShippedQty\":{\"type\":\"number\"},\"UnitPrice\":{\"type\":\"number\"},\"SalePriceLocalAmt\":{\"type\":\"number\"},\"SalePriceUSD\":{\"type\":\"number\"},\"ReturnQty\":{\"type\":\"number\"},\"ReturnUSD\":{\"type\":\"number\"},\"ReturnReason\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"SupplierBulkLoadID\":{\"type\":\"string\"},\"JabilBulkLoadID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "update",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"PurchaseOrderStatus\":{\"type\":\"string\"},\"DocumentID\":{\"type\":\"string\"},\"DocumentDate\":{\"type\":\"string\"},\"ShipDate\":{\"type\":\"string\"},\"ManufacturerPartNbr\":{\"type\":\"string\"},\"SupplierPartNbr\":{\"type\":\"string\"},\"JabilPartNbr\":{\"type\":\"string\"},\"Currency\":{\"type\":\"string\"},\"ShippedQty\":{\"type\":\"number\"},\"UnitPrice\":{\"type\":\"number\"},\"SalePriceLocalAmt\":{\"type\":\"number\"},\"SalePriceUSD\":{\"type\":\"number\"},\"ReturnQty\":{\"type\":\"number\"},\"ReturnUSD\":{\"type\":\"number\"},\"ReturnReason\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"SupplierBulkLoadID\":{\"type\":\"string\"},\"JabilBulkLoadID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "output": [
                        {
                            "name": "result",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"PurchaseOrderStatus\":{\"type\":\"string\"},\"DocumentID\":{\"type\":\"string\"},\"DocumentDate\":{\"type\":\"string\"},\"ShipDate\":{\"type\":\"string\"},\"ManufacturerPartNbr\":{\"type\":\"string\"},\"SupplierPartNbr\":{\"type\":\"string\"},\"JabilPartNbr\":{\"type\":\"string\"},\"Currency\":{\"type\":\"string\"},\"ShippedQty\":{\"type\":\"number\"},\"UnitPrice\":{\"type\":\"number\"},\"SalePriceLocalAmt\":{\"type\":\"number\"},\"SalePriceUSD\":{\"type\":\"number\"},\"ReturnQty\":{\"type\":\"number\"},\"ReturnUSD\":{\"type\":\"number\"},\"ReturnReason\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"SupplierBulkLoadID\":{\"type\":\"string\"},\"JabilBulkLoadID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"original\":{\"type\":\"object\",\"properties\":{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"PurchaseOrderStatus\":{\"type\":\"string\"},\"DocumentID\":{\"type\":\"string\"},\"DocumentDate\":{\"type\":\"string\"},\"ShipDate\":{\"type\":\"string\"},\"ManufacturerPartNbr\":{\"type\":\"string\"},\"SupplierPartNbr\":{\"type\":\"string\"},\"JabilPartNbr\":{\"type\":\"string\"},\"Currency\":{\"type\":\"string\"},\"ShippedQty\":{\"type\":\"number\"},\"UnitPrice\":{\"type\":\"number\"},\"SalePriceLocalAmt\":{\"type\":\"number\"},\"SalePriceUSD\":{\"type\":\"number\"},\"ReturnQty\":{\"type\":\"number\"},\"ReturnUSD\":{\"type\":\"number\"},\"ReturnReason\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"SupplierBulkLoadID\":{\"type\":\"string\"},\"JabilBulkLoadID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}},\"update\":{\"type\":\"object\",\"properties\":{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"PurchaseOrderStatus\":{\"type\":\"string\"},\"DocumentID\":{\"type\":\"string\"},\"DocumentDate\":{\"type\":\"string\"},\"ShipDate\":{\"type\":\"string\"},\"ManufacturerPartNbr\":{\"type\":\"string\"},\"SupplierPartNbr\":{\"type\":\"string\"},\"JabilPartNbr\":{\"type\":\"string\"},\"Currency\":{\"type\":\"string\"},\"ShippedQty\":{\"type\":\"number\"},\"UnitPrice\":{\"type\":\"number\"},\"SalePriceLocalAmt\":{\"type\":\"number\"},\"SalePriceUSD\":{\"type\":\"number\"},\"ReturnQty\":{\"type\":\"number\"},\"ReturnUSD\":{\"type\":\"number\"},\"ReturnReason\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"SupplierBulkLoadID\":{\"type\":\"string\"},\"JabilBulkLoadID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}}}}",
                        "output": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"result\":{\"type\":\"object\",\"properties\":{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"PurchaseOrderStatus\":{\"type\":\"string\"},\"DocumentID\":{\"type\":\"string\"},\"DocumentDate\":{\"type\":\"string\"},\"ShipDate\":{\"type\":\"string\"},\"ManufacturerPartNbr\":{\"type\":\"string\"},\"SupplierPartNbr\":{\"type\":\"string\"},\"JabilPartNbr\":{\"type\":\"string\"},\"Currency\":{\"type\":\"string\"},\"ShippedQty\":{\"type\":\"number\"},\"UnitPrice\":{\"type\":\"number\"},\"SalePriceLocalAmt\":{\"type\":\"number\"},\"SalePriceUSD\":{\"type\":\"number\"},\"ReturnQty\":{\"type\":\"number\"},\"ReturnUSD\":{\"type\":\"number\"},\"ReturnReason\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"SupplierBulkLoadID\":{\"type\":\"string\"},\"JabilBulkLoadID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}}}}"
                    }
                }
            }
        },
        {
            "id": "flow:QueryAllAgreements",
            "data": {
                "name": "QueryAllAgreements",
                "description": "Query all agreements, primary or not",
                "links": [
                    {
                        "id": 1,
                        "from": "Cid",
                        "to": "LogRequestor",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "LogRequestor",
                        "to": "LogRequest",
                        "type": "expression",
                        "label": "Authorized",
                        "value": "$activity[Cid].attrs.entity == $property[\"Entity.JABIL\"]"
                    },
                    {
                        "id": 3,
                        "from": "LogRequest",
                        "to": "Query",
                        "type": "expression",
                        "label": "PrimaryOnly",
                        "value": "$flow.parameters.PrimaryOnly"
                    },
                    {
                        "id": 4,
                        "from": "Query",
                        "to": "LogPrimary",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "LogPrimary",
                        "to": "Return1",
                        "type": "default"
                    },
                    {
                        "id": 6,
                        "from": "LogRequest",
                        "to": "QueryAll",
                        "type": "exprOtherwise",
                        "label": "QueryAll"
                    },
                    {
                        "id": 7,
                        "from": "QueryAll",
                        "to": "LogAll",
                        "type": "default"
                    },
                    {
                        "id": 8,
                        "from": "LogAll",
                        "to": "Return",
                        "type": "default"
                    },
                    {
                        "id": 9,
                        "from": "LogRequestor",
                        "to": "LogUnauthorized",
                        "type": "exprOtherwise",
                        "label": "NoAuthorized"
                    },
                    {
                        "id": 10,
                        "from": "LogUnauthorized",
                        "to": "ThrowError",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Cid",
                        "name": "Cid",
                        "description": "This activity returns requesting client ID",
                        "activity": {
                            "ref": "#cid",
                            "schemas": {
                                "output": {
                                    "attrs": "schema://ClientID"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogRequestor",
                        "name": "LogRequestor",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"QueryAllAgreement by user \", $activity[Cid].attrs.email)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "LogRequest",
                        "name": "LogRequest",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"PrimaryOnly=\", coerce.toString($flow.parameters.PrimaryOnly))",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Query",
                        "name": "Query",
                        "description": "This activity fetches data by rich query on fabric Couch DB",
                        "activity": {
                            "ref": "#query",
                            "input": {
                                "query": "{\n    \"selector\": {\n        \"DocType\": \"$doctype\",\n        \"IsPrimary\": \"$isprimary\"\n    }\n}",
                                "usePagination": false,
                                "pageSize": 0,
                                "start": "",
                                "privateCollection": "",
                                "queryParams": {
                                    "mapping": {
                                        "doctype": "=$property[\"DocType.AGREEMENT\"]",
                                        "isprimary": "=boolean.true()"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "queryParams": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"doctype\":{\"type\":\"string\"},\"isprimary\":{\"type\":\"boolean\"}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"doctype\",\"type\":\"string\"},{\"parameterName\":\"isprimary\",\"type\":\"boolean\"}]"
                                    }
                                },
                                "output": {
                                    "result": "schema://AgreementLedgerMap"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogPrimary",
                        "name": "LogPrimary",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[QueryPrimaryAgreement] \", $activity[Query].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return1",
                        "name": "Return1",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[Query].code",
                                    "message": "=$activity[Query].message",
                                    "returns": {
                                        "mapping": {
                                            "@foreach($activity[Query].result,returns)": {
                                                "key": "=$loop.key",
                                                "value": "=$loop.value"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "QueryAll",
                        "name": "QueryAll",
                        "description": "This activity fetches data by rich query on fabric Couch DB",
                        "activity": {
                            "ref": "#query",
                            "input": {
                                "query": "{\n    \"selector\": {\n        \"DocType\": \"$doctype\"\n    }\n}",
                                "usePagination": false,
                                "pageSize": 0,
                                "start": "",
                                "privateCollection": "",
                                "queryParams": {
                                    "mapping": {
                                        "doctype": "=$property[\"DocType.AGREEMENT\"]"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "queryParams": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"doctype\":{\"type\":\"string\"}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"doctype\",\"type\":\"string\"}]"
                                    }
                                },
                                "output": {
                                    "result": "schema://AgreementLedgerMap"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogAll",
                        "name": "LogAll",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[QueryAllAgreement] \", $activity[QueryAll].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[QueryAll].code",
                                    "message": "=$activity[QueryAll].message",
                                    "returns": {
                                        "mapping": {
                                            "@foreach($activity[QueryAll].result,returns)": {
                                                "value": "=$loop.value",
                                                "key": "=$loop.key"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogUnauthorized",
                        "name": "LogUnauthorized",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"User \", $activity[Cid].attrs.alias, \" of \", $activity[Cid].attrs.entity, \" cannot query all agreements\")",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "ThrowError",
                        "name": "ThrowError",
                        "description": "Throws an Error",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "User is not authorized to query all agreements"
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"PrimaryOnly\":{\"type\":\"boolean\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"PrimaryOnly\":{\"type\":\"boolean\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"AgreementID\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"IsPrimary\":{\"type\":\"boolean\"},\"FullName\":{\"type\":\"string\"},\"ShortName\":{\"type\":\"string\"},\"Status\":{\"type\":\"string\"},\"SignatureDate\":{\"type\":\"string\"},\"SignedBy\":{\"type\":\"string\"},\"ReferenceID\":{\"type\":\"string\"},\"ReferenceHash\":{\"type\":\"string\"},\"StartDate\":{\"type\":\"string\"},\"EndDate\":{\"type\":\"string\"},\"CollectionFrequency\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"GrowthTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleGrowth\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"StandardTerms\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"MinSaleAmt\":{\"type\":\"number\"},\"BonusPct\":{\"type\":\"number\"}}}},\"DocType\":{\"type\":\"string\"}}}}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:TotalPurchaseSubflow",
            "data": {
                "name": "TotalPurchaseSubflow",
                "description": "Return total purchases of a specified period calculated from monthly summary",
                "links": [
                    {
                        "id": 1,
                        "from": "GetByCompositeKey",
                        "to": "Log",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "Log",
                        "to": "Mapper",
                        "type": "expression",
                        "label": "HasData",
                        "value": "$activity[GetByCompositeKey].code == 200"
                    },
                    {
                        "id": 3,
                        "from": "Mapper",
                        "to": "Log1",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "Log1",
                        "to": "Return",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "Log",
                        "to": "Return1",
                        "type": "exprOtherwise",
                        "label": "NoData"
                    }
                ],
                "tasks": [
                    {
                        "id": "GetByCompositeKey",
                        "name": "GetByCompositeKey",
                        "description": "This activity fetches data by composite-key from fabric ledger",
                        "activity": {
                            "ref": "#getbycompositekey",
                            "input": {
                                "keyName": "=$property[\"CompositeKeys.SupplierYearMonthSummary\"]",
                                "usePagination": false,
                                "pageSize": 0,
                                "start": "",
                                "privateCollection": "",
                                "attributes": {
                                    "mapping": {
                                        "SupplierID": "=$flow.SupplierID",
                                        "Year": "=$flow.Year"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "attributes": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"SupplierID\",\"type\":\"string\"},{\"parameterName\":\"Year\",\"type\":\"number\"}]"
                                    }
                                },
                                "output": {
                                    "result": "schema://MonthlyPurchaseMap"
                                }
                            }
                        }
                    },
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[MonthlyPurchase] \", $activity[GetByCompositeKey].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Mapper",
                        "name": "Mapper",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "@foreach($activity[GetByCompositeKey].result,input,$flow.Type == \"ANNUALLY\" || ($flow.Type == \"SEMI-ANNUALLY\" && $loop.value.Month > 6*($flow.Sequence-1) && $loop.value.Month <= 6*$flow.Sequence) || ($flow.Type == \"QUARTERLY\" && $loop.value.Month > 3*($flow.Sequence-1) && $loop.value.Month <= 3*$flow.Sequence))": {
                                            "Month": "=$loop.value.Month",
                                            "Amt": "=$loop.value.PurchaseAmt"
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"Month\":{\"type\":\"number\"},\"Amt\":{\"type\":\"number\"}}}}",
                                        "fe_metadata": "[\n    {\n        \"Month\": 0,\n        \"Amt\": 0\n    }\n]"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"Month\":{\"type\":\"number\"},\"Amt\":{\"type\":\"number\"}}}}",
                                        "fe_metadata": "[\n  {\n    \"Month\": 0,\n    \"Amt\": 0\n  }\n]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Log1",
                        "name": "Log1",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"Selected for Type \", $flow.Type, \" Sequence \", coerce.toString($flow.Sequence), \": \", utility.renderJSON($activity[Mapper].output, false))",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "TotalAmt": "=dovetail.sum(json.path(\"$loop.[*].Amt\", $activity[Mapper].output))"
                                }
                            }
                        }
                    },
                    {
                        "id": "Return1",
                        "name": "Return1",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "TotalAmt": 0
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "SupplierID",
                            "type": "string"
                        },
                        {
                            "name": "Type",
                            "type": "string"
                        },
                        {
                            "name": "Year",
                            "type": "float64"
                        },
                        {
                            "name": "Sequence",
                            "type": "float64"
                        }
                    ],
                    "output": [
                        {
                            "name": "TotalAmt",
                            "type": "float64"
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Sequence\":{\"type\":\"number\"}}}",
                        "output": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"TotalAmt\":{\"type\":\"number\"}}}"
                    }
                }
            }
        },
        {
            "id": "flow:CalculateRebate",
            "data": {
                "name": "CalculateRebate",
                "description": "calculate rebate amount for a specified period from a supplier",
                "links": [
                    {
                        "id": 1,
                        "from": "Cid",
                        "to": "LogRequestor",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "LogRequestor",
                        "to": "Get",
                        "type": "expression",
                        "label": "Authorized",
                        "value": "$activity[Cid].attrs.entity == $property[\"Entity.JABIL\"] || $activity[Cid].attrs.entity == $flow.parameters.SupplierID"
                    },
                    {
                        "id": 3,
                        "from": "Get",
                        "to": "LogAgreement",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "LogAgreement",
                        "to": "TotalPurchase",
                        "type": "expression",
                        "label": "FoundAgreement",
                        "value": "$activity[Get].code == 200"
                    },
                    {
                        "id": 5,
                        "from": "TotalPurchase",
                        "to": "LogTotalAmt",
                        "type": "default"
                    },
                    {
                        "id": 6,
                        "from": "LogTotalAmt",
                        "to": "PreviousYear",
                        "type": "expression",
                        "label": "ByGrowth",
                        "value": "$activity[Get].result.Type == \"BASELINE_GROWTH\""
                    },
                    {
                        "id": 7,
                        "from": "PreviousYear",
                        "to": "Log",
                        "type": "default"
                    },
                    {
                        "id": 8,
                        "from": "Log",
                        "to": "Mapper1",
                        "type": "default"
                    },
                    {
                        "id": 9,
                        "from": "Mapper1",
                        "to": "Log1",
                        "type": "default"
                    },
                    {
                        "id": 10,
                        "from": "Log1",
                        "to": "Return",
                        "type": "default"
                    },
                    {
                        "id": 11,
                        "from": "LogTotalAmt",
                        "to": "Mapper",
                        "type": "exprOtherwise",
                        "label": "ByAmount"
                    },
                    {
                        "id": 12,
                        "from": "Mapper",
                        "to": "Log2",
                        "type": "default"
                    },
                    {
                        "id": 13,
                        "from": "Log2",
                        "to": "Return1",
                        "type": "default"
                    },
                    {
                        "id": 14,
                        "from": "LogAgreement",
                        "to": "ThrowError",
                        "type": "exprOtherwise",
                        "label": "NoAgreement"
                    },
                    {
                        "id": 15,
                        "from": "LogRequestor",
                        "to": "LogUnauthorized",
                        "type": "exprOtherwise",
                        "label": "NotAuthorized"
                    },
                    {
                        "id": 16,
                        "from": "LogUnauthorized",
                        "to": "ThrowError1",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Cid",
                        "name": "Cid",
                        "description": "This activity returns requesting client ID",
                        "activity": {
                            "ref": "#cid",
                            "schemas": {
                                "output": {
                                    "attrs": "schema://ClientID"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogRequestor",
                        "name": "LogRequestor",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"CalculateRebate by user \", $activity[Cid].attrs.email, \" from \", $flow.parameters.SupplierID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Get",
                        "name": "Get",
                        "description": "This activity fetches data by key from fabric ledger",
                        "activity": {
                            "ref": "#get",
                            "input": {
                                "key": "=$flow.parameters.AgreementID",
                                "privateCollection": ""
                            },
                            "schemas": {
                                "output": {
                                    "result": "schema://AgreementLedger"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogAgreement",
                        "name": "LogAgreement",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[GetAgreement] \", $activity[Get].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "TotalPurchase",
                        "name": "TotalPurchase",
                        "description": "Simple SubFlow Activity",
                        "activity": {
                            "ref": "#subflow",
                            "settings": {
                                "flowURI": "res://flow:TotalPurchaseSubflow"
                            },
                            "input": {
                                "SupplierID": "=$flow.parameters.SupplierID",
                                "Type": "=$activity[Get].result.CollectionFrequency",
                                "Year": "=$flow.parameters.Year",
                                "Sequence": "=$flow.parameters.Sequence"
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Sequence\":{\"type\":\"number\"}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Sequence\":{\"type\":\"number\"}}}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"TotalAmt\":{\"type\":\"number\"}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"TotalAmt\":{\"type\":\"number\"}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogTotalAmt",
                        "name": "LogTotalAmt",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"Total sales for year \", coerce.toString($flow.parameters.Year), \" seq \", coerce.toString($flow.parameters.Sequence), \": \", coerce.toString($activity[TotalPurchase].TotalAmt))",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "PreviousYear",
                        "name": "PreviousYear",
                        "description": "Simple SubFlow Activity",
                        "activity": {
                            "ref": "#subflow",
                            "settings": {
                                "flowURI": "res://flow:TotalPurchaseSubflow"
                            },
                            "input": {
                                "SupplierID": "=$flow.parameters.SupplierID",
                                "Type": "=$activity[Get].result.CollectionFrequency",
                                "Year": "=$flow.parameters.Year - 1",
                                "Sequence": "=$flow.parameters.Sequence"
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Sequence\":{\"type\":\"number\"}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Sequence\":{\"type\":\"number\"}}}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"TotalAmt\":{\"type\":\"number\"}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"TotalAmt\":{\"type\":\"number\"}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"Previous year amounts \", coerce.toString($activity[PreviousYear].TotalAmt))",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Mapper1",
                        "name": "Mapper1",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "@foreach($activity[Get].result.GrowthTerms,input,$loop.MinSaleGrowth*$activity[PreviousYear].TotalAmt < $activity[TotalPurchase].TotalAmt)": {
                                            "Amount": "=$loop.BonusPct * ($activity[TotalPurchase].TotalAmt - $activity[PreviousYear].TotalAmt*$loop.MinSaleGrowth)"
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"Amount\":{\"type\":\"number\"}}}}",
                                        "fe_metadata": "[\n    {\n        \"Amount\": 0\n    }]"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"Amount\":{\"type\":\"number\"}}}}",
                                        "fe_metadata": "[\n  {\n    \"Amount\": 0\n  }\n]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Log1",
                        "name": "Log1",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"Bonus: \", utility.renderJSON($activity[Mapper1].output, false))",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": 200,
                                    "message": "Calculated bonus by growth rate",
                                    "returns": {
                                        "mapping": {
                                            "RebateAmt": "=dovetail.sum(json.path(\"$loop.Amount\", $activity[Mapper1].output))"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Mapper",
                        "name": "Mapper",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "@foreach($activity[Get].result.StandardTerms,input,$loop.MinSaleAmt < $activity[TotalPurchase].TotalAmt)": {
                                            "Amount": "=$loop.BonusPct * ($activity[TotalPurchase].TotalAmt - $loop.MinSaleAmt)"
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"Amount\":{\"type\":\"number\"}}}}",
                                        "fe_metadata": "[\n    {\n        \"Amount\": 0\n    }\n]"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"Amount\":{\"type\":\"number\"}}}}",
                                        "fe_metadata": "[\n  {\n    \"Amount\": 0\n  }\n]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Log2",
                        "name": "Log2",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"Bonus: \", utility.renderJSON($activity[Mapper].output, false))",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return1",
                        "name": "Return1",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": 200,
                                    "message": "Calculated bonus by standard rate",
                                    "returns": {
                                        "mapping": {
                                            "RebateAmt": "=dovetail.sum(json.path(\"$loop.Amount\", $activity[Mapper].output))"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "ThrowError",
                        "name": "ThrowError",
                        "description": "Throws an Error",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"Agreement does not exist: \", $flow.parameters.AgreementID)"
                            }
                        }
                    },
                    {
                        "id": "LogUnauthorized",
                        "name": "LogUnauthorized",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"User \", $activity[Cid].attrs.alias, \" of \", $activity[Cid].attrs.entity, \" cannot calculate rebate from \", $flow.parameters.SupplierID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "ThrowError1",
                        "name": "ThrowError1",
                        "description": "Throws an Error",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"User is not authorized to calculate rebate from \", $flow.parameters.SupplierID)"
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"SupplierID\":{\"type\":\"string\"},\"AgreementID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Sequence\":{\"type\":\"number\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"RebateAmt\":{\"type\":\"number\"}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"SupplierID\":{\"type\":\"string\"},\"AgreementID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Sequence\":{\"type\":\"number\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"RebateAmt\":{\"type\":\"number\"}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:DeletePurchase",
            "data": {
                "name": "DeletePurchase",
                "description": "Delete current state of a PO item",
                "links": [
                    {
                        "id": 1,
                        "from": "Cid",
                        "to": "LogRequestor",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "LogRequestor",
                        "to": "Get",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "Get",
                        "to": "LogGet",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "LogGet",
                        "to": "ReturnNoFound",
                        "type": "expression",
                        "label": "NotFound",
                        "value": "$activity[Get].code != 200"
                    },
                    {
                        "id": 5,
                        "from": "LogGet",
                        "to": "Log",
                        "type": "exprOtherwise",
                        "label": "Found"
                    },
                    {
                        "id": 6,
                        "from": "Log",
                        "to": "Delete",
                        "type": "expression",
                        "label": "Authorized",
                        "value": "$activity[Cid].attrs.entity == $property[\"Entity.JABIL\"] || $activity[Cid].attrs.entity == $activity[Get].result.SupplierID"
                    },
                    {
                        "id": 7,
                        "from": "Delete",
                        "to": "LogDelete",
                        "type": "default"
                    },
                    {
                        "id": 8,
                        "from": "LogDelete",
                        "to": "Return",
                        "type": "default"
                    },
                    {
                        "id": 9,
                        "from": "Log",
                        "to": "LogUnauthorized",
                        "type": "exprOtherwise",
                        "label": "NotAuthorized"
                    },
                    {
                        "id": 10,
                        "from": "LogUnauthorized",
                        "to": "ThrowError",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Cid",
                        "name": "Cid",
                        "description": "This activity returns requesting client ID",
                        "activity": {
                            "ref": "#cid",
                            "schemas": {
                                "output": {
                                    "attrs": "schema://ClientID"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogRequestor",
                        "name": "LogRequestor",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"DeletePurchase by user \", $activity[Cid].attrs.email, \" for PO: \", $flow.parameters.PurchaseOrderNbr, \" MPN: \", $flow.parameters.ManufacturerPartNbr)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Get",
                        "name": "Get",
                        "description": "This activity fetches data by key from fabric ledger",
                        "activity": {
                            "ref": "#get",
                            "input": {
                                "key": "=string.concat($flow.parameters.PurchaseOrderNbr, \"-\", $flow.parameters.ManufacturerPartNbr)",
                                "privateCollection": ""
                            },
                            "schemas": {
                                "output": {
                                    "result": "schema://PurchaseLedger"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogGet",
                        "name": "LogGet",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[GetPurchase] \", $activity[Get].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "ReturnNoFound",
                        "name": "ReturnNoFound",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": 300,
                                    "message": "=string.concat(\"Record not found for PO: \", $flow.parameters.PurchaseOrderNbr, \" and MPN: \", $flow.parameters.ManufacturerPartNbr)"
                                }
                            }
                        }
                    },
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"Check user entity \", $activity[Cid].attrs.entity, \" compared to supplier \", $activity[Get].result.SupplierID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Delete",
                        "name": "Delete",
                        "description": "This activity deletes data from fabric world state",
                        "activity": {
                            "ref": "#delete",
                            "input": {
                                "key": "=$activity[Get].key",
                                "privateCollection": "",
                                "keysOnly": false,
                                "compositeKeys": "=$property[\"CompositeKeys.SupplierVerifiedYearMonth\"]"
                            },
                            "schemas": {
                                "output": {
                                    "result": "schema://PurchaseLedger"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogDelete",
                        "name": "LogDelete",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[DeletePurchase] \", $activity[Delete].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[Delete].code",
                                    "returns": "=$activity[Delete].result",
                                    "message": "=$activity[Delete].message"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogUnauthorized",
                        "name": "LogUnauthorized",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"User of \", $activity[Cid].attrs.entity, \" cannot delete purchase for \", $activity[Get].result.SupplierID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "ThrowError",
                        "name": "ThrowError",
                        "description": "Throws an Error",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"User is not authorized to delete purchase of  \", $activity[Get].result.SupplierID)"
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"ManufacturerPartNbr\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"PurchaseOrderStatus\":{\"type\":\"string\"},\"DocumentID\":{\"type\":\"string\"},\"DocumentDate\":{\"type\":\"string\"},\"ShipDate\":{\"type\":\"string\"},\"ManufacturerPartNbr\":{\"type\":\"string\"},\"SupplierPartNbr\":{\"type\":\"string\"},\"JabilPartNbr\":{\"type\":\"string\"},\"Currency\":{\"type\":\"string\"},\"ShippedQty\":{\"type\":\"number\"},\"UnitPrice\":{\"type\":\"number\"},\"SalePriceLocalAmt\":{\"type\":\"number\"},\"SalePriceUSD\":{\"type\":\"number\"},\"ReturnQty\":{\"type\":\"number\"},\"ReturnUSD\":{\"type\":\"number\"},\"ReturnReason\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"SupplierBulkLoadID\":{\"type\":\"string\"},\"JabilBulkLoadID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"ManufacturerPartNbr\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"PurchaseOrderNbr\":{\"type\":\"string\"},\"SupplierID\":{\"type\":\"string\"},\"PurchaseOrderStatus\":{\"type\":\"string\"},\"DocumentID\":{\"type\":\"string\"},\"DocumentDate\":{\"type\":\"string\"},\"ShipDate\":{\"type\":\"string\"},\"ManufacturerPartNbr\":{\"type\":\"string\"},\"SupplierPartNbr\":{\"type\":\"string\"},\"JabilPartNbr\":{\"type\":\"string\"},\"Currency\":{\"type\":\"string\"},\"ShippedQty\":{\"type\":\"number\"},\"UnitPrice\":{\"type\":\"number\"},\"SalePriceLocalAmt\":{\"type\":\"number\"},\"SalePriceUSD\":{\"type\":\"number\"},\"ReturnQty\":{\"type\":\"number\"},\"ReturnUSD\":{\"type\":\"number\"},\"ReturnReason\":{\"type\":\"string\"},\"VerifiedBy\":{\"type\":\"string\"},\"SupplierBulkLoadID\":{\"type\":\"string\"},\"JabilBulkLoadID\":{\"type\":\"string\"},\"Year\":{\"type\":\"number\"},\"Month\":{\"type\":\"number\"},\"DocType\":{\"type\":\"string\"}}}},\"required\":[]}"
                    }
                }
            }
        }
    ],
    "properties": [
        {
            "name": "Entity.JABIL",
            "type": "string",
            "value": "jabil"
        },
        {
            "name": "DocType.SUPPLIER",
            "type": "string",
            "value": "Supplier"
        },
        {
            "name": "DocType.AGREEMENT",
            "type": "string",
            "value": "Agreement"
        },
        {
            "name": "DocType.BULK_LOAD",
            "type": "string",
            "value": "BulkLoad"
        },
        {
            "name": "DocType.MONTHLY_PURCHASE",
            "type": "string",
            "value": "MonthlyPurchase"
        },
        {
            "name": "AgreementTerms.GROWTH",
            "type": "string",
            "value": "BASELINE_GROWTH"
        },
        {
            "name": "AgreementTerms.FIXED_RATE",
            "type": "string",
            "value": "FIXED_RATE"
        },
        {
            "name": "AgreementTerms.STANDARD",
            "type": "string",
            "value": "STANDARD_STEP"
        },
        {
            "name": "Reconciliation.BOTH_SIGNED",
            "type": "string",
            "value": "BOTH"
        },
        {
            "name": "Reconciliation.RECONCILED",
            "type": "string",
            "value": "BOTH"
        },
        {
            "name": "DocType.PURCHASE",
            "type": "string",
            "value": "Purchase"
        },
        {
            "name": "Collections.s1",
            "type": "string",
            "value": "s1Transactions"
        },
        {
            "name": "Collections.s2",
            "type": "string",
            "value": "s2Transactions"
        },
        {
            "name": "CompositeKeys.SupplierPrimary",
            "type": "string",
            "value": "supplier~primary=SupplierID,IsPrimary"
        },
        {
            "name": "CompositeKeys.SupplierYearMonthSummary",
            "type": "string",
            "value": "supplier~year~month~summary=SupplierID,Year,Month"
        },
        {
            "name": "CompositeKeys.SupplierVerifiedYearMonth",
            "type": "string",
            "value": "supplier~verified~year~month=SupplierID,VerifiedBy,Year,Month"
        }
    ],
    "schemas": {
        "SupplierLedger": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"SupplierID\": {\n            \"type\": \"string\"\n        },\n        \"TenantID\": {\n            \"type\": \"string\"\n        },\n        \"GlobalCode\": {\n            \"type\": \"string\"\n        },\n        \"FullName\": {\n            \"type\": \"string\"\n        },\n        \"ShortName\": {\n            \"type\": \"string\"\n        },\n        \"Description\": {\n            \"type\": \"string\"\n        },\n        \"Region\": {\n            \"type\": \"string\"\n        },\n        \"Commodity\": {\n            \"type\": \"string\"\n        },\n        \"HighLevelCommodity\": {\n            \"type\": \"string\"\n        },\n        \"Address\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"Street1\": {\n                    \"type\": \"string\"\n                },\n                \"Street2\": {\n                    \"type\": \"string\"\n                },\n                \"Street3\": {\n                    \"type\": \"string\"\n                },\n                \"Street4\": {\n                    \"type\": \"string\"\n                },\n                \"CityOrMunicipality\": {\n                    \"type\": \"string\"\n                },\n                \"StateOrProvince\": {\n                    \"type\": \"string\"\n                },\n                \"CountyOrSubdivision\": {\n                    \"type\": \"string\"\n                },\n                \"ZipOrPostcode\": {\n                    \"type\": \"string\"\n                },\n                \"Country\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"WebsiteURL\": {\n            \"type\": \"string\"\n        },\n        \"TickerSymbol\": {\n            \"type\": \"string\"\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"SupplierID\": {\n            \"type\": \"string\"\n        },\n        \"TenantID\": {\n            \"type\": \"string\"\n        },\n        \"GlobalCode\": {\n            \"type\": \"string\"\n        },\n        \"FullName\": {\n            \"type\": \"string\"\n        },\n        \"ShortName\": {\n            \"type\": \"string\"\n        },\n        \"Description\": {\n            \"type\": \"string\"\n        },\n        \"Region\": {\n            \"type\": \"string\"\n        },\n        \"Commodity\": {\n            \"type\": \"string\"\n        },\n        \"HighLevelCommodity\": {\n            \"type\": \"string\"\n        },\n        \"Address\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"Street1\": {\n                    \"type\": \"string\"\n                },\n                \"Street2\": {\n                    \"type\": \"string\"\n                },\n                \"Street3\": {\n                    \"type\": \"string\"\n                },\n                \"Street4\": {\n                    \"type\": \"string\"\n                },\n                \"CityOrMunicipality\": {\n                    \"type\": \"string\"\n                },\n                \"StateOrProvince\": {\n                    \"type\": \"string\"\n                },\n                \"CountyOrSubdivision\": {\n                    \"type\": \"string\"\n                },\n                \"ZipOrPostcode\": {\n                    \"type\": \"string\"\n                },\n                \"Country\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"WebsiteURL\": {\n            \"type\": \"string\"\n        },\n        \"TickerSymbol\": {\n            \"type\": \"string\"\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}"
        },
        "ClientID": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"alias\": {\n            \"type\": \"string\"\n        },\n        \"entity\": {\n            \"type\": \"string\"\n        },\n        \"email\": {\n            \"type\": \"string\"\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"alias\": {\n            \"type\": \"string\"\n        },\n        \"entity\": {\n            \"type\": \"string\"\n        },\n        \"email\": {\n            \"type\": \"string\"\n        }\n    }\n}"
        },
        "SupplierRequest": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"supplier\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"SupplierID\": {\n                    \"type\": \"string\"\n                },\n                \"TenantID\": {\n                    \"type\": \"string\"\n                },\n                \"GlobalCode\": {\n                    \"type\": \"string\"\n                },\n                \"FullName\": {\n                    \"type\": \"string\"\n                },\n                \"ShortName\": {\n                    \"type\": \"string\"\n                },\n                \"Description\": {\n                    \"type\": \"string\"\n                },\n                \"Region\": {\n                    \"type\": \"string\"\n                },\n                \"Commodity\": {\n                    \"type\": \"string\"\n                },\n                \"HighLevelCommodity\": {\n                    \"type\": \"string\"\n                },\n                \"Address\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"Street1\": {\n                            \"type\": \"string\"\n                        },\n                        \"Street2\": {\n                            \"type\": \"string\"\n                        },\n                        \"Street3\": {\n                            \"type\": \"string\"\n                        },\n                        \"Street4\": {\n                            \"type\": \"string\"\n                        },\n                        \"CityOrMunicipality\": {\n                            \"type\": \"string\"\n                        },\n                        \"StateOrProvince\": {\n                            \"type\": \"string\"\n                        },\n                        \"CountyOrSubdivision\": {\n                            \"type\": \"string\"\n                        },\n                        \"ZipOrPostcode\": {\n                            \"type\": \"string\"\n                        },\n                        \"Country\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"WebsiteURL\": {\n                    \"type\": \"string\"\n                },\n                \"TickerSymbol\": {\n                    \"type\": \"string\"\n                },\n                \"DocType\": {\n                    \"type\": \"string\"\n                }\n            }\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"supplier\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"SupplierID\": {\n                    \"type\": \"string\"\n                },\n                \"TenantID\": {\n                    \"type\": \"string\"\n                },\n                \"GlobalCode\": {\n                    \"type\": \"string\"\n                },\n                \"FullName\": {\n                    \"type\": \"string\"\n                },\n                \"ShortName\": {\n                    \"type\": \"string\"\n                },\n                \"Description\": {\n                    \"type\": \"string\"\n                },\n                \"Region\": {\n                    \"type\": \"string\"\n                },\n                \"Commodity\": {\n                    \"type\": \"string\"\n                },\n                \"HighLevelCommodity\": {\n                    \"type\": \"string\"\n                },\n                \"Address\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"Street1\": {\n                            \"type\": \"string\"\n                        },\n                        \"Street2\": {\n                            \"type\": \"string\"\n                        },\n                        \"Street3\": {\n                            \"type\": \"string\"\n                        },\n                        \"Street4\": {\n                            \"type\": \"string\"\n                        },\n                        \"CityOrMunicipality\": {\n                            \"type\": \"string\"\n                        },\n                        \"StateOrProvince\": {\n                            \"type\": \"string\"\n                        },\n                        \"CountyOrSubdivision\": {\n                            \"type\": \"string\"\n                        },\n                        \"ZipOrPostcode\": {\n                            \"type\": \"string\"\n                        },\n                        \"Country\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"WebsiteURL\": {\n                    \"type\": \"string\"\n                },\n                \"TickerSymbol\": {\n                    \"type\": \"string\"\n                },\n                \"DocType\": {\n                    \"type\": \"string\"\n                }\n            }\n        }\n    }\n}"
        },
        "AgreementLedger": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"AgreementID\": {\n            \"type\": \"string\"\n        },\n        \"SupplierID\": {\n            \"type\": \"string\"\n        },\n        \"IsPrimary\": {\n            \"type\": \"boolean\"\n        },\n        \"FullName\": {\n            \"type\": \"string\"\n        },\n        \"ShortName\": {\n            \"type\": \"string\"\n        },\n        \"Status\": {\n            \"type\": \"string\"\n        },\n        \"SignatureDate\": {\n            \"type\": \"string\"\n        },\n        \"SignedBy\": {\n            \"type\": \"string\"\n        },\n        \"ReferenceID\": {\n            \"type\": \"string\"\n        },\n        \"ReferenceHash\": {\n            \"type\": \"string\"\n        },\n        \"StartDate\": {\n            \"type\": \"string\"\n        },\n        \"EndDate\": {\n            \"type\": \"string\"\n        },\n        \"CollectionFrequency\": {\n            \"type\": \"string\"\n        },\n        \"Type\": {\n            \"type\": \"string\"\n        },\n        \"GrowthTerms\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"MinSaleGrowth\": {\n                        \"type\": \"number\"\n                    },\n                    \"BonusPct\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        },\n        \"StandardTerms\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"MinSaleAmt\": {\n                        \"type\": \"number\"\n                    },\n                    \"BonusPct\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"AgreementID\": {\n            \"type\": \"string\"\n        },\n        \"SupplierID\": {\n            \"type\": \"string\"\n        },\n        \"IsPrimary\": {\n            \"type\": \"boolean\"\n        },\n        \"FullName\": {\n            \"type\": \"string\"\n        },\n        \"ShortName\": {\n            \"type\": \"string\"\n        },\n        \"Status\": {\n            \"type\": \"string\"\n        },\n        \"SignatureDate\": {\n            \"type\": \"string\"\n        },\n        \"SignedBy\": {\n            \"type\": \"string\"\n        },\n        \"ReferenceID\": {\n            \"type\": \"string\"\n        },\n        \"ReferenceHash\": {\n            \"type\": \"string\"\n        },\n        \"StartDate\": {\n            \"type\": \"string\"\n        },\n        \"EndDate\": {\n            \"type\": \"string\"\n        },\n        \"CollectionFrequency\": {\n            \"type\": \"string\"\n        },\n        \"Type\": {\n            \"type\": \"string\"\n        },\n        \"GrowthTerms\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"MinSaleGrowth\": {\n                        \"type\": \"number\"\n                    },\n                    \"BonusPct\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        },\n        \"StandardTerms\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"MinSaleAmt\": {\n                        \"type\": \"number\"\n                    },\n                    \"BonusPct\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}"
        },
        "AgreementRequest": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"agreement\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"AgreementID\": {\n                    \"type\": \"string\"\n                },\n                \"SupplierID\": {\n                    \"type\": \"string\"\n                },\n                \"IsPrimary\": {\n                    \"type\": \"boolean\"\n                },\n                \"FullName\": {\n                    \"type\": \"string\"\n                },\n                \"ShortName\": {\n                    \"type\": \"string\"\n                },\n                \"Status\": {\n                    \"type\": \"string\"\n                },\n                \"SignatureDate\": {\n                    \"type\": \"string\"\n                },\n                \"SignedBy\": {\n                    \"type\": \"string\"\n                },\n                \"ReferenceID\": {\n                    \"type\": \"string\"\n                },\n                \"ReferenceHash\": {\n                    \"type\": \"string\"\n                },\n                \"StartDate\": {\n                    \"type\": \"string\"\n                },\n                \"EndDate\": {\n                    \"type\": \"string\"\n                },\n                \"CollectionFrequency\": {\n                    \"type\": \"string\"\n                },\n                \"Type\": {\n                    \"type\": \"string\"\n                },\n                \"GrowthTerms\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"MinSaleGrowth\": {\n                                \"type\": \"number\"\n                            },\n                            \"BonusPct\": {\n                                \"type\": \"number\"\n                            }\n                        }\n                    }\n                },\n                \"StandardTerms\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"MinSaleAmt\": {\n                                \"type\": \"number\"\n                            },\n                            \"BonusPct\": {\n                                \"type\": \"number\"\n                            }\n                        }\n                    }\n                },\n                \"DocType\": {\n                    \"type\": \"string\"\n                }\n            }\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"agreement\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"AgreementID\": {\n                    \"type\": \"string\"\n                },\n                \"SupplierID\": {\n                    \"type\": \"string\"\n                },\n                \"IsPrimary\": {\n                    \"type\": \"boolean\"\n                },\n                \"FullName\": {\n                    \"type\": \"string\"\n                },\n                \"ShortName\": {\n                    \"type\": \"string\"\n                },\n                \"Status\": {\n                    \"type\": \"string\"\n                },\n                \"SignatureDate\": {\n                    \"type\": \"string\"\n                },\n                \"SignedBy\": {\n                    \"type\": \"string\"\n                },\n                \"ReferenceID\": {\n                    \"type\": \"string\"\n                },\n                \"ReferenceHash\": {\n                    \"type\": \"string\"\n                },\n                \"StartDate\": {\n                    \"type\": \"string\"\n                },\n                \"EndDate\": {\n                    \"type\": \"string\"\n                },\n                \"CollectionFrequency\": {\n                    \"type\": \"string\"\n                },\n                \"Type\": {\n                    \"type\": \"string\"\n                },\n                \"GrowthTerms\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"MinSaleGrowth\": {\n                                \"type\": \"number\"\n                            },\n                            \"BonusPct\": {\n                                \"type\": \"number\"\n                            }\n                        }\n                    }\n                },\n                \"StandardTerms\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"MinSaleAmt\": {\n                                \"type\": \"number\"\n                            },\n                            \"BonusPct\": {\n                                \"type\": \"number\"\n                            }\n                        }\n                    }\n                },\n                \"DocType\": {\n                    \"type\": \"string\"\n                }\n            }\n        }\n    }\n}"
        },
        "AgreementLedgerMap": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"key\": {\n                \"type\": \"string\"\n            },\n            \"value\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"AgreementID\": {\n                        \"type\": \"string\"\n                    },\n                    \"SupplierID\": {\n                        \"type\": \"string\"\n                    },\n                    \"IsPrimary\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"FullName\": {\n                        \"type\": \"string\"\n                    },\n                    \"ShortName\": {\n                        \"type\": \"string\"\n                    },\n                    \"Status\": {\n                        \"type\": \"string\"\n                    },\n                    \"SignatureDate\": {\n                        \"type\": \"string\"\n                    },\n                    \"SignedBy\": {\n                        \"type\": \"string\"\n                    },\n                    \"ReferenceID\": {\n                        \"type\": \"string\"\n                    },\n                    \"ReferenceHash\": {\n                        \"type\": \"string\"\n                    },\n                    \"StartDate\": {\n                        \"type\": \"string\"\n                    },\n                    \"EndDate\": {\n                        \"type\": \"string\"\n                    },\n                    \"CollectionFrequency\": {\n                        \"type\": \"string\"\n                    },\n                    \"Type\": {\n                        \"type\": \"string\"\n                    },\n                    \"GrowthTerms\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"MinSaleGrowth\": {\n                                    \"type\": \"number\"\n                                },\n                                \"BonusPct\": {\n                                    \"type\": \"number\"\n                                }\n                            }\n                        }\n                    },\n                    \"StandardTerms\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"MinSaleAmt\": {\n                                    \"type\": \"number\"\n                                },\n                                \"BonusPct\": {\n                                    \"type\": \"number\"\n                                }\n                            }\n                        }\n                    },\n                    \"DocType\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"key\": {\n                \"type\": \"string\"\n            },\n            \"value\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"AgreementID\": {\n                        \"type\": \"string\"\n                    },\n                    \"SupplierID\": {\n                        \"type\": \"string\"\n                    },\n                    \"IsPrimary\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"FullName\": {\n                        \"type\": \"string\"\n                    },\n                    \"ShortName\": {\n                        \"type\": \"string\"\n                    },\n                    \"Status\": {\n                        \"type\": \"string\"\n                    },\n                    \"SignatureDate\": {\n                        \"type\": \"string\"\n                    },\n                    \"SignedBy\": {\n                        \"type\": \"string\"\n                    },\n                    \"ReferenceID\": {\n                        \"type\": \"string\"\n                    },\n                    \"ReferenceHash\": {\n                        \"type\": \"string\"\n                    },\n                    \"StartDate\": {\n                        \"type\": \"string\"\n                    },\n                    \"EndDate\": {\n                        \"type\": \"string\"\n                    },\n                    \"CollectionFrequency\": {\n                        \"type\": \"string\"\n                    },\n                    \"Type\": {\n                        \"type\": \"string\"\n                    },\n                    \"GrowthTerms\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"MinSaleGrowth\": {\n                                    \"type\": \"number\"\n                                },\n                                \"BonusPct\": {\n                                    \"type\": \"number\"\n                                }\n                            }\n                        }\n                    },\n                    \"StandardTerms\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"MinSaleAmt\": {\n                                    \"type\": \"number\"\n                                },\n                                \"BonusPct\": {\n                                    \"type\": \"number\"\n                                }\n                            }\n                        }\n                    },\n                    \"DocType\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}"
        },
        "BulkLoadLedger": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"BulkLoadID\": {\n            \"type\": \"string\"\n        },\n        \"ReferenceFile\": {\n            \"type\": \"string\"\n        },\n        \"ReferenceHash\": {\n            \"type\": \"string\"\n        },\n        \"LoadedBy\": {\n            \"type\": \"string\"\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"BulkLoadID\": {\n            \"type\": \"string\"\n        },\n        \"ReferenceFile\": {\n            \"type\": \"string\"\n        },\n        \"ReferenceHash\": {\n            \"type\": \"string\"\n        },\n        \"LoadedBy\": {\n            \"type\": \"string\"\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}"
        },
        "BulkLoadRequest": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"bulkLoad\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"BulkLoadID\": {\n                    \"type\": \"string\"\n                },\n                \"ReferenceFile\": {\n                    \"type\": \"string\"\n                },\n                \"ReferenceHash\": {\n                    \"type\": \"string\"\n                },\n                \"LoadedBy\": {\n                    \"type\": \"string\"\n                },\n                \"DocType\": {\n                    \"type\": \"string\"\n                }\n            }\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"bulkLoad\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"BulkLoadID\": {\n                    \"type\": \"string\"\n                },\n                \"ReferenceFile\": {\n                    \"type\": \"string\"\n                },\n                \"ReferenceHash\": {\n                    \"type\": \"string\"\n                },\n                \"LoadedBy\": {\n                    \"type\": \"string\"\n                },\n                \"DocType\": {\n                    \"type\": \"string\"\n                }\n            }\n        }\n    }\n}"
        },
        "MonthlyPurchaseLedger": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"SupplierID\": {\n            \"type\": \"string\"\n        },\n        \"Year\": {\n            \"type\": \"number\"\n        },\n        \"Month\": {\n            \"type\": \"number\"\n        },\n        \"PurchaseAmt\": {\n            \"type\": \"number\"\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"SupplierID\": {\n            \"type\": \"string\"\n        },\n        \"Year\": {\n            \"type\": \"number\"\n        },\n        \"Month\": {\n            \"type\": \"number\"\n        },\n        \"PurchaseAmt\": {\n            \"type\": \"number\"\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}"
        },
        "MonthlyPurchaseRequest": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"summary\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"SupplierID\": {\n                    \"type\": \"string\"\n                },\n                \"Year\": {\n                    \"type\": \"number\"\n                },\n                \"Month\": {\n                    \"type\": \"number\"\n                },\n                \"PurchaseAmt\": {\n                    \"type\": \"number\"\n                },\n                \"DocType\": {\n                    \"type\": \"string\"\n                }\n            }\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"summary\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"SupplierID\": {\n                    \"type\": \"string\"\n                },\n                \"Year\": {\n                    \"type\": \"number\"\n                },\n                \"Month\": {\n                    \"type\": \"number\"\n                },\n                \"PurchaseAmt\": {\n                    \"type\": \"number\"\n                },\n                \"DocType\": {\n                    \"type\": \"string\"\n                }\n            }\n        }\n    }\n}"
        },
        "MonthlyPurchaseMap": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"key\": {\n                \"type\": \"string\"\n            },\n            \"value\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"SupplierID\": {\n                        \"type\": \"string\"\n                    },\n                    \"Year\": {\n                        \"type\": \"number\"\n                    },\n                    \"Month\": {\n                        \"type\": \"number\"\n                    },\n                    \"PurchaseAmt\": {\n                        \"type\": \"number\"\n                    },\n                    \"DocType\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"key\": {\n                \"type\": \"string\"\n            },\n            \"value\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"SupplierID\": {\n                        \"type\": \"string\"\n                    },\n                    \"Year\": {\n                        \"type\": \"number\"\n                    },\n                    \"Month\": {\n                        \"type\": \"number\"\n                    },\n                    \"PurchaseAmt\": {\n                        \"type\": \"number\"\n                    },\n                    \"DocType\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}"
        },
        "PurchaseLedger": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"PurchaseOrderNbr\": {\n            \"type\": \"string\"\n        },\n        \"SupplierID\": {\n            \"type\": \"string\"\n        },\n        \"PurchaseOrderStatus\": {\n            \"type\": \"string\"\n        },\n        \"DocumentID\": {\n            \"type\": \"string\"\n        },\n        \"DocumentDate\": {\n            \"type\": \"string\"\n        },\n        \"ShipDate\": {\n            \"type\": \"string\"\n        },\n        \"ManufacturerPartNbr\": {\n            \"type\": \"string\"\n        },\n        \"SupplierPartNbr\": {\n            \"type\": \"string\"\n        },\n        \"JabilPartNbr\": {\n            \"type\": \"string\"\n        },\n        \"Currency\": {\n            \"type\": \"string\"\n        },\n        \"ShippedQty\": {\n            \"type\": \"number\"\n        },\n        \"UnitPrice\": {\n            \"type\": \"number\"\n        },\n        \"SalePriceLocalAmt\": {\n            \"type\": \"number\"\n        },\n        \"SalePriceUSD\": {\n            \"type\": \"number\"\n        },\n        \"ReturnQty\": {\n            \"type\": \"number\"\n        },\n        \"ReturnUSD\": {\n            \"type\": \"number\"\n        },\n        \"ReturnReason\": {\n            \"type\": \"string\"\n        },\n        \"VerifiedBy\": {\n            \"type\": \"string\"\n        },\n        \"SupplierBulkLoadID\": {\n            \"type\": \"string\"\n        },\n        \"JabilBulkLoadID\": {\n            \"type\": \"string\"\n        },\n        \"Year\": {\n            \"type\": \"number\"\n        },\n        \"Month\": {\n            \"type\": \"number\"\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"PurchaseOrderNbr\": {\n            \"type\": \"string\"\n        },\n        \"SupplierID\": {\n            \"type\": \"string\"\n        },\n        \"PurchaseOrderStatus\": {\n            \"type\": \"string\"\n        },\n        \"DocumentID\": {\n            \"type\": \"string\"\n        },\n        \"DocumentDate\": {\n            \"type\": \"string\"\n        },\n        \"ShipDate\": {\n            \"type\": \"string\"\n        },\n        \"ManufacturerPartNbr\": {\n            \"type\": \"string\"\n        },\n        \"SupplierPartNbr\": {\n            \"type\": \"string\"\n        },\n        \"JabilPartNbr\": {\n            \"type\": \"string\"\n        },\n        \"Currency\": {\n            \"type\": \"string\"\n        },\n        \"ShippedQty\": {\n            \"type\": \"number\"\n        },\n        \"UnitPrice\": {\n            \"type\": \"number\"\n        },\n        \"SalePriceLocalAmt\": {\n            \"type\": \"number\"\n        },\n        \"SalePriceUSD\": {\n            \"type\": \"number\"\n        },\n        \"ReturnQty\": {\n            \"type\": \"number\"\n        },\n        \"ReturnUSD\": {\n            \"type\": \"number\"\n        },\n        \"ReturnReason\": {\n            \"type\": \"string\"\n        },\n        \"VerifiedBy\": {\n            \"type\": \"string\"\n        },\n        \"SupplierBulkLoadID\": {\n            \"type\": \"string\"\n        },\n        \"JabilBulkLoadID\": {\n            \"type\": \"string\"\n        },\n        \"Year\": {\n            \"type\": \"number\"\n        },\n        \"Month\": {\n            \"type\": \"number\"\n        },\n        \"DocType\": {\n            \"type\": \"string\"\n        }\n    }\n}"
        },
        "PurchasesRequest": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"purchases\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"PurchaseOrderNbr\": {\n                        \"type\": \"string\"\n                    },\n                    \"SupplierID\": {\n                        \"type\": \"string\"\n                    },\n                    \"PurchaseOrderStatus\": {\n                        \"type\": \"string\"\n                    },\n                    \"DocumentID\": {\n                        \"type\": \"string\"\n                    },\n                    \"DocumentDate\": {\n                        \"type\": \"string\"\n                    },\n                    \"ShipDate\": {\n                        \"type\": \"string\"\n                    },\n                    \"ManufacturerPartNbr\": {\n                        \"type\": \"string\"\n                    },\n                    \"SupplierPartNbr\": {\n                        \"type\": \"string\"\n                    },\n                    \"JabilPartNbr\": {\n                        \"type\": \"string\"\n                    },\n                    \"Currency\": {\n                        \"type\": \"string\"\n                    },\n                    \"ShippedQty\": {\n                        \"type\": \"number\"\n                    },\n                    \"UnitPrice\": {\n                        \"type\": \"number\"\n                    },\n                    \"SalePriceLocalAmt\": {\n                        \"type\": \"number\"\n                    },\n                    \"SalePriceUSD\": {\n                        \"type\": \"number\"\n                    },\n                    \"ReturnQty\": {\n                        \"type\": \"number\"\n                    },\n                    \"ReturnUSD\": {\n                        \"type\": \"number\"\n                    },\n                    \"ReturnReason\": {\n                        \"type\": \"string\"\n                    },\n                    \"VerifiedBy\": {\n                        \"type\": \"string\"\n                    },\n                    \"SupplierBulkLoadID\": {\n                        \"type\": \"string\"\n                    },\n                    \"JabilBulkLoadID\": {\n                        \"type\": \"string\"\n                    },\n                    \"Year\": {\n                        \"type\": \"number\"\n                    },\n                    \"Month\": {\n                        \"type\": \"number\"\n                    },\n                    \"DocType\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"purchases\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"PurchaseOrderNbr\": {\n                        \"type\": \"string\"\n                    },\n                    \"SupplierID\": {\n                        \"type\": \"string\"\n                    },\n                    \"PurchaseOrderStatus\": {\n                        \"type\": \"string\"\n                    },\n                    \"DocumentID\": {\n                        \"type\": \"string\"\n                    },\n                    \"DocumentDate\": {\n                        \"type\": \"string\"\n                    },\n                    \"ShipDate\": {\n                        \"type\": \"string\"\n                    },\n                    \"ManufacturerPartNbr\": {\n                        \"type\": \"string\"\n                    },\n                    \"SupplierPartNbr\": {\n                        \"type\": \"string\"\n                    },\n                    \"JabilPartNbr\": {\n                        \"type\": \"string\"\n                    },\n                    \"Currency\": {\n                        \"type\": \"string\"\n                    },\n                    \"ShippedQty\": {\n                        \"type\": \"number\"\n                    },\n                    \"UnitPrice\": {\n                        \"type\": \"number\"\n                    },\n                    \"SalePriceLocalAmt\": {\n                        \"type\": \"number\"\n                    },\n                    \"SalePriceUSD\": {\n                        \"type\": \"number\"\n                    },\n                    \"ReturnQty\": {\n                        \"type\": \"number\"\n                    },\n                    \"ReturnUSD\": {\n                        \"type\": \"number\"\n                    },\n                    \"ReturnReason\": {\n                        \"type\": \"string\"\n                    },\n                    \"VerifiedBy\": {\n                        \"type\": \"string\"\n                    },\n                    \"SupplierBulkLoadID\": {\n                        \"type\": \"string\"\n                    },\n                    \"JabilBulkLoadID\": {\n                        \"type\": \"string\"\n                    },\n                    \"Year\": {\n                        \"type\": \"number\"\n                    },\n                    \"Month\": {\n                        \"type\": \"number\"\n                    },\n                    \"DocType\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}"
        },
        "PurchaseMap": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"key\": {\n                \"type\": \"string\"\n            },\n            \"value\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"PurchaseOrderNbr\": {\n                        \"type\": \"string\"\n                    },\n                    \"SupplierID\": {\n                        \"type\": \"string\"\n                    },\n                    \"PurchaseOrderStatus\": {\n                        \"type\": \"string\"\n                    },\n                    \"DocumentID\": {\n                        \"type\": \"string\"\n                    },\n                    \"DocumentDate\": {\n                        \"type\": \"string\"\n                    },\n                    \"ShipDate\": {\n                        \"type\": \"string\"\n                    },\n                    \"ManufacturerPartNbr\": {\n                        \"type\": \"string\"\n                    },\n                    \"SupplierPartNbr\": {\n                        \"type\": \"string\"\n                    },\n                    \"JabilPartNbr\": {\n                        \"type\": \"string\"\n                    },\n                    \"Currency\": {\n                        \"type\": \"string\"\n                    },\n                    \"ShippedQty\": {\n                        \"type\": \"number\"\n                    },\n                    \"UnitPrice\": {\n                        \"type\": \"number\"\n                    },\n                    \"SalePriceLocalAmt\": {\n                        \"type\": \"number\"\n                    },\n                    \"SalePriceUSD\": {\n                        \"type\": \"number\"\n                    },\n                    \"ReturnQty\": {\n                        \"type\": \"number\"\n                    },\n                    \"ReturnUSD\": {\n                        \"type\": \"number\"\n                    },\n                    \"ReturnReason\": {\n                        \"type\": \"string\"\n                    },\n                    \"VerifiedBy\": {\n                        \"type\": \"string\"\n                    },\n                    \"SupplierBulkLoadID\": {\n                        \"type\": \"string\"\n                    },\n                    \"JabilBulkLoadID\": {\n                        \"type\": \"string\"\n                    },\n                    \"Year\": {\n                        \"type\": \"number\"\n                    },\n                    \"Month\": {\n                        \"type\": \"number\"\n                    },\n                    \"DocType\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"key\": {\n                \"type\": \"string\"\n            },\n            \"value\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"PurchaseOrderNbr\": {\n                        \"type\": \"string\"\n                    },\n                    \"SupplierID\": {\n                        \"type\": \"string\"\n                    },\n                    \"PurchaseOrderStatus\": {\n                        \"type\": \"string\"\n                    },\n                    \"DocumentID\": {\n                        \"type\": \"string\"\n                    },\n                    \"DocumentDate\": {\n                        \"type\": \"string\"\n                    },\n                    \"ShipDate\": {\n                        \"type\": \"string\"\n                    },\n                    \"ManufacturerPartNbr\": {\n                        \"type\": \"string\"\n                    },\n                    \"SupplierPartNbr\": {\n                        \"type\": \"string\"\n                    },\n                    \"JabilPartNbr\": {\n                        \"type\": \"string\"\n                    },\n                    \"Currency\": {\n                        \"type\": \"string\"\n                    },\n                    \"ShippedQty\": {\n                        \"type\": \"number\"\n                    },\n                    \"UnitPrice\": {\n                        \"type\": \"number\"\n                    },\n                    \"SalePriceLocalAmt\": {\n                        \"type\": \"number\"\n                    },\n                    \"SalePriceUSD\": {\n                        \"type\": \"number\"\n                    },\n                    \"ReturnQty\": {\n                        \"type\": \"number\"\n                    },\n                    \"ReturnUSD\": {\n                        \"type\": \"number\"\n                    },\n                    \"ReturnReason\": {\n                        \"type\": \"string\"\n                    },\n                    \"VerifiedBy\": {\n                        \"type\": \"string\"\n                    },\n                    \"SupplierBulkLoadID\": {\n                        \"type\": \"string\"\n                    },\n                    \"JabilBulkLoadID\": {\n                        \"type\": \"string\"\n                    },\n                    \"Year\": {\n                        \"type\": \"number\"\n                    },\n                    \"Month\": {\n                        \"type\": \"number\"\n                    },\n                    \"DocType\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}"
        },
        "AgreementHistory": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"txID\": {\n                \"type\": \"string\"\n            },\n            \"txTime\": {\n                \"type\": \"string\"\n            },\n            \"isDeleted\": {\n                \"type\": \"boolean\"\n            },\n            \"value\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"AgreementID\": {\n                        \"type\": \"string\"\n                    },\n                    \"SupplierID\": {\n                        \"type\": \"string\"\n                    },\n                    \"IsPrimary\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"FullName\": {\n                        \"type\": \"string\"\n                    },\n                    \"ShortName\": {\n                        \"type\": \"string\"\n                    },\n                    \"Status\": {\n                        \"type\": \"string\"\n                    },\n                    \"SignatureDate\": {\n                        \"type\": \"string\"\n                    },\n                    \"SignedBy\": {\n                        \"type\": \"string\"\n                    },\n                    \"ReferenceID\": {\n                        \"type\": \"string\"\n                    },\n                    \"ReferenceHash\": {\n                        \"type\": \"string\"\n                    },\n                    \"StartDate\": {\n                        \"type\": \"string\"\n                    },\n                    \"EndDate\": {\n                        \"type\": \"string\"\n                    },\n                    \"CollectionFrequency\": {\n                        \"type\": \"string\"\n                    },\n                    \"Type\": {\n                        \"type\": \"string\"\n                    },\n                    \"GrowthTerms\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"MinSaleGrowth\": {\n                                    \"type\": \"number\"\n                                },\n                                \"BonusPct\": {\n                                    \"type\": \"number\"\n                                }\n                            }\n                        }\n                    },\n                    \"StandardTerms\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"MinSaleAmt\": {\n                                    \"type\": \"number\"\n                                },\n                                \"BonusPct\": {\n                                    \"type\": \"number\"\n                                }\n                            }\n                        }\n                    },\n                    \"DocType\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"txID\": {\n                \"type\": \"string\"\n            },\n            \"txTime\": {\n                \"type\": \"string\"\n            },\n            \"isDeleted\": {\n                \"type\": \"boolean\"\n            },\n            \"value\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"AgreementID\": {\n                        \"type\": \"string\"\n                    },\n                    \"SupplierID\": {\n                        \"type\": \"string\"\n                    },\n                    \"IsPrimary\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"FullName\": {\n                        \"type\": \"string\"\n                    },\n                    \"ShortName\": {\n                        \"type\": \"string\"\n                    },\n                    \"Status\": {\n                        \"type\": \"string\"\n                    },\n                    \"SignatureDate\": {\n                        \"type\": \"string\"\n                    },\n                    \"SignedBy\": {\n                        \"type\": \"string\"\n                    },\n                    \"ReferenceID\": {\n                        \"type\": \"string\"\n                    },\n                    \"ReferenceHash\": {\n                        \"type\": \"string\"\n                    },\n                    \"StartDate\": {\n                        \"type\": \"string\"\n                    },\n                    \"EndDate\": {\n                        \"type\": \"string\"\n                    },\n                    \"CollectionFrequency\": {\n                        \"type\": \"string\"\n                    },\n                    \"Type\": {\n                        \"type\": \"string\"\n                    },\n                    \"GrowthTerms\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"MinSaleGrowth\": {\n                                    \"type\": \"number\"\n                                },\n                                \"BonusPct\": {\n                                    \"type\": \"number\"\n                                }\n                            }\n                        }\n                    },\n                    \"StandardTerms\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"MinSaleAmt\": {\n                                    \"type\": \"number\"\n                                },\n                                \"BonusPct\": {\n                                    \"type\": \"number\"\n                                }\n                            }\n                        }\n                    },\n                    \"DocType\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}"
        },
        "PurchaseHistory": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"txID\": {\n                \"type\": \"string\"\n            },\n            \"txTime\": {\n                \"type\": \"string\"\n            },\n            \"isDeleted\": {\n                \"type\": \"boolean\"\n            },\n            \"value\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"PurchaseOrderNbr\": {\n                        \"type\": \"string\"\n                    },\n                    \"SupplierID\": {\n                        \"type\": \"string\"\n                    },\n                    \"PurchaseOrderStatus\": {\n                        \"type\": \"string\"\n                    },\n                    \"DocumentID\": {\n                        \"type\": \"string\"\n                    },\n                    \"DocumentDate\": {\n                        \"type\": \"string\"\n                    },\n                    \"ShipDate\": {\n                        \"type\": \"string\"\n                    },\n                    \"ManufacturerPartNbr\": {\n                        \"type\": \"string\"\n                    },\n                    \"SupplierPartNbr\": {\n                        \"type\": \"string\"\n                    },\n                    \"JabilPartNbr\": {\n                        \"type\": \"string\"\n                    },\n                    \"Currency\": {\n                        \"type\": \"string\"\n                    },\n                    \"ShippedQty\": {\n                        \"type\": \"number\"\n                    },\n                    \"UnitPrice\": {\n                        \"type\": \"number\"\n                    },\n                    \"SalePriceLocalAmt\": {\n                        \"type\": \"number\"\n                    },\n                    \"SalePriceUSD\": {\n                        \"type\": \"number\"\n                    },\n                    \"ReturnQty\": {\n                        \"type\": \"number\"\n                    },\n                    \"ReturnUSD\": {\n                        \"type\": \"number\"\n                    },\n                    \"ReturnReason\": {\n                        \"type\": \"string\"\n                    },\n                    \"VerifiedBy\": {\n                        \"type\": \"string\"\n                    },\n                    \"SupplierBulkLoadID\": {\n                        \"type\": \"string\"\n                    },\n                    \"JabilBulkLoadID\": {\n                        \"type\": \"string\"\n                    },\n                    \"Year\": {\n                        \"type\": \"number\"\n                    },\n                    \"Month\": {\n                        \"type\": \"number\"\n                    },\n                    \"DocType\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"txID\": {\n                \"type\": \"string\"\n            },\n            \"txTime\": {\n                \"type\": \"string\"\n            },\n            \"isDeleted\": {\n                \"type\": \"boolean\"\n            },\n            \"value\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"PurchaseOrderNbr\": {\n                        \"type\": \"string\"\n                    },\n                    \"SupplierID\": {\n                        \"type\": \"string\"\n                    },\n                    \"PurchaseOrderStatus\": {\n                        \"type\": \"string\"\n                    },\n                    \"DocumentID\": {\n                        \"type\": \"string\"\n                    },\n                    \"DocumentDate\": {\n                        \"type\": \"string\"\n                    },\n                    \"ShipDate\": {\n                        \"type\": \"string\"\n                    },\n                    \"ManufacturerPartNbr\": {\n                        \"type\": \"string\"\n                    },\n                    \"SupplierPartNbr\": {\n                        \"type\": \"string\"\n                    },\n                    \"JabilPartNbr\": {\n                        \"type\": \"string\"\n                    },\n                    \"Currency\": {\n                        \"type\": \"string\"\n                    },\n                    \"ShippedQty\": {\n                        \"type\": \"number\"\n                    },\n                    \"UnitPrice\": {\n                        \"type\": \"number\"\n                    },\n                    \"SalePriceLocalAmt\": {\n                        \"type\": \"number\"\n                    },\n                    \"SalePriceUSD\": {\n                        \"type\": \"number\"\n                    },\n                    \"ReturnQty\": {\n                        \"type\": \"number\"\n                    },\n                    \"ReturnUSD\": {\n                        \"type\": \"number\"\n                    },\n                    \"ReturnReason\": {\n                        \"type\": \"string\"\n                    },\n                    \"VerifiedBy\": {\n                        \"type\": \"string\"\n                    },\n                    \"SupplierBulkLoadID\": {\n                        \"type\": \"string\"\n                    },\n                    \"JabilBulkLoadID\": {\n                        \"type\": \"string\"\n                    },\n                    \"Year\": {\n                        \"type\": \"number\"\n                    },\n                    \"Month\": {\n                        \"type\": \"number\"\n                    },\n                    \"DocType\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}"
        },
        "SupplierMap": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"key\": {\n                \"type\": \"string\"\n            },\n            \"value\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"SupplierID\": {\n                        \"type\": \"string\"\n                    },\n                    \"TenantID\": {\n                        \"type\": \"string\"\n                    },\n                    \"GlobalCode\": {\n                        \"type\": \"string\"\n                    },\n                    \"FullName\": {\n                        \"type\": \"string\"\n                    },\n                    \"ShortName\": {\n                        \"type\": \"string\"\n                    },\n                    \"Description\": {\n                        \"type\": \"string\"\n                    },\n                    \"Region\": {\n                        \"type\": \"string\"\n                    },\n                    \"Commodity\": {\n                        \"type\": \"string\"\n                    },\n                    \"HighLevelCommodity\": {\n                        \"type\": \"string\"\n                    },\n                    \"Address\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"Street1\": {\n                                \"type\": \"string\"\n                            },\n                            \"Street2\": {\n                                \"type\": \"string\"\n                            },\n                            \"Street3\": {\n                                \"type\": \"string\"\n                            },\n                            \"Street4\": {\n                                \"type\": \"string\"\n                            },\n                            \"CityOrMunicipality\": {\n                                \"type\": \"string\"\n                            },\n                            \"StateOrProvince\": {\n                                \"type\": \"string\"\n                            },\n                            \"CountyOrSubdivision\": {\n                                \"type\": \"string\"\n                            },\n                            \"ZipOrPostcode\": {\n                                \"type\": \"string\"\n                            },\n                            \"Country\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"WebsiteURL\": {\n                        \"type\": \"string\"\n                    },\n                    \"TickerSymbol\": {\n                        \"type\": \"string\"\n                    },\n                    \"DocType\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"key\": {\n                \"type\": \"string\"\n            },\n            \"value\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"SupplierID\": {\n                        \"type\": \"string\"\n                    },\n                    \"TenantID\": {\n                        \"type\": \"string\"\n                    },\n                    \"GlobalCode\": {\n                        \"type\": \"string\"\n                    },\n                    \"FullName\": {\n                        \"type\": \"string\"\n                    },\n                    \"ShortName\": {\n                        \"type\": \"string\"\n                    },\n                    \"Description\": {\n                        \"type\": \"string\"\n                    },\n                    \"Region\": {\n                        \"type\": \"string\"\n                    },\n                    \"Commodity\": {\n                        \"type\": \"string\"\n                    },\n                    \"HighLevelCommodity\": {\n                        \"type\": \"string\"\n                    },\n                    \"Address\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"Street1\": {\n                                \"type\": \"string\"\n                            },\n                            \"Street2\": {\n                                \"type\": \"string\"\n                            },\n                            \"Street3\": {\n                                \"type\": \"string\"\n                            },\n                            \"Street4\": {\n                                \"type\": \"string\"\n                            },\n                            \"CityOrMunicipality\": {\n                                \"type\": \"string\"\n                            },\n                            \"StateOrProvince\": {\n                                \"type\": \"string\"\n                            },\n                            \"CountyOrSubdivision\": {\n                                \"type\": \"string\"\n                            },\n                            \"ZipOrPostcode\": {\n                                \"type\": \"string\"\n                            },\n                            \"Country\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"WebsiteURL\": {\n                        \"type\": \"string\"\n                    },\n                    \"TickerSymbol\": {\n                        \"type\": \"string\"\n                    },\n                    \"DocType\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}"
        }
    },
    "connections": {},
    "contrib": "W3sicmVmIjoiZ2l0aHViLmNvbS9USUJDT1NvZnR3YXJlL2RvdmV0YWlsLWNvbnRyaWIvaHlwZXJsZWRnZXItZmFicmljL2ZhYnJpYyIsInMzbG9jYXRpb24iOiJ7VVNFUklEfS9mYWJyaWMifSx7InJlZiI6ImdpdGh1Yi5jb20vcHJvamVjdC1mbG9nby9jb250cmliL2FjdGl2aXR5L2xvZyIsInMzbG9jYXRpb24iOiJ7VVNFUklEfS9EZWZhdWx0L2FjdGl2aXR5L2xvZyJ9LHsicmVmIjoiZ2l0aHViLmNvbS9wcm9qZWN0LWZsb2dvL2NvbnRyaWIvYWN0aXZpdHkvZXJyb3IiLCJzM2xvY2F0aW9uIjoie1VTRVJJRH0vRGVmYXVsdC9hY3Rpdml0eS9lcnJvciJ9LHsicmVmIjoiZ2l0LnRpYmNvLmNvbS9naXQvcHJvZHVjdC9pcGFhcy93aS1jb250cmliLmdpdC9jb250cmlidXRpb25zL0dlbmVyYWwiLCJzM2xvY2F0aW9uIjoiVGliY28vR2VuZXJhbCJ9LHsicmVmIjoiZ2l0aHViLmNvbS9USUJDT1NvZnR3YXJlL2RvdmV0YWlsLWNvbnRyaWIvaHlwZXJsZWRnZXItZmFicmljL2Z1bmN0aW9uL2RvdmV0YWlsIiwiczNsb2NhdGlvbiI6ImZsb2dvL2RvdmV0YWlsIn1d",
    "fe_metadata": "UEsDBAoAAAAIAFsVVlGrqSRGFQAAABMAAAAIAAAAYXBwLmpzb26rViopykxPTy1yy8kvL1ayio6tBQBQSwECFAAKAAAACABbFVZRq6kkRhUAAAATAAAACAAAAAAAAAAAAAAAAAAAAAAAYXBwLmpzb25QSwUGAAAAAAEAAQA2AAAAOwAAAAAA"
}
